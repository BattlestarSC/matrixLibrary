Taking determinant of the following matrix

  2.5000    17.0000    2.0000    4.0000    13.0000  
  72.0000    58.0000    22.0000    19.0000    12.0000  
  21.0000    14.0000    81.0000    84.0000    1.0000  
  76.0000    51.0000    74.0000    83.0000    63.0000  
  7.0000    99.0000    90.0000    85.0000    66.0000  




New limit is at position 0
Result will equal 1.000000 * 2.500000 * recurse

--new limit applied to position 0
new limit: 


  2
  3
  4
Old limit

  1
  2
  3
  4

Result = itself plus 1.000000 * 58.000000 * recurse

----new limit applied to position 0
new limit: 



  3
  4
Old limit


  2
  3
  4

Result = itself plus 1.000000 * 81.000000 * recurse

------Limit mask has 2 valid spots, 3, 4
Computations: 123.000000 = (83.000000 * 66.000000) - (85.000000 * 63.000000)
Returning result
----new limit applied to position 1
new limit: 


  2

  4
Old limit


  2
  3
  4

Result = itself plus -1.000000 * 84.000000 * recurse

------Limit mask has 2 valid spots, 2, 4
Computations: -786.000000 = (74.000000 * 66.000000) - (90.000000 * 63.000000)
Returning result
----new limit applied to position 2
new limit: 


  2
  3

Old limit


  2
  3
  4

Result = itself plus 1.000000 * 1.000000 * recurse

------Limit mask has 2 valid spots, 2, 3
Computations: -1180.000000 = (74.000000 * 85.000000) - (90.000000 * 83.000000)
Returning result
--new limit applied to position 1
new limit: 

  1

  3
  4
Old limit

  1
  2
  3
  4

Result = itself plus -1.000000 * 22.000000 * recurse

----new limit applied to position 0
new limit: 



  3
  4
Old limit

  1

  3
  4

Result = itself plus 1.000000 * 14.000000 * recurse

------Limit mask has 2 valid spots, 3, 4
Computations: 123.000000 = (83.000000 * 66.000000) - (85.000000 * 63.000000)
Returning result
----new limit applied to position 1
new limit: 

  1


  4
Old limit

  1

  3
  4

Result = itself plus -1.000000 * 84.000000 * recurse

------Limit mask has 2 valid spots, 1, 4
Computations: -2871.000000 = (51.000000 * 66.000000) - (99.000000 * 63.000000)
Returning result
----new limit applied to position 2
new limit: 

  1

  3

Old limit

  1

  3
  4

Result = itself plus 1.000000 * 1.000000 * recurse

------Limit mask has 2 valid spots, 1, 3
Computations: -3882.000000 = (51.000000 * 85.000000) - (99.000000 * 83.000000)
Returning result
--new limit applied to position 2
new limit: 

  1
  2

  4
Old limit

  1
  2
  3
  4

Result = itself plus 1.000000 * 19.000000 * recurse

----new limit applied to position 0
new limit: 


  2

  4
Old limit

  1
  2

  4

Result = itself plus 1.000000 * 14.000000 * recurse

------Limit mask has 2 valid spots, 2, 4
Computations: -786.000000 = (74.000000 * 66.000000) - (90.000000 * 63.000000)
Returning result
----new limit applied to position 1
new limit: 

  1


  4
Old limit

  1
  2

  4

Result = itself plus -1.000000 * 81.000000 * recurse

------Limit mask has 2 valid spots, 1, 4
Computations: -2871.000000 = (51.000000 * 66.000000) - (99.000000 * 63.000000)
Returning result
----new limit applied to position 2
new limit: 

  1
  2


Old limit

  1
  2

  4

Result = itself plus 1.000000 * 1.000000 * recurse

------Limit mask has 2 valid spots, 1, 2
Computations: -2736.000000 = (51.000000 * 90.000000) - (99.000000 * 74.000000)
Returning result
--new limit applied to position 3
new limit: 

  1
  2
  3

Old limit

  1
  2
  3
  4

Result = itself plus -1.000000 * 12.000000 * recurse

----new limit applied to position 0
new limit: 


  2
  3

Old limit

  1
  2
  3


Result = itself plus 1.000000 * 14.000000 * recurse

------Limit mask has 2 valid spots, 2, 3
Computations: -1180.000000 = (74.000000 * 85.000000) - (90.000000 * 83.000000)
Returning result
----new limit applied to position 1
new limit: 

  1

  3

Old limit

  1
  2
  3


Result = itself plus -1.000000 * 81.000000 * recurse

------Limit mask has 2 valid spots, 1, 3
Computations: -3882.000000 = (51.000000 * 85.000000) - (99.000000 * 83.000000)
Returning result
----new limit applied to position 2
new limit: 

  1
  2


Old limit

  1
  2
  3


Result = itself plus 1.000000 * 84.000000 * recurse

------Limit mask has 2 valid spots, 1, 2
Computations: -2736.000000 = (51.000000 * 90.000000) - (99.000000 * 74.000000)
Returning result

New limit is at position 1
Result will equal -1.000000 * 17.000000 * recurse

--new limit applied to position 0
new limit: 


  2
  3
  4
Old limit
  0

  2
  3
  4

Result = itself plus 1.000000 * 72.000000 * recurse

----new limit applied to position 0
new limit: 



  3
  4
Old limit


  2
  3
  4

Result = itself plus 1.000000 * 81.000000 * recurse

------Limit mask has 2 valid spots, 3, 4
Computations: 123.000000 = (83.000000 * 66.000000) - (85.000000 * 63.000000)
Returning result
----new limit applied to position 1
new limit: 


  2

  4
Old limit


  2
  3
  4

Result = itself plus -1.000000 * 84.000000 * recurse

------Limit mask has 2 valid spots, 2, 4
Computations: -786.000000 = (74.000000 * 66.000000) - (90.000000 * 63.000000)
Returning result
----new limit applied to position 2
new limit: 


  2
  3

Old limit


  2
  3
  4

Result = itself plus 1.000000 * 1.000000 * recurse

------Limit mask has 2 valid spots, 2, 3
Computations: -1180.000000 = (74.000000 * 85.000000) - (90.000000 * 83.000000)
Returning result
--new limit applied to position 1
new limit: 
  0


  3
  4
Old limit
  0

  2
  3
  4

Result = itself plus -1.000000 * 22.000000 * recurse

----new limit applied to position 0
new limit: 



  3
  4
Old limit
  0


  3
  4

Result = itself plus 1.000000 * 21.000000 * recurse

------Limit mask has 2 valid spots, 3, 4
Computations: 123.000000 = (83.000000 * 66.000000) - (85.000000 * 63.000000)
Returning result
----new limit applied to position 1
new limit: 
  0



  4
Old limit
  0


  3
  4

Result = itself plus -1.000000 * 84.000000 * recurse

------Limit mask has 2 valid spots, 0, 4
Computations: 4575.000000 = (76.000000 * 66.000000) - (7.000000 * 63.000000)
Returning result
----new limit applied to position 2
new limit: 
  0


  3

Old limit
  0


  3
  4

Result = itself plus 1.000000 * 1.000000 * recurse

------Limit mask has 2 valid spots, 0, 3
Computations: 5879.000000 = (76.000000 * 85.000000) - (7.000000 * 83.000000)
Returning result
--new limit applied to position 2
new limit: 
  0

  2

  4
Old limit
  0

  2
  3
  4

Result = itself plus 1.000000 * 19.000000 * recurse

----new limit applied to position 0
new limit: 


  2

  4
Old limit
  0

  2

  4

Result = itself plus 1.000000 * 21.000000 * recurse

------Limit mask has 2 valid spots, 2, 4
Computations: -786.000000 = (74.000000 * 66.000000) - (90.000000 * 63.000000)
Returning result
----new limit applied to position 1
new limit: 
  0



  4
Old limit
  0

  2

  4

Result = itself plus -1.000000 * 81.000000 * recurse

------Limit mask has 2 valid spots, 0, 4
Computations: 4575.000000 = (76.000000 * 66.000000) - (7.000000 * 63.000000)
Returning result
----new limit applied to position 2
new limit: 
  0

  2


Old limit
  0

  2

  4

Result = itself plus 1.000000 * 1.000000 * recurse

------Limit mask has 2 valid spots, 0, 2
Computations: 6322.000000 = (76.000000 * 90.000000) - (7.000000 * 74.000000)
Returning result
--new limit applied to position 3
new limit: 
  0

  2
  3

Old limit
  0

  2
  3
  4

Result = itself plus -1.000000 * 12.000000 * recurse

----new limit applied to position 0
new limit: 


  2
  3

Old limit
  0

  2
  3


Result = itself plus 1.000000 * 21.000000 * recurse

------Limit mask has 2 valid spots, 2, 3
Computations: -1180.000000 = (74.000000 * 85.000000) - (90.000000 * 83.000000)
Returning result
----new limit applied to position 1
new limit: 
  0


  3

Old limit
  0

  2
  3


Result = itself plus -1.000000 * 81.000000 * recurse

------Limit mask has 2 valid spots, 0, 3
Computations: 5879.000000 = (76.000000 * 85.000000) - (7.000000 * 83.000000)
Returning result
----new limit applied to position 2
new limit: 
  0

  2


Old limit
  0

  2
  3


Result = itself plus 1.000000 * 84.000000 * recurse

------Limit mask has 2 valid spots, 0, 2
Computations: 6322.000000 = (76.000000 * 90.000000) - (7.000000 * 74.000000)
Returning result

New limit is at position 2
Result will equal 1.000000 * 2.000000 * recurse

--new limit applied to position 0
new limit: 

  1

  3
  4
Old limit
  0
  1

  3
  4

Result = itself plus 1.000000 * 72.000000 * recurse

----new limit applied to position 0
new limit: 



  3
  4
Old limit

  1

  3
  4

Result = itself plus 1.000000 * 14.000000 * recurse

------Limit mask has 2 valid spots, 3, 4
Computations: 123.000000 = (83.000000 * 66.000000) - (85.000000 * 63.000000)
Returning result
----new limit applied to position 1
new limit: 

  1


  4
Old limit

  1

  3
  4

Result = itself plus -1.000000 * 84.000000 * recurse

------Limit mask has 2 valid spots, 1, 4
Computations: -2871.000000 = (51.000000 * 66.000000) - (99.000000 * 63.000000)
Returning result
----new limit applied to position 2
new limit: 

  1

  3

Old limit

  1

  3
  4

Result = itself plus 1.000000 * 1.000000 * recurse

------Limit mask has 2 valid spots, 1, 3
Computations: -3882.000000 = (51.000000 * 85.000000) - (99.000000 * 83.000000)
Returning result
--new limit applied to position 1
new limit: 
  0


  3
  4
Old limit
  0
  1

  3
  4

Result = itself plus -1.000000 * 58.000000 * recurse

----new limit applied to position 0
new limit: 



  3
  4
Old limit
  0


  3
  4

Result = itself plus 1.000000 * 21.000000 * recurse

------Limit mask has 2 valid spots, 3, 4
Computations: 123.000000 = (83.000000 * 66.000000) - (85.000000 * 63.000000)
Returning result
----new limit applied to position 1
new limit: 
  0



  4
Old limit
  0


  3
  4

Result = itself plus -1.000000 * 84.000000 * recurse

------Limit mask has 2 valid spots, 0, 4
Computations: 4575.000000 = (76.000000 * 66.000000) - (7.000000 * 63.000000)
Returning result
----new limit applied to position 2
new limit: 
  0


  3

Old limit
  0


  3
  4

Result = itself plus 1.000000 * 1.000000 * recurse

------Limit mask has 2 valid spots, 0, 3
Computations: 5879.000000 = (76.000000 * 85.000000) - (7.000000 * 83.000000)
Returning result
--new limit applied to position 2
new limit: 
  0
  1


  4
Old limit
  0
  1

  3
  4

Result = itself plus 1.000000 * 19.000000 * recurse

----new limit applied to position 0
new limit: 

  1


  4
Old limit
  0
  1


  4

Result = itself plus 1.000000 * 21.000000 * recurse

------Limit mask has 2 valid spots, 1, 4
Computations: -2871.000000 = (51.000000 * 66.000000) - (99.000000 * 63.000000)
Returning result
----new limit applied to position 1
new limit: 
  0



  4
Old limit
  0
  1


  4

Result = itself plus -1.000000 * 14.000000 * recurse

------Limit mask has 2 valid spots, 0, 4
Computations: 4575.000000 = (76.000000 * 66.000000) - (7.000000 * 63.000000)
Returning result
----new limit applied to position 2
new limit: 
  0
  1



Old limit
  0
  1


  4

Result = itself plus 1.000000 * 1.000000 * recurse

------Limit mask has 2 valid spots, 0, 1
Computations: 7167.000000 = (76.000000 * 99.000000) - (7.000000 * 51.000000)
Returning result
--new limit applied to position 3
new limit: 
  0
  1

  3

Old limit
  0
  1

  3
  4

Result = itself plus -1.000000 * 12.000000 * recurse

----new limit applied to position 0
new limit: 

  1

  3

Old limit
  0
  1

  3


Result = itself plus 1.000000 * 21.000000 * recurse

------Limit mask has 2 valid spots, 1, 3
Computations: -3882.000000 = (51.000000 * 85.000000) - (99.000000 * 83.000000)
Returning result
----new limit applied to position 1
new limit: 
  0


  3

Old limit
  0
  1

  3


Result = itself plus -1.000000 * 14.000000 * recurse

------Limit mask has 2 valid spots, 0, 3
Computations: 5879.000000 = (76.000000 * 85.000000) - (7.000000 * 83.000000)
Returning result
----new limit applied to position 2
new limit: 
  0
  1



Old limit
  0
  1

  3


Result = itself plus 1.000000 * 84.000000 * recurse

------Limit mask has 2 valid spots, 0, 1
Computations: 7167.000000 = (76.000000 * 99.000000) - (7.000000 * 51.000000)
Returning result

New limit is at position 3
Result will equal -1.000000 * 4.000000 * recurse

--new limit applied to position 0
new limit: 

  1
  2

  4
Old limit
  0
  1
  2

  4

Result = itself plus 1.000000 * 72.000000 * recurse

----new limit applied to position 0
new limit: 


  2

  4
Old limit

  1
  2

  4

Result = itself plus 1.000000 * 14.000000 * recurse

------Limit mask has 2 valid spots, 2, 4
Computations: -786.000000 = (74.000000 * 66.000000) - (90.000000 * 63.000000)
Returning result
----new limit applied to position 1
new limit: 

  1


  4
Old limit

  1
  2

  4

Result = itself plus -1.000000 * 81.000000 * recurse

------Limit mask has 2 valid spots, 1, 4
Computations: -2871.000000 = (51.000000 * 66.000000) - (99.000000 * 63.000000)
Returning result
----new limit applied to position 2
new limit: 

  1
  2


Old limit

  1
  2

  4

Result = itself plus 1.000000 * 1.000000 * recurse

------Limit mask has 2 valid spots, 1, 2
Computations: -2736.000000 = (51.000000 * 90.000000) - (99.000000 * 74.000000)
Returning result
--new limit applied to position 1
new limit: 
  0

  2

  4
Old limit
  0
  1
  2

  4

Result = itself plus -1.000000 * 58.000000 * recurse

----new limit applied to position 0
new limit: 


  2

  4
Old limit
  0

  2

  4

Result = itself plus 1.000000 * 21.000000 * recurse

------Limit mask has 2 valid spots, 2, 4
Computations: -786.000000 = (74.000000 * 66.000000) - (90.000000 * 63.000000)
Returning result
----new limit applied to position 1
new limit: 
  0



  4
Old limit
  0

  2

  4

Result = itself plus -1.000000 * 81.000000 * recurse

------Limit mask has 2 valid spots, 0, 4
Computations: 4575.000000 = (76.000000 * 66.000000) - (7.000000 * 63.000000)
Returning result
----new limit applied to position 2
new limit: 
  0

  2


Old limit
  0

  2

  4

Result = itself plus 1.000000 * 1.000000 * recurse

------Limit mask has 2 valid spots, 0, 2
Computations: 6322.000000 = (76.000000 * 90.000000) - (7.000000 * 74.000000)
Returning result
--new limit applied to position 2
new limit: 
  0
  1


  4
Old limit
  0
  1
  2

  4

Result = itself plus 1.000000 * 22.000000 * recurse

----new limit applied to position 0
new limit: 

  1


  4
Old limit
  0
  1


  4

Result = itself plus 1.000000 * 21.000000 * recurse

------Limit mask has 2 valid spots, 1, 4
Computations: -2871.000000 = (51.000000 * 66.000000) - (99.000000 * 63.000000)
Returning result
----new limit applied to position 1
new limit: 
  0



  4
Old limit
  0
  1


  4

Result = itself plus -1.000000 * 14.000000 * recurse

------Limit mask has 2 valid spots, 0, 4
Computations: 4575.000000 = (76.000000 * 66.000000) - (7.000000 * 63.000000)
Returning result
----new limit applied to position 2
new limit: 
  0
  1



Old limit
  0
  1


  4

Result = itself plus 1.000000 * 1.000000 * recurse

------Limit mask has 2 valid spots, 0, 1
Computations: 7167.000000 = (76.000000 * 99.000000) - (7.000000 * 51.000000)
Returning result
--new limit applied to position 3
new limit: 
  0
  1
  2


Old limit
  0
  1
  2

  4

Result = itself plus -1.000000 * 12.000000 * recurse

----new limit applied to position 0
new limit: 

  1
  2


Old limit
  0
  1
  2



Result = itself plus 1.000000 * 21.000000 * recurse

------Limit mask has 2 valid spots, 1, 2
Computations: -2736.000000 = (51.000000 * 90.000000) - (99.000000 * 74.000000)
Returning result
----new limit applied to position 1
new limit: 
  0

  2


Old limit
  0
  1
  2



Result = itself plus -1.000000 * 14.000000 * recurse

------Limit mask has 2 valid spots, 0, 2
Computations: 6322.000000 = (76.000000 * 90.000000) - (7.000000 * 74.000000)
Returning result
----new limit applied to position 2
new limit: 
  0
  1



Old limit
  0
  1
  2



Result = itself plus 1.000000 * 81.000000 * recurse

------Limit mask has 2 valid spots, 0, 1
Computations: 7167.000000 = (76.000000 * 99.000000) - (7.000000 * 51.000000)
Returning result

New limit is at position 4
Result will equal 1.000000 * 13.000000 * recurse

--new limit applied to position 0
new limit: 

  1
  2
  3

Old limit
  0
  1
  2
  3


Result = itself plus 1.000000 * 72.000000 * recurse

----new limit applied to position 0
new limit: 


  2
  3

Old limit

  1
  2
  3


Result = itself plus 1.000000 * 14.000000 * recurse

------Limit mask has 2 valid spots, 2, 3
Computations: -1180.000000 = (74.000000 * 85.000000) - (90.000000 * 83.000000)
Returning result
----new limit applied to position 1
new limit: 

  1

  3

Old limit

  1
  2
  3


Result = itself plus -1.000000 * 81.000000 * recurse

------Limit mask has 2 valid spots, 1, 3
Computations: -3882.000000 = (51.000000 * 85.000000) - (99.000000 * 83.000000)
Returning result
----new limit applied to position 2
new limit: 

  1
  2


Old limit

  1
  2
  3


Result = itself plus 1.000000 * 84.000000 * recurse

------Limit mask has 2 valid spots, 1, 2
Computations: -2736.000000 = (51.000000 * 90.000000) - (99.000000 * 74.000000)
Returning result
--new limit applied to position 1
new limit: 
  0

  2
  3

Old limit
  0
  1
  2
  3


Result = itself plus -1.000000 * 58.000000 * recurse

----new limit applied to position 0
new limit: 


  2
  3

Old limit
  0

  2
  3


Result = itself plus 1.000000 * 21.000000 * recurse

------Limit mask has 2 valid spots, 2, 3
Computations: -1180.000000 = (74.000000 * 85.000000) - (90.000000 * 83.000000)
Returning result
----new limit applied to position 1
new limit: 
  0


  3

Old limit
  0

  2
  3


Result = itself plus -1.000000 * 81.000000 * recurse

------Limit mask has 2 valid spots, 0, 3
Computations: 5879.000000 = (76.000000 * 85.000000) - (7.000000 * 83.000000)
Returning result
----new limit applied to position 2
new limit: 
  0

  2


Old limit
  0

  2
  3


Result = itself plus 1.000000 * 84.000000 * recurse

------Limit mask has 2 valid spots, 0, 2
Computations: 6322.000000 = (76.000000 * 90.000000) - (7.000000 * 74.000000)
Returning result
--new limit applied to position 2
new limit: 
  0
  1

  3

Old limit
  0
  1
  2
  3


Result = itself plus 1.000000 * 22.000000 * recurse

----new limit applied to position 0
new limit: 

  1

  3

Old limit
  0
  1

  3


Result = itself plus 1.000000 * 21.000000 * recurse

------Limit mask has 2 valid spots, 1, 3
Computations: -3882.000000 = (51.000000 * 85.000000) - (99.000000 * 83.000000)
Returning result
----new limit applied to position 1
new limit: 
  0


  3

Old limit
  0
  1

  3


Result = itself plus -1.000000 * 14.000000 * recurse

------Limit mask has 2 valid spots, 0, 3
Computations: 5879.000000 = (76.000000 * 85.000000) - (7.000000 * 83.000000)
Returning result
----new limit applied to position 2
new limit: 
  0
  1



Old limit
  0
  1

  3


Result = itself plus 1.000000 * 84.000000 * recurse

------Limit mask has 2 valid spots, 0, 1
Computations: 7167.000000 = (76.000000 * 99.000000) - (7.000000 * 51.000000)
Returning result
--new limit applied to position 3
new limit: 
  0
  1
  2


Old limit
  0
  1
  2
  3


Result = itself plus -1.000000 * 19.000000 * recurse

----new limit applied to position 0
new limit: 

  1
  2


Old limit
  0
  1
  2



Result = itself plus 1.000000 * 21.000000 * recurse

------Limit mask has 2 valid spots, 1, 2
Computations: -2736.000000 = (51.000000 * 90.000000) - (99.000000 * 74.000000)
Returning result
----new limit applied to position 1
new limit: 
  0

  2


Old limit
  0
  1
  2



Result = itself plus -1.000000 * 14.000000 * recurse

------Limit mask has 2 valid spots, 0, 2
Computations: 6322.000000 = (76.000000 * 90.000000) - (7.000000 * 74.000000)
Returning result
----new limit applied to position 2
new limit: 
  0
  1



Old limit
  0
  1
  2



Result = itself plus 1.000000 * 81.000000 * recurse

------Limit mask has 2 valid spots, 0, 1
Computations: 7167.000000 = (76.000000 * 99.000000) - (7.000000 * 51.000000)
Returning result
--------------------------------------------------------------------------------
Taking determinant of the following matrix

  2.5000    17.0000    2.0000    4.0000    13.0000  
  72.0000    58.0000    22.0000    19.0000    12.0000  
  21.0000    14.0000    81.0000    84.0000    1.0000  
  76.0000    51.0000    74.0000    83.0000    -3.5000  
  7.0000    99.0000    90.0000    85.0000    66.0000  




New limit is at position 0
Result will equal 1.000000 * 2.500000 * recurse

--new limit applied to position 0
new limit: 


  2
  3
  4
Old limit

  1
  2
  3
  4

Result = itself plus 1.000000 * 58.000000 * recurse

----new limit applied to position 0
new limit: 



  3
  4
Old limit


  2
  3
  4

Result = itself plus 1.000000 * 81.000000 * recurse

------Limit mask has 2 valid spots, 3, 4
Computations: 5775.500000 = (83.000000 * 66.000000) - (85.000000 * -3.500000)
Returning result
----new limit applied to position 1
new limit: 


  2

  4
Old limit


  2
  3
  4

Result = itself plus -1.000000 * 84.000000 * recurse

------Limit mask has 2 valid spots, 2, 4
Computations: 5199.000000 = (74.000000 * 66.000000) - (90.000000 * -3.500000)
Returning result
----new limit applied to position 2
new limit: 


  2
  3

Old limit


  2
  3
  4

Result = itself plus 1.000000 * 1.000000 * recurse

------Limit mask has 2 valid spots, 2, 3
Computations: -1180.000000 = (74.000000 * 85.000000) - (90.000000 * 83.000000)
Returning result
--new limit applied to position 1
new limit: 

  1

  3
  4
Old limit

  1
  2
  3
  4

Result = itself plus -1.000000 * 22.000000 * recurse

----new limit applied to position 0
new limit: 



  3
  4
Old limit

  1

  3
  4

Result = itself plus 1.000000 * 14.000000 * recurse

------Limit mask has 2 valid spots, 3, 4
Computations: 5775.500000 = (83.000000 * 66.000000) - (85.000000 * -3.500000)
Returning result
----new limit applied to position 1
new limit: 

  1


  4
Old limit

  1

  3
  4

Result = itself plus -1.000000 * 84.000000 * recurse

------Limit mask has 2 valid spots, 1, 4
Computations: 3712.500000 = (51.000000 * 66.000000) - (99.000000 * -3.500000)
Returning result
----new limit applied to position 2
new limit: 

  1

  3

Old limit

  1

  3
  4

Result = itself plus 1.000000 * 1.000000 * recurse

------Limit mask has 2 valid spots, 1, 3
Computations: -3882.000000 = (51.000000 * 85.000000) - (99.000000 * 83.000000)
Returning result
--new limit applied to position 2
new limit: 

  1
  2

  4
Old limit

  1
  2
  3
  4

Result = itself plus 1.000000 * 19.000000 * recurse

----new limit applied to position 0
new limit: 


  2

  4
Old limit

  1
  2

  4

Result = itself plus 1.000000 * 14.000000 * recurse

------Limit mask has 2 valid spots, 2, 4
Computations: 5199.000000 = (74.000000 * 66.000000) - (90.000000 * -3.500000)
Returning result
----new limit applied to position 1
new limit: 

  1


  4
Old limit

  1
  2

  4

Result = itself plus -1.000000 * 81.000000 * recurse

------Limit mask has 2 valid spots, 1, 4
Computations: 3712.500000 = (51.000000 * 66.000000) - (99.000000 * -3.500000)
Returning result
----new limit applied to position 2
new limit: 

  1
  2


Old limit

  1
  2

  4

Result = itself plus 1.000000 * 1.000000 * recurse

------Limit mask has 2 valid spots, 1, 2
Computations: -2736.000000 = (51.000000 * 90.000000) - (99.000000 * 74.000000)
Returning result
--new limit applied to position 3
new limit: 

  1
  2
  3

Old limit

  1
  2
  3
  4

Result = itself plus -1.000000 * 12.000000 * recurse

----new limit applied to position 0
new limit: 


  2
  3

Old limit

  1
  2
  3


Result = itself plus 1.000000 * 14.000000 * recurse

------Limit mask has 2 valid spots, 2, 3
Computations: -1180.000000 = (74.000000 * 85.000000) - (90.000000 * 83.000000)
Returning result
----new limit applied to position 1
new limit: 

  1

  3

Old limit

  1
  2
  3


Result = itself plus -1.000000 * 81.000000 * recurse

------Limit mask has 2 valid spots, 1, 3
Computations: -3882.000000 = (51.000000 * 85.000000) - (99.000000 * 83.000000)
Returning result
----new limit applied to position 2
new limit: 

  1
  2


Old limit

  1
  2
  3


Result = itself plus 1.000000 * 84.000000 * recurse

------Limit mask has 2 valid spots, 1, 2
Computations: -2736.000000 = (51.000000 * 90.000000) - (99.000000 * 74.000000)
Returning result

New limit is at position 1
Result will equal -1.000000 * 17.000000 * recurse

--new limit applied to position 0
new limit: 


  2
  3
  4
Old limit
  0

  2
  3
  4

Result = itself plus 1.000000 * 72.000000 * recurse

----new limit applied to position 0
new limit: 



  3
  4
Old limit


  2
  3
  4

Result = itself plus 1.000000 * 81.000000 * recurse

------Limit mask has 2 valid spots, 3, 4
Computations: 5775.500000 = (83.000000 * 66.000000) - (85.000000 * -3.500000)
Returning result
----new limit applied to position 1
new limit: 


  2

  4
Old limit


  2
  3
  4

Result = itself plus -1.000000 * 84.000000 * recurse

------Limit mask has 2 valid spots, 2, 4
Computations: 5199.000000 = (74.000000 * 66.000000) - (90.000000 * -3.500000)
Returning result
----new limit applied to position 2
new limit: 


  2
  3

Old limit


  2
  3
  4

Result = itself plus 1.000000 * 1.000000 * recurse

------Limit mask has 2 valid spots, 2, 3
Computations: -1180.000000 = (74.000000 * 85.000000) - (90.000000 * 83.000000)
Returning result
--new limit applied to position 1
new limit: 
  0


  3
  4
Old limit
  0

  2
  3
  4

Result = itself plus -1.000000 * 22.000000 * recurse

----new limit applied to position 0
new limit: 



  3
  4
Old limit
  0


  3
  4

Result = itself plus 1.000000 * 21.000000 * recurse

------Limit mask has 2 valid spots, 3, 4
Computations: 5775.500000 = (83.000000 * 66.000000) - (85.000000 * -3.500000)
Returning result
----new limit applied to position 1
new limit: 
  0



  4
Old limit
  0


  3
  4

Result = itself plus -1.000000 * 84.000000 * recurse

------Limit mask has 2 valid spots, 0, 4
Computations: 5040.500000 = (76.000000 * 66.000000) - (7.000000 * -3.500000)
Returning result
----new limit applied to position 2
new limit: 
  0


  3

Old limit
  0


  3
  4

Result = itself plus 1.000000 * 1.000000 * recurse

------Limit mask has 2 valid spots, 0, 3
Computations: 5879.000000 = (76.000000 * 85.000000) - (7.000000 * 83.000000)
Returning result
--new limit applied to position 2
new limit: 
  0

  2

  4
Old limit
  0

  2
  3
  4

Result = itself plus 1.000000 * 19.000000 * recurse

----new limit applied to position 0
new limit: 


  2

  4
Old limit
  0

  2

  4

Result = itself plus 1.000000 * 21.000000 * recurse

------Limit mask has 2 valid spots, 2, 4
Computations: 5199.000000 = (74.000000 * 66.000000) - (90.000000 * -3.500000)
Returning result
----new limit applied to position 1
new limit: 
  0



  4
Old limit
  0

  2

  4

Result = itself plus -1.000000 * 81.000000 * recurse

------Limit mask has 2 valid spots, 0, 4
Computations: 5040.500000 = (76.000000 * 66.000000) - (7.000000 * -3.500000)
Returning result
----new limit applied to position 2
new limit: 
  0

  2


Old limit
  0

  2

  4

Result = itself plus 1.000000 * 1.000000 * recurse

------Limit mask has 2 valid spots, 0, 2
Computations: 6322.000000 = (76.000000 * 90.000000) - (7.000000 * 74.000000)
Returning result
--new limit applied to position 3
new limit: 
  0

  2
  3

Old limit
  0

  2
  3
  4

Result = itself plus -1.000000 * 12.000000 * recurse

----new limit applied to position 0
new limit: 


  2
  3

Old limit
  0

  2
  3


Result = itself plus 1.000000 * 21.000000 * recurse

------Limit mask has 2 valid spots, 2, 3
Computations: -1180.000000 = (74.000000 * 85.000000) - (90.000000 * 83.000000)
Returning result
----new limit applied to position 1
new limit: 
  0


  3

Old limit
  0

  2
  3


Result = itself plus -1.000000 * 81.000000 * recurse

------Limit mask has 2 valid spots, 0, 3
Computations: 5879.000000 = (76.000000 * 85.000000) - (7.000000 * 83.000000)
Returning result
----new limit applied to position 2
new limit: 
  0

  2


Old limit
  0

  2
  3


Result = itself plus 1.000000 * 84.000000 * recurse

------Limit mask has 2 valid spots, 0, 2
Computations: 6322.000000 = (76.000000 * 90.000000) - (7.000000 * 74.000000)
Returning result

New limit is at position 2
Result will equal 1.000000 * 2.000000 * recurse

--new limit applied to position 0
new limit: 

  1

  3
  4
Old limit
  0
  1

  3
  4

Result = itself plus 1.000000 * 72.000000 * recurse

----new limit applied to position 0
new limit: 



  3
  4
Old limit

  1

  3
  4

Result = itself plus 1.000000 * 14.000000 * recurse

------Limit mask has 2 valid spots, 3, 4
Computations: 5775.500000 = (83.000000 * 66.000000) - (85.000000 * -3.500000)
Returning result
----new limit applied to position 1
new limit: 

  1


  4
Old limit

  1

  3
  4

Result = itself plus -1.000000 * 84.000000 * recurse

------Limit mask has 2 valid spots, 1, 4
Computations: 3712.500000 = (51.000000 * 66.000000) - (99.000000 * -3.500000)
Returning result
----new limit applied to position 2
new limit: 

  1

  3

Old limit

  1

  3
  4

Result = itself plus 1.000000 * 1.000000 * recurse

------Limit mask has 2 valid spots, 1, 3
Computations: -3882.000000 = (51.000000 * 85.000000) - (99.000000 * 83.000000)
Returning result
--new limit applied to position 1
new limit: 
  0


  3
  4
Old limit
  0
  1

  3
  4

Result = itself plus -1.000000 * 58.000000 * recurse

----new limit applied to position 0
new limit: 



  3
  4
Old limit
  0


  3
  4

Result = itself plus 1.000000 * 21.000000 * recurse

------Limit mask has 2 valid spots, 3, 4
Computations: 5775.500000 = (83.000000 * 66.000000) - (85.000000 * -3.500000)
Returning result
----new limit applied to position 1
new limit: 
  0



  4
Old limit
  0


  3
  4

Result = itself plus -1.000000 * 84.000000 * recurse

------Limit mask has 2 valid spots, 0, 4
Computations: 5040.500000 = (76.000000 * 66.000000) - (7.000000 * -3.500000)
Returning result
----new limit applied to position 2
new limit: 
  0


  3

Old limit
  0


  3
  4

Result = itself plus 1.000000 * 1.000000 * recurse

------Limit mask has 2 valid spots, 0, 3
Computations: 5879.000000 = (76.000000 * 85.000000) - (7.000000 * 83.000000)
Returning result
--new limit applied to position 2
new limit: 
  0
  1


  4
Old limit
  0
  1

  3
  4

Result = itself plus 1.000000 * 19.000000 * recurse

----new limit applied to position 0
new limit: 

  1


  4
Old limit
  0
  1


  4

Result = itself plus 1.000000 * 21.000000 * recurse

------Limit mask has 2 valid spots, 1, 4
Computations: 3712.500000 = (51.000000 * 66.000000) - (99.000000 * -3.500000)
Returning result
----new limit applied to position 1
new limit: 
  0



  4
Old limit
  0
  1


  4

Result = itself plus -1.000000 * 14.000000 * recurse

------Limit mask has 2 valid spots, 0, 4
Computations: 5040.500000 = (76.000000 * 66.000000) - (7.000000 * -3.500000)
Returning result
----new limit applied to position 2
new limit: 
  0
  1



Old limit
  0
  1


  4

Result = itself plus 1.000000 * 1.000000 * recurse

------Limit mask has 2 valid spots, 0, 1
Computations: 7167.000000 = (76.000000 * 99.000000) - (7.000000 * 51.000000)
Returning result
--new limit applied to position 3
new limit: 
  0
  1

  3

Old limit
  0
  1

  3
  4

Result = itself plus -1.000000 * 12.000000 * recurse

----new limit applied to position 0
new limit: 

  1

  3

Old limit
  0
  1

  3


Result = itself plus 1.000000 * 21.000000 * recurse

------Limit mask has 2 valid spots, 1, 3
Computations: -3882.000000 = (51.000000 * 85.000000) - (99.000000 * 83.000000)
Returning result
----new limit applied to position 1
new limit: 
  0


  3

Old limit
  0
  1

  3


Result = itself plus -1.000000 * 14.000000 * recurse

------Limit mask has 2 valid spots, 0, 3
Computations: 5879.000000 = (76.000000 * 85.000000) - (7.000000 * 83.000000)
Returning result
----new limit applied to position 2
new limit: 
  0
  1



Old limit
  0
  1

  3


Result = itself plus 1.000000 * 84.000000 * recurse

------Limit mask has 2 valid spots, 0, 1
Computations: 7167.000000 = (76.000000 * 99.000000) - (7.000000 * 51.000000)
Returning result

New limit is at position 3
Result will equal -1.000000 * 4.000000 * recurse

--new limit applied to position 0
new limit: 

  1
  2

  4
Old limit
  0
  1
  2

  4

Result = itself plus 1.000000 * 72.000000 * recurse

----new limit applied to position 0
new limit: 


  2

  4
Old limit

  1
  2

  4

Result = itself plus 1.000000 * 14.000000 * recurse

------Limit mask has 2 valid spots, 2, 4
Computations: 5199.000000 = (74.000000 * 66.000000) - (90.000000 * -3.500000)
Returning result
----new limit applied to position 1
new limit: 

  1


  4
Old limit

  1
  2

  4

Result = itself plus -1.000000 * 81.000000 * recurse

------Limit mask has 2 valid spots, 1, 4
Computations: 3712.500000 = (51.000000 * 66.000000) - (99.000000 * -3.500000)
Returning result
----new limit applied to position 2
new limit: 

  1
  2


Old limit

  1
  2

  4

Result = itself plus 1.000000 * 1.000000 * recurse

------Limit mask has 2 valid spots, 1, 2
Computations: -2736.000000 = (51.000000 * 90.000000) - (99.000000 * 74.000000)
Returning result
--new limit applied to position 1
new limit: 
  0

  2

  4
Old limit
  0
  1
  2

  4

Result = itself plus -1.000000 * 58.000000 * recurse

----new limit applied to position 0
new limit: 


  2

  4
Old limit
  0

  2

  4

Result = itself plus 1.000000 * 21.000000 * recurse

------Limit mask has 2 valid spots, 2, 4
Computations: 5199.000000 = (74.000000 * 66.000000) - (90.000000 * -3.500000)
Returning result
----new limit applied to position 1
new limit: 
  0



  4
Old limit
  0

  2

  4

Result = itself plus -1.000000 * 81.000000 * recurse

------Limit mask has 2 valid spots, 0, 4
Computations: 5040.500000 = (76.000000 * 66.000000) - (7.000000 * -3.500000)
Returning result
----new limit applied to position 2
new limit: 
  0

  2


Old limit
  0

  2

  4

Result = itself plus 1.000000 * 1.000000 * recurse

------Limit mask has 2 valid spots, 0, 2
Computations: 6322.000000 = (76.000000 * 90.000000) - (7.000000 * 74.000000)
Returning result
--new limit applied to position 2
new limit: 
  0
  1


  4
Old limit
  0
  1
  2

  4

Result = itself plus 1.000000 * 22.000000 * recurse

----new limit applied to position 0
new limit: 

  1


  4
Old limit
  0
  1


  4

Result = itself plus 1.000000 * 21.000000 * recurse

------Limit mask has 2 valid spots, 1, 4
Computations: 3712.500000 = (51.000000 * 66.000000) - (99.000000 * -3.500000)
Returning result
----new limit applied to position 1
new limit: 
  0



  4
Old limit
  0
  1


  4

Result = itself plus -1.000000 * 14.000000 * recurse

------Limit mask has 2 valid spots, 0, 4
Computations: 5040.500000 = (76.000000 * 66.000000) - (7.000000 * -3.500000)
Returning result
----new limit applied to position 2
new limit: 
  0
  1



Old limit
  0
  1


  4

Result = itself plus 1.000000 * 1.000000 * recurse

------Limit mask has 2 valid spots, 0, 1
Computations: 7167.000000 = (76.000000 * 99.000000) - (7.000000 * 51.000000)
Returning result
--new limit applied to position 3
new limit: 
  0
  1
  2


Old limit
  0
  1
  2

  4

Result = itself plus -1.000000 * 12.000000 * recurse

----new limit applied to position 0
new limit: 

  1
  2


Old limit
  0
  1
  2



Result = itself plus 1.000000 * 21.000000 * recurse

------Limit mask has 2 valid spots, 1, 2
Computations: -2736.000000 = (51.000000 * 90.000000) - (99.000000 * 74.000000)
Returning result
----new limit applied to position 1
new limit: 
  0

  2


Old limit
  0
  1
  2



Result = itself plus -1.000000 * 14.000000 * recurse

------Limit mask has 2 valid spots, 0, 2
Computations: 6322.000000 = (76.000000 * 90.000000) - (7.000000 * 74.000000)
Returning result
----new limit applied to position 2
new limit: 
  0
  1



Old limit
  0
  1
  2



Result = itself plus 1.000000 * 81.000000 * recurse

------Limit mask has 2 valid spots, 0, 1
Computations: 7167.000000 = (76.000000 * 99.000000) - (7.000000 * 51.000000)
Returning result

New limit is at position 4
Result will equal 1.000000 * 13.000000 * recurse

--new limit applied to position 0
new limit: 

  1
  2
  3

Old limit
  0
  1
  2
  3


Result = itself plus 1.000000 * 72.000000 * recurse

----new limit applied to position 0
new limit: 


  2
  3

Old limit

  1
  2
  3


Result = itself plus 1.000000 * 14.000000 * recurse

------Limit mask has 2 valid spots, 2, 3
Computations: -1180.000000 = (74.000000 * 85.000000) - (90.000000 * 83.000000)
Returning result
----new limit applied to position 1
new limit: 

  1

  3

Old limit

  1
  2
  3


Result = itself plus -1.000000 * 81.000000 * recurse

------Limit mask has 2 valid spots, 1, 3
Computations: -3882.000000 = (51.000000 * 85.000000) - (99.000000 * 83.000000)
Returning result
----new limit applied to position 2
new limit: 

  1
  2


Old limit

  1
  2
  3


Result = itself plus 1.000000 * 84.000000 * recurse

------Limit mask has 2 valid spots, 1, 2
Computations: -2736.000000 = (51.000000 * 90.000000) - (99.000000 * 74.000000)
Returning result
--new limit applied to position 1
new limit: 
  0

  2
  3

Old limit
  0
  1
  2
  3


Result = itself plus -1.000000 * 58.000000 * recurse

----new limit applied to position 0
new limit: 


  2
  3

Old limit
  0

  2
  3


Result = itself plus 1.000000 * 21.000000 * recurse

------Limit mask has 2 valid spots, 2, 3
Computations: -1180.000000 = (74.000000 * 85.000000) - (90.000000 * 83.000000)
Returning result
----new limit applied to position 1
new limit: 
  0


  3

Old limit
  0

  2
  3


Result = itself plus -1.000000 * 81.000000 * recurse

------Limit mask has 2 valid spots, 0, 3
Computations: 5879.000000 = (76.000000 * 85.000000) - (7.000000 * 83.000000)
Returning result
----new limit applied to position 2
new limit: 
  0

  2


Old limit
  0

  2
  3


Result = itself plus 1.000000 * 84.000000 * recurse

------Limit mask has 2 valid spots, 0, 2
Computations: 6322.000000 = (76.000000 * 90.000000) - (7.000000 * 74.000000)
Returning result
--new limit applied to position 2
new limit: 
  0
  1

  3

Old limit
  0
  1
  2
  3


Result = itself plus 1.000000 * 22.000000 * recurse

----new limit applied to position 0
new limit: 

  1

  3

Old limit
  0
  1

  3


Result = itself plus 1.000000 * 21.000000 * recurse

------Limit mask has 2 valid spots, 1, 3
Computations: -3882.000000 = (51.000000 * 85.000000) - (99.000000 * 83.000000)
Returning result
----new limit applied to position 1
new limit: 
  0


  3

Old limit
  0
  1

  3


Result = itself plus -1.000000 * 14.000000 * recurse

------Limit mask has 2 valid spots, 0, 3
Computations: 5879.000000 = (76.000000 * 85.000000) - (7.000000 * 83.000000)
Returning result
----new limit applied to position 2
new limit: 
  0
  1



Old limit
  0
  1

  3


Result = itself plus 1.000000 * 84.000000 * recurse

------Limit mask has 2 valid spots, 0, 1
Computations: 7167.000000 = (76.000000 * 99.000000) - (7.000000 * 51.000000)
Returning result
--new limit applied to position 3
new limit: 
  0
  1
  2


Old limit
  0
  1
  2
  3


Result = itself plus -1.000000 * 19.000000 * recurse

----new limit applied to position 0
new limit: 

  1
  2


Old limit
  0
  1
  2



Result = itself plus 1.000000 * 21.000000 * recurse

------Limit mask has 2 valid spots, 1, 2
Computations: -2736.000000 = (51.000000 * 90.000000) - (99.000000 * 74.000000)
Returning result
----new limit applied to position 1
new limit: 
  0

  2


Old limit
  0
  1
  2



Result = itself plus -1.000000 * 14.000000 * recurse

------Limit mask has 2 valid spots, 0, 2
Computations: 6322.000000 = (76.000000 * 90.000000) - (7.000000 * 74.000000)
Returning result
----new limit applied to position 2
new limit: 
  0
  1



Old limit
  0
  1
  2



Result = itself plus 1.000000 * 81.000000 * recurse

------Limit mask has 2 valid spots, 0, 1
Computations: 7167.000000 = (76.000000 * 99.000000) - (7.000000 * 51.000000)
Returning result
--------------------------------------------------------------------------------
Taking determinant of the following matrix

  2.5000    17.0000    2.0000    4.0000    13.0000    19.0000  
  72.0000    58.0000    22.0000    19.0000    12.0000    22.0000  
  21.0000    14.0000    81.0000    84.0000    1.0000    13.0000  
  76.0000    51.0000    74.0000    83.0000    -3.5000    9.0000  
  7.0000    99.0000    90.0000    85.0000    66.0000    6.0000  
  12.0000    5.0000    8.0000    7.0000    2.0000    14.0000  




New limit is at position 0
Result will equal 1.000000 * 2.500000 * recurse

--new limit applied to position 0
new limit: 


  2
  3
  4
  5
Old limit

  1
  2
  3
  4
  5

Result = itself plus 1.000000 * 58.000000 * recurse

----new limit applied to position 0
new limit: 



  3
  4
  5
Old limit


  2
  3
  4
  5

Result = itself plus 1.000000 * 81.000000 * recurse

------new limit applied to position 0
new limit: 




  4
  5
Old limit



  3
  4
  5

Result = itself plus 1.000000 * 83.000000 * recurse

--------Limit mask has 2 valid spots, 4, 5
Computations: 912.000000 = (66.000000 * 14.000000) - (2.000000 * 6.000000)
Returning result
------new limit applied to position 1
new limit: 



  3

  5
Old limit



  3
  4
  5

Result = itself plus -1.000000 * -3.500000 * recurse

--------Limit mask has 2 valid spots, 3, 5
Computations: 1148.000000 = (85.000000 * 14.000000) - (7.000000 * 6.000000)
Returning result
------new limit applied to position 2
new limit: 



  3
  4

Old limit



  3
  4
  5

Result = itself plus 1.000000 * 9.000000 * recurse

--------Limit mask has 2 valid spots, 3, 4
Computations: -292.000000 = (85.000000 * 2.000000) - (7.000000 * 66.000000)
Returning result
----new limit applied to position 1
new limit: 


  2

  4
  5
Old limit


  2
  3
  4
  5

Result = itself plus -1.000000 * 84.000000 * recurse

------new limit applied to position 0
new limit: 




  4
  5
Old limit


  2

  4
  5

Result = itself plus 1.000000 * 74.000000 * recurse

--------Limit mask has 2 valid spots, 4, 5
Computations: 912.000000 = (66.000000 * 14.000000) - (2.000000 * 6.000000)
Returning result
------new limit applied to position 1
new limit: 


  2


  5
Old limit


  2

  4
  5

Result = itself plus -1.000000 * -3.500000 * recurse

--------Limit mask has 2 valid spots, 2, 5
Computations: 1212.000000 = (90.000000 * 14.000000) - (8.000000 * 6.000000)
Returning result
------new limit applied to position 2
new limit: 


  2

  4

Old limit


  2

  4
  5

Result = itself plus 1.000000 * 9.000000 * recurse

--------Limit mask has 2 valid spots, 2, 4
Computations: -348.000000 = (90.000000 * 2.000000) - (8.000000 * 66.000000)
Returning result
----new limit applied to position 2
new limit: 


  2
  3

  5
Old limit


  2
  3
  4
  5

Result = itself plus 1.000000 * 1.000000 * recurse

------new limit applied to position 0
new limit: 



  3

  5
Old limit


  2
  3

  5

Result = itself plus 1.000000 * 74.000000 * recurse

--------Limit mask has 2 valid spots, 3, 5
Computations: 1148.000000 = (85.000000 * 14.000000) - (7.000000 * 6.000000)
Returning result
------new limit applied to position 1
new limit: 


  2


  5
Old limit


  2
  3

  5

Result = itself plus -1.000000 * 83.000000 * recurse

--------Limit mask has 2 valid spots, 2, 5
Computations: 1212.000000 = (90.000000 * 14.000000) - (8.000000 * 6.000000)
Returning result
------new limit applied to position 2
new limit: 


  2
  3


Old limit


  2
  3

  5

Result = itself plus 1.000000 * 9.000000 * recurse

--------Limit mask has 2 valid spots, 2, 3
Computations: -50.000000 = (90.000000 * 7.000000) - (8.000000 * 85.000000)
Returning result
----new limit applied to position 3
new limit: 


  2
  3
  4

Old limit


  2
  3
  4
  5

Result = itself plus -1.000000 * 13.000000 * recurse

------new limit applied to position 0
new limit: 



  3
  4

Old limit


  2
  3
  4


Result = itself plus 1.000000 * 74.000000 * recurse

--------Limit mask has 2 valid spots, 3, 4
Computations: -292.000000 = (85.000000 * 2.000000) - (7.000000 * 66.000000)
Returning result
------new limit applied to position 1
new limit: 


  2

  4

Old limit


  2
  3
  4


Result = itself plus -1.000000 * 83.000000 * recurse

--------Limit mask has 2 valid spots, 2, 4
Computations: -348.000000 = (90.000000 * 2.000000) - (8.000000 * 66.000000)
Returning result
------new limit applied to position 2
new limit: 


  2
  3


Old limit


  2
  3
  4


Result = itself plus 1.000000 * -3.500000 * recurse

--------Limit mask has 2 valid spots, 2, 3
Computations: -50.000000 = (90.000000 * 7.000000) - (8.000000 * 85.000000)
Returning result
--new limit applied to position 1
new limit: 

  1

  3
  4
  5
Old limit

  1
  2
  3
  4
  5

Result = itself plus -1.000000 * 22.000000 * recurse

----new limit applied to position 0
new limit: 



  3
  4
  5
Old limit

  1

  3
  4
  5

Result = itself plus 1.000000 * 14.000000 * recurse

------new limit applied to position 0
new limit: 




  4
  5
Old limit



  3
  4
  5

Result = itself plus 1.000000 * 83.000000 * recurse

--------Limit mask has 2 valid spots, 4, 5
Computations: 912.000000 = (66.000000 * 14.000000) - (2.000000 * 6.000000)
Returning result
------new limit applied to position 1
new limit: 



  3

  5
Old limit



  3
  4
  5

Result = itself plus -1.000000 * -3.500000 * recurse

--------Limit mask has 2 valid spots, 3, 5
Computations: 1148.000000 = (85.000000 * 14.000000) - (7.000000 * 6.000000)
Returning result
------new limit applied to position 2
new limit: 



  3
  4

Old limit



  3
  4
  5

Result = itself plus 1.000000 * 9.000000 * recurse

--------Limit mask has 2 valid spots, 3, 4
Computations: -292.000000 = (85.000000 * 2.000000) - (7.000000 * 66.000000)
Returning result
----new limit applied to position 1
new limit: 

  1


  4
  5
Old limit

  1

  3
  4
  5

Result = itself plus -1.000000 * 84.000000 * recurse

------new limit applied to position 0
new limit: 




  4
  5
Old limit

  1


  4
  5

Result = itself plus 1.000000 * 51.000000 * recurse

--------Limit mask has 2 valid spots, 4, 5
Computations: 912.000000 = (66.000000 * 14.000000) - (2.000000 * 6.000000)
Returning result
------new limit applied to position 1
new limit: 

  1



  5
Old limit

  1


  4
  5

Result = itself plus -1.000000 * -3.500000 * recurse

--------Limit mask has 2 valid spots, 1, 5
Computations: 1356.000000 = (99.000000 * 14.000000) - (5.000000 * 6.000000)
Returning result
------new limit applied to position 2
new limit: 

  1


  4

Old limit

  1


  4
  5

Result = itself plus 1.000000 * 9.000000 * recurse

--------Limit mask has 2 valid spots, 1, 4
Computations: -132.000000 = (99.000000 * 2.000000) - (5.000000 * 66.000000)
Returning result
----new limit applied to position 2
new limit: 

  1

  3

  5
Old limit

  1

  3
  4
  5

Result = itself plus 1.000000 * 1.000000 * recurse

------new limit applied to position 0
new limit: 



  3

  5
Old limit

  1

  3

  5

Result = itself plus 1.000000 * 51.000000 * recurse

--------Limit mask has 2 valid spots, 3, 5
Computations: 1148.000000 = (85.000000 * 14.000000) - (7.000000 * 6.000000)
Returning result
------new limit applied to position 1
new limit: 

  1



  5
Old limit

  1

  3

  5

Result = itself plus -1.000000 * 83.000000 * recurse

--------Limit mask has 2 valid spots, 1, 5
Computations: 1356.000000 = (99.000000 * 14.000000) - (5.000000 * 6.000000)
Returning result
------new limit applied to position 2
new limit: 

  1

  3


Old limit

  1

  3

  5

Result = itself plus 1.000000 * 9.000000 * recurse

--------Limit mask has 2 valid spots, 1, 3
Computations: 268.000000 = (99.000000 * 7.000000) - (5.000000 * 85.000000)
Returning result
----new limit applied to position 3
new limit: 

  1

  3
  4

Old limit

  1

  3
  4
  5

Result = itself plus -1.000000 * 13.000000 * recurse

------new limit applied to position 0
new limit: 



  3
  4

Old limit

  1

  3
  4


Result = itself plus 1.000000 * 51.000000 * recurse

--------Limit mask has 2 valid spots, 3, 4
Computations: -292.000000 = (85.000000 * 2.000000) - (7.000000 * 66.000000)
Returning result
------new limit applied to position 1
new limit: 

  1


  4

Old limit

  1

  3
  4


Result = itself plus -1.000000 * 83.000000 * recurse

--------Limit mask has 2 valid spots, 1, 4
Computations: -132.000000 = (99.000000 * 2.000000) - (5.000000 * 66.000000)
Returning result
------new limit applied to position 2
new limit: 

  1

  3


Old limit

  1

  3
  4


Result = itself plus 1.000000 * -3.500000 * recurse

--------Limit mask has 2 valid spots, 1, 3
Computations: 268.000000 = (99.000000 * 7.000000) - (5.000000 * 85.000000)
Returning result
--new limit applied to position 2
new limit: 

  1
  2

  4
  5
Old limit

  1
  2
  3
  4
  5

Result = itself plus 1.000000 * 19.000000 * recurse

----new limit applied to position 0
new limit: 


  2

  4
  5
Old limit

  1
  2

  4
  5

Result = itself plus 1.000000 * 14.000000 * recurse

------new limit applied to position 0
new limit: 




  4
  5
Old limit


  2

  4
  5

Result = itself plus 1.000000 * 74.000000 * recurse

--------Limit mask has 2 valid spots, 4, 5
Computations: 912.000000 = (66.000000 * 14.000000) - (2.000000 * 6.000000)
Returning result
------new limit applied to position 1
new limit: 


  2


  5
Old limit


  2

  4
  5

Result = itself plus -1.000000 * -3.500000 * recurse

--------Limit mask has 2 valid spots, 2, 5
Computations: 1212.000000 = (90.000000 * 14.000000) - (8.000000 * 6.000000)
Returning result
------new limit applied to position 2
new limit: 


  2

  4

Old limit


  2

  4
  5

Result = itself plus 1.000000 * 9.000000 * recurse

--------Limit mask has 2 valid spots, 2, 4
Computations: -348.000000 = (90.000000 * 2.000000) - (8.000000 * 66.000000)
Returning result
----new limit applied to position 1
new limit: 

  1


  4
  5
Old limit

  1
  2

  4
  5

Result = itself plus -1.000000 * 81.000000 * recurse

------new limit applied to position 0
new limit: 




  4
  5
Old limit

  1


  4
  5

Result = itself plus 1.000000 * 51.000000 * recurse

--------Limit mask has 2 valid spots, 4, 5
Computations: 912.000000 = (66.000000 * 14.000000) - (2.000000 * 6.000000)
Returning result
------new limit applied to position 1
new limit: 

  1



  5
Old limit

  1


  4
  5

Result = itself plus -1.000000 * -3.500000 * recurse

--------Limit mask has 2 valid spots, 1, 5
Computations: 1356.000000 = (99.000000 * 14.000000) - (5.000000 * 6.000000)
Returning result
------new limit applied to position 2
new limit: 

  1


  4

Old limit

  1


  4
  5

Result = itself plus 1.000000 * 9.000000 * recurse

--------Limit mask has 2 valid spots, 1, 4
Computations: -132.000000 = (99.000000 * 2.000000) - (5.000000 * 66.000000)
Returning result
----new limit applied to position 2
new limit: 

  1
  2


  5
Old limit

  1
  2

  4
  5

Result = itself plus 1.000000 * 1.000000 * recurse

------new limit applied to position 0
new limit: 


  2


  5
Old limit

  1
  2


  5

Result = itself plus 1.000000 * 51.000000 * recurse

--------Limit mask has 2 valid spots, 2, 5
Computations: 1212.000000 = (90.000000 * 14.000000) - (8.000000 * 6.000000)
Returning result
------new limit applied to position 1
new limit: 

  1



  5
Old limit

  1
  2


  5

Result = itself plus -1.000000 * 74.000000 * recurse

--------Limit mask has 2 valid spots, 1, 5
Computations: 1356.000000 = (99.000000 * 14.000000) - (5.000000 * 6.000000)
Returning result
------new limit applied to position 2
new limit: 

  1
  2



Old limit

  1
  2


  5

Result = itself plus 1.000000 * 9.000000 * recurse

--------Limit mask has 2 valid spots, 1, 2
Computations: 342.000000 = (99.000000 * 8.000000) - (5.000000 * 90.000000)
Returning result
----new limit applied to position 3
new limit: 

  1
  2

  4

Old limit

  1
  2

  4
  5

Result = itself plus -1.000000 * 13.000000 * recurse

------new limit applied to position 0
new limit: 


  2

  4

Old limit

  1
  2

  4


Result = itself plus 1.000000 * 51.000000 * recurse

--------Limit mask has 2 valid spots, 2, 4
Computations: -348.000000 = (90.000000 * 2.000000) - (8.000000 * 66.000000)
Returning result
------new limit applied to position 1
new limit: 

  1


  4

Old limit

  1
  2

  4


Result = itself plus -1.000000 * 74.000000 * recurse

--------Limit mask has 2 valid spots, 1, 4
Computations: -132.000000 = (99.000000 * 2.000000) - (5.000000 * 66.000000)
Returning result
------new limit applied to position 2
new limit: 

  1
  2



Old limit

  1
  2

  4


Result = itself plus 1.000000 * -3.500000 * recurse

--------Limit mask has 2 valid spots, 1, 2
Computations: 342.000000 = (99.000000 * 8.000000) - (5.000000 * 90.000000)
Returning result
--new limit applied to position 3
new limit: 

  1
  2
  3

  5
Old limit

  1
  2
  3
  4
  5

Result = itself plus -1.000000 * 12.000000 * recurse

----new limit applied to position 0
new limit: 


  2
  3

  5
Old limit

  1
  2
  3

  5

Result = itself plus 1.000000 * 14.000000 * recurse

------new limit applied to position 0
new limit: 



  3

  5
Old limit


  2
  3

  5

Result = itself plus 1.000000 * 74.000000 * recurse

--------Limit mask has 2 valid spots, 3, 5
Computations: 1148.000000 = (85.000000 * 14.000000) - (7.000000 * 6.000000)
Returning result
------new limit applied to position 1
new limit: 


  2


  5
Old limit


  2
  3

  5

Result = itself plus -1.000000 * 83.000000 * recurse

--------Limit mask has 2 valid spots, 2, 5
Computations: 1212.000000 = (90.000000 * 14.000000) - (8.000000 * 6.000000)
Returning result
------new limit applied to position 2
new limit: 


  2
  3


Old limit


  2
  3

  5

Result = itself plus 1.000000 * 9.000000 * recurse

--------Limit mask has 2 valid spots, 2, 3
Computations: -50.000000 = (90.000000 * 7.000000) - (8.000000 * 85.000000)
Returning result
----new limit applied to position 1
new limit: 

  1

  3

  5
Old limit

  1
  2
  3

  5

Result = itself plus -1.000000 * 81.000000 * recurse

------new limit applied to position 0
new limit: 



  3

  5
Old limit

  1

  3

  5

Result = itself plus 1.000000 * 51.000000 * recurse

--------Limit mask has 2 valid spots, 3, 5
Computations: 1148.000000 = (85.000000 * 14.000000) - (7.000000 * 6.000000)
Returning result
------new limit applied to position 1
new limit: 

  1



  5
Old limit

  1

  3

  5

Result = itself plus -1.000000 * 83.000000 * recurse

--------Limit mask has 2 valid spots, 1, 5
Computations: 1356.000000 = (99.000000 * 14.000000) - (5.000000 * 6.000000)
Returning result
------new limit applied to position 2
new limit: 

  1

  3


Old limit

  1

  3

  5

Result = itself plus 1.000000 * 9.000000 * recurse

--------Limit mask has 2 valid spots, 1, 3
Computations: 268.000000 = (99.000000 * 7.000000) - (5.000000 * 85.000000)
Returning result
----new limit applied to position 2
new limit: 

  1
  2


  5
Old limit

  1
  2
  3

  5

Result = itself plus 1.000000 * 84.000000 * recurse

------new limit applied to position 0
new limit: 


  2


  5
Old limit

  1
  2


  5

Result = itself plus 1.000000 * 51.000000 * recurse

--------Limit mask has 2 valid spots, 2, 5
Computations: 1212.000000 = (90.000000 * 14.000000) - (8.000000 * 6.000000)
Returning result
------new limit applied to position 1
new limit: 

  1



  5
Old limit

  1
  2


  5

Result = itself plus -1.000000 * 74.000000 * recurse

--------Limit mask has 2 valid spots, 1, 5
Computations: 1356.000000 = (99.000000 * 14.000000) - (5.000000 * 6.000000)
Returning result
------new limit applied to position 2
new limit: 

  1
  2



Old limit

  1
  2


  5

Result = itself plus 1.000000 * 9.000000 * recurse

--------Limit mask has 2 valid spots, 1, 2
Computations: 342.000000 = (99.000000 * 8.000000) - (5.000000 * 90.000000)
Returning result
----new limit applied to position 3
new limit: 

  1
  2
  3


Old limit

  1
  2
  3

  5

Result = itself plus -1.000000 * 13.000000 * recurse

------new limit applied to position 0
new limit: 


  2
  3


Old limit

  1
  2
  3



Result = itself plus 1.000000 * 51.000000 * recurse

--------Limit mask has 2 valid spots, 2, 3
Computations: -50.000000 = (90.000000 * 7.000000) - (8.000000 * 85.000000)
Returning result
------new limit applied to position 1
new limit: 

  1

  3


Old limit

  1
  2
  3



Result = itself plus -1.000000 * 74.000000 * recurse

--------Limit mask has 2 valid spots, 1, 3
Computations: 268.000000 = (99.000000 * 7.000000) - (5.000000 * 85.000000)
Returning result
------new limit applied to position 2
new limit: 

  1
  2



Old limit

  1
  2
  3



Result = itself plus 1.000000 * 83.000000 * recurse

--------Limit mask has 2 valid spots, 1, 2
Computations: 342.000000 = (99.000000 * 8.000000) - (5.000000 * 90.000000)
Returning result
--new limit applied to position 4
new limit: 

  1
  2
  3
  4

Old limit

  1
  2
  3
  4
  5

Result = itself plus 1.000000 * 22.000000 * recurse

----new limit applied to position 0
new limit: 


  2
  3
  4

Old limit

  1
  2
  3
  4


Result = itself plus 1.000000 * 14.000000 * recurse

------new limit applied to position 0
new limit: 



  3
  4

Old limit


  2
  3
  4


Result = itself plus 1.000000 * 74.000000 * recurse

--------Limit mask has 2 valid spots, 3, 4
Computations: -292.000000 = (85.000000 * 2.000000) - (7.000000 * 66.000000)
Returning result
------new limit applied to position 1
new limit: 


  2

  4

Old limit


  2
  3
  4


Result = itself plus -1.000000 * 83.000000 * recurse

--------Limit mask has 2 valid spots, 2, 4
Computations: -348.000000 = (90.000000 * 2.000000) - (8.000000 * 66.000000)
Returning result
------new limit applied to position 2
new limit: 


  2
  3


Old limit


  2
  3
  4


Result = itself plus 1.000000 * -3.500000 * recurse

--------Limit mask has 2 valid spots, 2, 3
Computations: -50.000000 = (90.000000 * 7.000000) - (8.000000 * 85.000000)
Returning result
----new limit applied to position 1
new limit: 

  1

  3
  4

Old limit

  1
  2
  3
  4


Result = itself plus -1.000000 * 81.000000 * recurse

------new limit applied to position 0
new limit: 



  3
  4

Old limit

  1

  3
  4


Result = itself plus 1.000000 * 51.000000 * recurse

--------Limit mask has 2 valid spots, 3, 4
Computations: -292.000000 = (85.000000 * 2.000000) - (7.000000 * 66.000000)
Returning result
------new limit applied to position 1
new limit: 

  1


  4

Old limit

  1

  3
  4


Result = itself plus -1.000000 * 83.000000 * recurse

--------Limit mask has 2 valid spots, 1, 4
Computations: -132.000000 = (99.000000 * 2.000000) - (5.000000 * 66.000000)
Returning result
------new limit applied to position 2
new limit: 

  1

  3


Old limit

  1

  3
  4


Result = itself plus 1.000000 * -3.500000 * recurse

--------Limit mask has 2 valid spots, 1, 3
Computations: 268.000000 = (99.000000 * 7.000000) - (5.000000 * 85.000000)
Returning result
----new limit applied to position 2
new limit: 

  1
  2

  4

Old limit

  1
  2
  3
  4


Result = itself plus 1.000000 * 84.000000 * recurse

------new limit applied to position 0
new limit: 


  2

  4

Old limit

  1
  2

  4


Result = itself plus 1.000000 * 51.000000 * recurse

--------Limit mask has 2 valid spots, 2, 4
Computations: -348.000000 = (90.000000 * 2.000000) - (8.000000 * 66.000000)
Returning result
------new limit applied to position 1
new limit: 

  1


  4

Old limit

  1
  2

  4


Result = itself plus -1.000000 * 74.000000 * recurse

--------Limit mask has 2 valid spots, 1, 4
Computations: -132.000000 = (99.000000 * 2.000000) - (5.000000 * 66.000000)
Returning result
------new limit applied to position 2
new limit: 

  1
  2



Old limit

  1
  2

  4


Result = itself plus 1.000000 * -3.500000 * recurse

--------Limit mask has 2 valid spots, 1, 2
Computations: 342.000000 = (99.000000 * 8.000000) - (5.000000 * 90.000000)
Returning result
----new limit applied to position 3
new limit: 

  1
  2
  3


Old limit

  1
  2
  3
  4


Result = itself plus -1.000000 * 1.000000 * recurse

------new limit applied to position 0
new limit: 


  2
  3


Old limit

  1
  2
  3



Result = itself plus 1.000000 * 51.000000 * recurse

--------Limit mask has 2 valid spots, 2, 3
Computations: -50.000000 = (90.000000 * 7.000000) - (8.000000 * 85.000000)
Returning result
------new limit applied to position 1
new limit: 

  1

  3


Old limit

  1
  2
  3



Result = itself plus -1.000000 * 74.000000 * recurse

--------Limit mask has 2 valid spots, 1, 3
Computations: 268.000000 = (99.000000 * 7.000000) - (5.000000 * 85.000000)
Returning result
------new limit applied to position 2
new limit: 

  1
  2



Old limit

  1
  2
  3



Result = itself plus 1.000000 * 83.000000 * recurse

--------Limit mask has 2 valid spots, 1, 2
Computations: 342.000000 = (99.000000 * 8.000000) - (5.000000 * 90.000000)
Returning result

New limit is at position 1
Result will equal -1.000000 * 17.000000 * recurse

--new limit applied to position 0
new limit: 


  2
  3
  4
  5
Old limit
  0

  2
  3
  4
  5

Result = itself plus 1.000000 * 72.000000 * recurse

----new limit applied to position 0
new limit: 



  3
  4
  5
Old limit


  2
  3
  4
  5

Result = itself plus 1.000000 * 81.000000 * recurse

------new limit applied to position 0
new limit: 




  4
  5
Old limit



  3
  4
  5

Result = itself plus 1.000000 * 83.000000 * recurse

--------Limit mask has 2 valid spots, 4, 5
Computations: 912.000000 = (66.000000 * 14.000000) - (2.000000 * 6.000000)
Returning result
------new limit applied to position 1
new limit: 



  3

  5
Old limit



  3
  4
  5

Result = itself plus -1.000000 * -3.500000 * recurse

--------Limit mask has 2 valid spots, 3, 5
Computations: 1148.000000 = (85.000000 * 14.000000) - (7.000000 * 6.000000)
Returning result
------new limit applied to position 2
new limit: 



  3
  4

Old limit



  3
  4
  5

Result = itself plus 1.000000 * 9.000000 * recurse

--------Limit mask has 2 valid spots, 3, 4
Computations: -292.000000 = (85.000000 * 2.000000) - (7.000000 * 66.000000)
Returning result
----new limit applied to position 1
new limit: 


  2

  4
  5
Old limit


  2
  3
  4
  5

Result = itself plus -1.000000 * 84.000000 * recurse

------new limit applied to position 0
new limit: 




  4
  5
Old limit


  2

  4
  5

Result = itself plus 1.000000 * 74.000000 * recurse

--------Limit mask has 2 valid spots, 4, 5
Computations: 912.000000 = (66.000000 * 14.000000) - (2.000000 * 6.000000)
Returning result
------new limit applied to position 1
new limit: 


  2


  5
Old limit


  2

  4
  5

Result = itself plus -1.000000 * -3.500000 * recurse

--------Limit mask has 2 valid spots, 2, 5
Computations: 1212.000000 = (90.000000 * 14.000000) - (8.000000 * 6.000000)
Returning result
------new limit applied to position 2
new limit: 


  2

  4

Old limit


  2

  4
  5

Result = itself plus 1.000000 * 9.000000 * recurse

--------Limit mask has 2 valid spots, 2, 4
Computations: -348.000000 = (90.000000 * 2.000000) - (8.000000 * 66.000000)
Returning result
----new limit applied to position 2
new limit: 


  2
  3

  5
Old limit


  2
  3
  4
  5

Result = itself plus 1.000000 * 1.000000 * recurse

------new limit applied to position 0
new limit: 



  3

  5
Old limit


  2
  3

  5

Result = itself plus 1.000000 * 74.000000 * recurse

--------Limit mask has 2 valid spots, 3, 5
Computations: 1148.000000 = (85.000000 * 14.000000) - (7.000000 * 6.000000)
Returning result
------new limit applied to position 1
new limit: 


  2


  5
Old limit


  2
  3

  5

Result = itself plus -1.000000 * 83.000000 * recurse

--------Limit mask has 2 valid spots, 2, 5
Computations: 1212.000000 = (90.000000 * 14.000000) - (8.000000 * 6.000000)
Returning result
------new limit applied to position 2
new limit: 


  2
  3


Old limit


  2
  3

  5

Result = itself plus 1.000000 * 9.000000 * recurse

--------Limit mask has 2 valid spots, 2, 3
Computations: -50.000000 = (90.000000 * 7.000000) - (8.000000 * 85.000000)
Returning result
----new limit applied to position 3
new limit: 


  2
  3
  4

Old limit


  2
  3
  4
  5

Result = itself plus -1.000000 * 13.000000 * recurse

------new limit applied to position 0
new limit: 



  3
  4

Old limit


  2
  3
  4


Result = itself plus 1.000000 * 74.000000 * recurse

--------Limit mask has 2 valid spots, 3, 4
Computations: -292.000000 = (85.000000 * 2.000000) - (7.000000 * 66.000000)
Returning result
------new limit applied to position 1
new limit: 


  2

  4

Old limit


  2
  3
  4


Result = itself plus -1.000000 * 83.000000 * recurse

--------Limit mask has 2 valid spots, 2, 4
Computations: -348.000000 = (90.000000 * 2.000000) - (8.000000 * 66.000000)
Returning result
------new limit applied to position 2
new limit: 


  2
  3


Old limit


  2
  3
  4


Result = itself plus 1.000000 * -3.500000 * recurse

--------Limit mask has 2 valid spots, 2, 3
Computations: -50.000000 = (90.000000 * 7.000000) - (8.000000 * 85.000000)
Returning result
--new limit applied to position 1
new limit: 
  0


  3
  4
  5
Old limit
  0

  2
  3
  4
  5

Result = itself plus -1.000000 * 22.000000 * recurse

----new limit applied to position 0
new limit: 



  3
  4
  5
Old limit
  0


  3
  4
  5

Result = itself plus 1.000000 * 21.000000 * recurse

------new limit applied to position 0
new limit: 




  4
  5
Old limit



  3
  4
  5

Result = itself plus 1.000000 * 83.000000 * recurse

--------Limit mask has 2 valid spots, 4, 5
Computations: 912.000000 = (66.000000 * 14.000000) - (2.000000 * 6.000000)
Returning result
------new limit applied to position 1
new limit: 



  3

  5
Old limit



  3
  4
  5

Result = itself plus -1.000000 * -3.500000 * recurse

--------Limit mask has 2 valid spots, 3, 5
Computations: 1148.000000 = (85.000000 * 14.000000) - (7.000000 * 6.000000)
Returning result
------new limit applied to position 2
new limit: 



  3
  4

Old limit



  3
  4
  5

Result = itself plus 1.000000 * 9.000000 * recurse

--------Limit mask has 2 valid spots, 3, 4
Computations: -292.000000 = (85.000000 * 2.000000) - (7.000000 * 66.000000)
Returning result
----new limit applied to position 1
new limit: 
  0



  4
  5
Old limit
  0


  3
  4
  5

Result = itself plus -1.000000 * 84.000000 * recurse

------new limit applied to position 0
new limit: 




  4
  5
Old limit
  0



  4
  5

Result = itself plus 1.000000 * 76.000000 * recurse

--------Limit mask has 2 valid spots, 4, 5
Computations: 912.000000 = (66.000000 * 14.000000) - (2.000000 * 6.000000)
Returning result
------new limit applied to position 1
new limit: 
  0




  5
Old limit
  0



  4
  5

Result = itself plus -1.000000 * -3.500000 * recurse

--------Limit mask has 2 valid spots, 0, 5
Computations: 26.000000 = (7.000000 * 14.000000) - (12.000000 * 6.000000)
Returning result
------new limit applied to position 2
new limit: 
  0



  4

Old limit
  0



  4
  5

Result = itself plus 1.000000 * 9.000000 * recurse

--------Limit mask has 2 valid spots, 0, 4
Computations: -778.000000 = (7.000000 * 2.000000) - (12.000000 * 66.000000)
Returning result
----new limit applied to position 2
new limit: 
  0


  3

  5
Old limit
  0


  3
  4
  5

Result = itself plus 1.000000 * 1.000000 * recurse

------new limit applied to position 0
new limit: 



  3

  5
Old limit
  0


  3

  5

Result = itself plus 1.000000 * 76.000000 * recurse

--------Limit mask has 2 valid spots, 3, 5
Computations: 1148.000000 = (85.000000 * 14.000000) - (7.000000 * 6.000000)
Returning result
------new limit applied to position 1
new limit: 
  0




  5
Old limit
  0


  3

  5

Result = itself plus -1.000000 * 83.000000 * recurse

--------Limit mask has 2 valid spots, 0, 5
Computations: 26.000000 = (7.000000 * 14.000000) - (12.000000 * 6.000000)
Returning result
------new limit applied to position 2
new limit: 
  0


  3


Old limit
  0


  3

  5

Result = itself plus 1.000000 * 9.000000 * recurse

--------Limit mask has 2 valid spots, 0, 3
Computations: -971.000000 = (7.000000 * 7.000000) - (12.000000 * 85.000000)
Returning result
----new limit applied to position 3
new limit: 
  0


  3
  4

Old limit
  0


  3
  4
  5

Result = itself plus -1.000000 * 13.000000 * recurse

------new limit applied to position 0
new limit: 



  3
  4

Old limit
  0


  3
  4


Result = itself plus 1.000000 * 76.000000 * recurse

--------Limit mask has 2 valid spots, 3, 4
Computations: -292.000000 = (85.000000 * 2.000000) - (7.000000 * 66.000000)
Returning result
------new limit applied to position 1
new limit: 
  0



  4

Old limit
  0


  3
  4


Result = itself plus -1.000000 * 83.000000 * recurse

--------Limit mask has 2 valid spots, 0, 4
Computations: -778.000000 = (7.000000 * 2.000000) - (12.000000 * 66.000000)
Returning result
------new limit applied to position 2
new limit: 
  0


  3


Old limit
  0


  3
  4


Result = itself plus 1.000000 * -3.500000 * recurse

--------Limit mask has 2 valid spots, 0, 3
Computations: -971.000000 = (7.000000 * 7.000000) - (12.000000 * 85.000000)
Returning result
--new limit applied to position 2
new limit: 
  0

  2

  4
  5
Old limit
  0

  2
  3
  4
  5

Result = itself plus 1.000000 * 19.000000 * recurse

----new limit applied to position 0
new limit: 


  2

  4
  5
Old limit
  0

  2

  4
  5

Result = itself plus 1.000000 * 21.000000 * recurse

------new limit applied to position 0
new limit: 




  4
  5
Old limit


  2

  4
  5

Result = itself plus 1.000000 * 74.000000 * recurse

--------Limit mask has 2 valid spots, 4, 5
Computations: 912.000000 = (66.000000 * 14.000000) - (2.000000 * 6.000000)
Returning result
------new limit applied to position 1
new limit: 


  2


  5
Old limit


  2

  4
  5

Result = itself plus -1.000000 * -3.500000 * recurse

--------Limit mask has 2 valid spots, 2, 5
Computations: 1212.000000 = (90.000000 * 14.000000) - (8.000000 * 6.000000)
Returning result
------new limit applied to position 2
new limit: 


  2

  4

Old limit


  2

  4
  5

Result = itself plus 1.000000 * 9.000000 * recurse

--------Limit mask has 2 valid spots, 2, 4
Computations: -348.000000 = (90.000000 * 2.000000) - (8.000000 * 66.000000)
Returning result
----new limit applied to position 1
new limit: 
  0



  4
  5
Old limit
  0

  2

  4
  5

Result = itself plus -1.000000 * 81.000000 * recurse

------new limit applied to position 0
new limit: 




  4
  5
Old limit
  0



  4
  5

Result = itself plus 1.000000 * 76.000000 * recurse

--------Limit mask has 2 valid spots, 4, 5
Computations: 912.000000 = (66.000000 * 14.000000) - (2.000000 * 6.000000)
Returning result
------new limit applied to position 1
new limit: 
  0




  5
Old limit
  0



  4
  5

Result = itself plus -1.000000 * -3.500000 * recurse

--------Limit mask has 2 valid spots, 0, 5
Computations: 26.000000 = (7.000000 * 14.000000) - (12.000000 * 6.000000)
Returning result
------new limit applied to position 2
new limit: 
  0



  4

Old limit
  0



  4
  5

Result = itself plus 1.000000 * 9.000000 * recurse

--------Limit mask has 2 valid spots, 0, 4
Computations: -778.000000 = (7.000000 * 2.000000) - (12.000000 * 66.000000)
Returning result
----new limit applied to position 2
new limit: 
  0

  2


  5
Old limit
  0

  2

  4
  5

Result = itself plus 1.000000 * 1.000000 * recurse

------new limit applied to position 0
new limit: 


  2


  5
Old limit
  0

  2


  5

Result = itself plus 1.000000 * 76.000000 * recurse

--------Limit mask has 2 valid spots, 2, 5
Computations: 1212.000000 = (90.000000 * 14.000000) - (8.000000 * 6.000000)
Returning result
------new limit applied to position 1
new limit: 
  0




  5
Old limit
  0

  2


  5

Result = itself plus -1.000000 * 74.000000 * recurse

--------Limit mask has 2 valid spots, 0, 5
Computations: 26.000000 = (7.000000 * 14.000000) - (12.000000 * 6.000000)
Returning result
------new limit applied to position 2
new limit: 
  0

  2



Old limit
  0

  2


  5

Result = itself plus 1.000000 * 9.000000 * recurse

--------Limit mask has 2 valid spots, 0, 2
Computations: -1024.000000 = (7.000000 * 8.000000) - (12.000000 * 90.000000)
Returning result
----new limit applied to position 3
new limit: 
  0

  2

  4

Old limit
  0

  2

  4
  5

Result = itself plus -1.000000 * 13.000000 * recurse

------new limit applied to position 0
new limit: 


  2

  4

Old limit
  0

  2

  4


Result = itself plus 1.000000 * 76.000000 * recurse

--------Limit mask has 2 valid spots, 2, 4
Computations: -348.000000 = (90.000000 * 2.000000) - (8.000000 * 66.000000)
Returning result
------new limit applied to position 1
new limit: 
  0



  4

Old limit
  0

  2

  4


Result = itself plus -1.000000 * 74.000000 * recurse

--------Limit mask has 2 valid spots, 0, 4
Computations: -778.000000 = (7.000000 * 2.000000) - (12.000000 * 66.000000)
Returning result
------new limit applied to position 2
new limit: 
  0

  2



Old limit
  0

  2

  4


Result = itself plus 1.000000 * -3.500000 * recurse

--------Limit mask has 2 valid spots, 0, 2
Computations: -1024.000000 = (7.000000 * 8.000000) - (12.000000 * 90.000000)
Returning result
--new limit applied to position 3
new limit: 
  0

  2
  3

  5
Old limit
  0

  2
  3
  4
  5

Result = itself plus -1.000000 * 12.000000 * recurse

----new limit applied to position 0
new limit: 


  2
  3

  5
Old limit
  0

  2
  3

  5

Result = itself plus 1.000000 * 21.000000 * recurse

------new limit applied to position 0
new limit: 



  3

  5
Old limit


  2
  3

  5

Result = itself plus 1.000000 * 74.000000 * recurse

--------Limit mask has 2 valid spots, 3, 5
Computations: 1148.000000 = (85.000000 * 14.000000) - (7.000000 * 6.000000)
Returning result
------new limit applied to position 1
new limit: 


  2


  5
Old limit


  2
  3

  5

Result = itself plus -1.000000 * 83.000000 * recurse

--------Limit mask has 2 valid spots, 2, 5
Computations: 1212.000000 = (90.000000 * 14.000000) - (8.000000 * 6.000000)
Returning result
------new limit applied to position 2
new limit: 


  2
  3


Old limit


  2
  3

  5

Result = itself plus 1.000000 * 9.000000 * recurse

--------Limit mask has 2 valid spots, 2, 3
Computations: -50.000000 = (90.000000 * 7.000000) - (8.000000 * 85.000000)
Returning result
----new limit applied to position 1
new limit: 
  0


  3

  5
Old limit
  0

  2
  3

  5

Result = itself plus -1.000000 * 81.000000 * recurse

------new limit applied to position 0
new limit: 



  3

  5
Old limit
  0


  3

  5

Result = itself plus 1.000000 * 76.000000 * recurse

--------Limit mask has 2 valid spots, 3, 5
Computations: 1148.000000 = (85.000000 * 14.000000) - (7.000000 * 6.000000)
Returning result
------new limit applied to position 1
new limit: 
  0




  5
Old limit
  0


  3

  5

Result = itself plus -1.000000 * 83.000000 * recurse

--------Limit mask has 2 valid spots, 0, 5
Computations: 26.000000 = (7.000000 * 14.000000) - (12.000000 * 6.000000)
Returning result
------new limit applied to position 2
new limit: 
  0


  3


Old limit
  0


  3

  5

Result = itself plus 1.000000 * 9.000000 * recurse

--------Limit mask has 2 valid spots, 0, 3
Computations: -971.000000 = (7.000000 * 7.000000) - (12.000000 * 85.000000)
Returning result
----new limit applied to position 2
new limit: 
  0

  2


  5
Old limit
  0

  2
  3

  5

Result = itself plus 1.000000 * 84.000000 * recurse

------new limit applied to position 0
new limit: 


  2


  5
Old limit
  0

  2


  5

Result = itself plus 1.000000 * 76.000000 * recurse

--------Limit mask has 2 valid spots, 2, 5
Computations: 1212.000000 = (90.000000 * 14.000000) - (8.000000 * 6.000000)
Returning result
------new limit applied to position 1
new limit: 
  0




  5
Old limit
  0

  2


  5

Result = itself plus -1.000000 * 74.000000 * recurse

--------Limit mask has 2 valid spots, 0, 5
Computations: 26.000000 = (7.000000 * 14.000000) - (12.000000 * 6.000000)
Returning result
------new limit applied to position 2
new limit: 
  0

  2



Old limit
  0

  2


  5

Result = itself plus 1.000000 * 9.000000 * recurse

--------Limit mask has 2 valid spots, 0, 2
Computations: -1024.000000 = (7.000000 * 8.000000) - (12.000000 * 90.000000)
Returning result
----new limit applied to position 3
new limit: 
  0

  2
  3


Old limit
  0

  2
  3

  5

Result = itself plus -1.000000 * 13.000000 * recurse

------new limit applied to position 0
new limit: 


  2
  3


Old limit
  0

  2
  3



Result = itself plus 1.000000 * 76.000000 * recurse

--------Limit mask has 2 valid spots, 2, 3
Computations: -50.000000 = (90.000000 * 7.000000) - (8.000000 * 85.000000)
Returning result
------new limit applied to position 1
new limit: 
  0


  3


Old limit
  0

  2
  3



Result = itself plus -1.000000 * 74.000000 * recurse

--------Limit mask has 2 valid spots, 0, 3
Computations: -971.000000 = (7.000000 * 7.000000) - (12.000000 * 85.000000)
Returning result
------new limit applied to position 2
new limit: 
  0

  2



Old limit
  0

  2
  3



Result = itself plus 1.000000 * 83.000000 * recurse

--------Limit mask has 2 valid spots, 0, 2
Computations: -1024.000000 = (7.000000 * 8.000000) - (12.000000 * 90.000000)
Returning result
--new limit applied to position 4
new limit: 
  0

  2
  3
  4

Old limit
  0

  2
  3
  4
  5

Result = itself plus 1.000000 * 22.000000 * recurse

----new limit applied to position 0
new limit: 


  2
  3
  4

Old limit
  0

  2
  3
  4


Result = itself plus 1.000000 * 21.000000 * recurse

------new limit applied to position 0
new limit: 



  3
  4

Old limit


  2
  3
  4


Result = itself plus 1.000000 * 74.000000 * recurse

--------Limit mask has 2 valid spots, 3, 4
Computations: -292.000000 = (85.000000 * 2.000000) - (7.000000 * 66.000000)
Returning result
------new limit applied to position 1
new limit: 


  2

  4

Old limit


  2
  3
  4


Result = itself plus -1.000000 * 83.000000 * recurse

--------Limit mask has 2 valid spots, 2, 4
Computations: -348.000000 = (90.000000 * 2.000000) - (8.000000 * 66.000000)
Returning result
------new limit applied to position 2
new limit: 


  2
  3


Old limit


  2
  3
  4


Result = itself plus 1.000000 * -3.500000 * recurse

--------Limit mask has 2 valid spots, 2, 3
Computations: -50.000000 = (90.000000 * 7.000000) - (8.000000 * 85.000000)
Returning result
----new limit applied to position 1
new limit: 
  0


  3
  4

Old limit
  0

  2
  3
  4


Result = itself plus -1.000000 * 81.000000 * recurse

------new limit applied to position 0
new limit: 



  3
  4

Old limit
  0


  3
  4


Result = itself plus 1.000000 * 76.000000 * recurse

--------Limit mask has 2 valid spots, 3, 4
Computations: -292.000000 = (85.000000 * 2.000000) - (7.000000 * 66.000000)
Returning result
------new limit applied to position 1
new limit: 
  0



  4

Old limit
  0


  3
  4


Result = itself plus -1.000000 * 83.000000 * recurse

--------Limit mask has 2 valid spots, 0, 4
Computations: -778.000000 = (7.000000 * 2.000000) - (12.000000 * 66.000000)
Returning result
------new limit applied to position 2
new limit: 
  0


  3


Old limit
  0


  3
  4


Result = itself plus 1.000000 * -3.500000 * recurse

--------Limit mask has 2 valid spots, 0, 3
Computations: -971.000000 = (7.000000 * 7.000000) - (12.000000 * 85.000000)
Returning result
----new limit applied to position 2
new limit: 
  0

  2

  4

Old limit
  0

  2
  3
  4


Result = itself plus 1.000000 * 84.000000 * recurse

------new limit applied to position 0
new limit: 


  2

  4

Old limit
  0

  2

  4


Result = itself plus 1.000000 * 76.000000 * recurse

--------Limit mask has 2 valid spots, 2, 4
Computations: -348.000000 = (90.000000 * 2.000000) - (8.000000 * 66.000000)
Returning result
------new limit applied to position 1
new limit: 
  0



  4

Old limit
  0

  2

  4


Result = itself plus -1.000000 * 74.000000 * recurse

--------Limit mask has 2 valid spots, 0, 4
Computations: -778.000000 = (7.000000 * 2.000000) - (12.000000 * 66.000000)
Returning result
------new limit applied to position 2
new limit: 
  0

  2



Old limit
  0

  2

  4


Result = itself plus 1.000000 * -3.500000 * recurse

--------Limit mask has 2 valid spots, 0, 2
Computations: -1024.000000 = (7.000000 * 8.000000) - (12.000000 * 90.000000)
Returning result
----new limit applied to position 3
new limit: 
  0

  2
  3


Old limit
  0

  2
  3
  4


Result = itself plus -1.000000 * 1.000000 * recurse

------new limit applied to position 0
new limit: 


  2
  3


Old limit
  0

  2
  3



Result = itself plus 1.000000 * 76.000000 * recurse

--------Limit mask has 2 valid spots, 2, 3
Computations: -50.000000 = (90.000000 * 7.000000) - (8.000000 * 85.000000)
Returning result
------new limit applied to position 1
new limit: 
  0


  3


Old limit
  0

  2
  3



Result = itself plus -1.000000 * 74.000000 * recurse

--------Limit mask has 2 valid spots, 0, 3
Computations: -971.000000 = (7.000000 * 7.000000) - (12.000000 * 85.000000)
Returning result
------new limit applied to position 2
new limit: 
  0

  2



Old limit
  0

  2
  3



Result = itself plus 1.000000 * 83.000000 * recurse

--------Limit mask has 2 valid spots, 0, 2
Computations: -1024.000000 = (7.000000 * 8.000000) - (12.000000 * 90.000000)
Returning result

New limit is at position 2
Result will equal 1.000000 * 2.000000 * recurse

--new limit applied to position 0
new limit: 

  1

  3
  4
  5
Old limit
  0
  1

  3
  4
  5

Result = itself plus 1.000000 * 72.000000 * recurse

----new limit applied to position 0
new limit: 



  3
  4
  5
Old limit

  1

  3
  4
  5

Result = itself plus 1.000000 * 14.000000 * recurse

------new limit applied to position 0
new limit: 




  4
  5
Old limit



  3
  4
  5

Result = itself plus 1.000000 * 83.000000 * recurse

--------Limit mask has 2 valid spots, 4, 5
Computations: 912.000000 = (66.000000 * 14.000000) - (2.000000 * 6.000000)
Returning result
------new limit applied to position 1
new limit: 



  3

  5
Old limit



  3
  4
  5

Result = itself plus -1.000000 * -3.500000 * recurse

--------Limit mask has 2 valid spots, 3, 5
Computations: 1148.000000 = (85.000000 * 14.000000) - (7.000000 * 6.000000)
Returning result
------new limit applied to position 2
new limit: 



  3
  4

Old limit



  3
  4
  5

Result = itself plus 1.000000 * 9.000000 * recurse

--------Limit mask has 2 valid spots, 3, 4
Computations: -292.000000 = (85.000000 * 2.000000) - (7.000000 * 66.000000)
Returning result
----new limit applied to position 1
new limit: 

  1


  4
  5
Old limit

  1

  3
  4
  5

Result = itself plus -1.000000 * 84.000000 * recurse

------new limit applied to position 0
new limit: 




  4
  5
Old limit

  1


  4
  5

Result = itself plus 1.000000 * 51.000000 * recurse

--------Limit mask has 2 valid spots, 4, 5
Computations: 912.000000 = (66.000000 * 14.000000) - (2.000000 * 6.000000)
Returning result
------new limit applied to position 1
new limit: 

  1



  5
Old limit

  1


  4
  5

Result = itself plus -1.000000 * -3.500000 * recurse

--------Limit mask has 2 valid spots, 1, 5
Computations: 1356.000000 = (99.000000 * 14.000000) - (5.000000 * 6.000000)
Returning result
------new limit applied to position 2
new limit: 

  1


  4

Old limit

  1


  4
  5

Result = itself plus 1.000000 * 9.000000 * recurse

--------Limit mask has 2 valid spots, 1, 4
Computations: -132.000000 = (99.000000 * 2.000000) - (5.000000 * 66.000000)
Returning result
----new limit applied to position 2
new limit: 

  1

  3

  5
Old limit

  1

  3
  4
  5

Result = itself plus 1.000000 * 1.000000 * recurse

------new limit applied to position 0
new limit: 



  3

  5
Old limit

  1

  3

  5

Result = itself plus 1.000000 * 51.000000 * recurse

--------Limit mask has 2 valid spots, 3, 5
Computations: 1148.000000 = (85.000000 * 14.000000) - (7.000000 * 6.000000)
Returning result
------new limit applied to position 1
new limit: 

  1



  5
Old limit

  1

  3

  5

Result = itself plus -1.000000 * 83.000000 * recurse

--------Limit mask has 2 valid spots, 1, 5
Computations: 1356.000000 = (99.000000 * 14.000000) - (5.000000 * 6.000000)
Returning result
------new limit applied to position 2
new limit: 

  1

  3


Old limit

  1

  3

  5

Result = itself plus 1.000000 * 9.000000 * recurse

--------Limit mask has 2 valid spots, 1, 3
Computations: 268.000000 = (99.000000 * 7.000000) - (5.000000 * 85.000000)
Returning result
----new limit applied to position 3
new limit: 

  1

  3
  4

Old limit

  1

  3
  4
  5

Result = itself plus -1.000000 * 13.000000 * recurse

------new limit applied to position 0
new limit: 



  3
  4

Old limit

  1

  3
  4


Result = itself plus 1.000000 * 51.000000 * recurse

--------Limit mask has 2 valid spots, 3, 4
Computations: -292.000000 = (85.000000 * 2.000000) - (7.000000 * 66.000000)
Returning result
------new limit applied to position 1
new limit: 

  1


  4

Old limit

  1

  3
  4


Result = itself plus -1.000000 * 83.000000 * recurse

--------Limit mask has 2 valid spots, 1, 4
Computations: -132.000000 = (99.000000 * 2.000000) - (5.000000 * 66.000000)
Returning result
------new limit applied to position 2
new limit: 

  1

  3


Old limit

  1

  3
  4


Result = itself plus 1.000000 * -3.500000 * recurse

--------Limit mask has 2 valid spots, 1, 3
Computations: 268.000000 = (99.000000 * 7.000000) - (5.000000 * 85.000000)
Returning result
--new limit applied to position 1
new limit: 
  0


  3
  4
  5
Old limit
  0
  1

  3
  4
  5

Result = itself plus -1.000000 * 58.000000 * recurse

----new limit applied to position 0
new limit: 



  3
  4
  5
Old limit
  0


  3
  4
  5

Result = itself plus 1.000000 * 21.000000 * recurse

------new limit applied to position 0
new limit: 




  4
  5
Old limit



  3
  4
  5

Result = itself plus 1.000000 * 83.000000 * recurse

--------Limit mask has 2 valid spots, 4, 5
Computations: 912.000000 = (66.000000 * 14.000000) - (2.000000 * 6.000000)
Returning result
------new limit applied to position 1
new limit: 



  3

  5
Old limit



  3
  4
  5

Result = itself plus -1.000000 * -3.500000 * recurse

--------Limit mask has 2 valid spots, 3, 5
Computations: 1148.000000 = (85.000000 * 14.000000) - (7.000000 * 6.000000)
Returning result
------new limit applied to position 2
new limit: 



  3
  4

Old limit



  3
  4
  5

Result = itself plus 1.000000 * 9.000000 * recurse

--------Limit mask has 2 valid spots, 3, 4
Computations: -292.000000 = (85.000000 * 2.000000) - (7.000000 * 66.000000)
Returning result
----new limit applied to position 1
new limit: 
  0



  4
  5
Old limit
  0


  3
  4
  5

Result = itself plus -1.000000 * 84.000000 * recurse

------new limit applied to position 0
new limit: 




  4
  5
Old limit
  0



  4
  5

Result = itself plus 1.000000 * 76.000000 * recurse

--------Limit mask has 2 valid spots, 4, 5
Computations: 912.000000 = (66.000000 * 14.000000) - (2.000000 * 6.000000)
Returning result
------new limit applied to position 1
new limit: 
  0




  5
Old limit
  0



  4
  5

Result = itself plus -1.000000 * -3.500000 * recurse

--------Limit mask has 2 valid spots, 0, 5
Computations: 26.000000 = (7.000000 * 14.000000) - (12.000000 * 6.000000)
Returning result
------new limit applied to position 2
new limit: 
  0



  4

Old limit
  0



  4
  5

Result = itself plus 1.000000 * 9.000000 * recurse

--------Limit mask has 2 valid spots, 0, 4
Computations: -778.000000 = (7.000000 * 2.000000) - (12.000000 * 66.000000)
Returning result
----new limit applied to position 2
new limit: 
  0


  3

  5
Old limit
  0


  3
  4
  5

Result = itself plus 1.000000 * 1.000000 * recurse

------new limit applied to position 0
new limit: 



  3

  5
Old limit
  0


  3

  5

Result = itself plus 1.000000 * 76.000000 * recurse

--------Limit mask has 2 valid spots, 3, 5
Computations: 1148.000000 = (85.000000 * 14.000000) - (7.000000 * 6.000000)
Returning result
------new limit applied to position 1
new limit: 
  0




  5
Old limit
  0


  3

  5

Result = itself plus -1.000000 * 83.000000 * recurse

--------Limit mask has 2 valid spots, 0, 5
Computations: 26.000000 = (7.000000 * 14.000000) - (12.000000 * 6.000000)
Returning result
------new limit applied to position 2
new limit: 
  0


  3


Old limit
  0


  3

  5

Result = itself plus 1.000000 * 9.000000 * recurse

--------Limit mask has 2 valid spots, 0, 3
Computations: -971.000000 = (7.000000 * 7.000000) - (12.000000 * 85.000000)
Returning result
----new limit applied to position 3
new limit: 
  0


  3
  4

Old limit
  0


  3
  4
  5

Result = itself plus -1.000000 * 13.000000 * recurse

------new limit applied to position 0
new limit: 



  3
  4

Old limit
  0


  3
  4


Result = itself plus 1.000000 * 76.000000 * recurse

--------Limit mask has 2 valid spots, 3, 4
Computations: -292.000000 = (85.000000 * 2.000000) - (7.000000 * 66.000000)
Returning result
------new limit applied to position 1
new limit: 
  0



  4

Old limit
  0


  3
  4


Result = itself plus -1.000000 * 83.000000 * recurse

--------Limit mask has 2 valid spots, 0, 4
Computations: -778.000000 = (7.000000 * 2.000000) - (12.000000 * 66.000000)
Returning result
------new limit applied to position 2
new limit: 
  0


  3


Old limit
  0


  3
  4


Result = itself plus 1.000000 * -3.500000 * recurse

--------Limit mask has 2 valid spots, 0, 3
Computations: -971.000000 = (7.000000 * 7.000000) - (12.000000 * 85.000000)
Returning result
--new limit applied to position 2
new limit: 
  0
  1


  4
  5
Old limit
  0
  1

  3
  4
  5

Result = itself plus 1.000000 * 19.000000 * recurse

----new limit applied to position 0
new limit: 

  1


  4
  5
Old limit
  0
  1


  4
  5

Result = itself plus 1.000000 * 21.000000 * recurse

------new limit applied to position 0
new limit: 




  4
  5
Old limit

  1


  4
  5

Result = itself plus 1.000000 * 51.000000 * recurse

--------Limit mask has 2 valid spots, 4, 5
Computations: 912.000000 = (66.000000 * 14.000000) - (2.000000 * 6.000000)
Returning result
------new limit applied to position 1
new limit: 

  1



  5
Old limit

  1


  4
  5

Result = itself plus -1.000000 * -3.500000 * recurse

--------Limit mask has 2 valid spots, 1, 5
Computations: 1356.000000 = (99.000000 * 14.000000) - (5.000000 * 6.000000)
Returning result
------new limit applied to position 2
new limit: 

  1


  4

Old limit

  1


  4
  5

Result = itself plus 1.000000 * 9.000000 * recurse

--------Limit mask has 2 valid spots, 1, 4
Computations: -132.000000 = (99.000000 * 2.000000) - (5.000000 * 66.000000)
Returning result
----new limit applied to position 1
new limit: 
  0



  4
  5
Old limit
  0
  1


  4
  5

Result = itself plus -1.000000 * 14.000000 * recurse

------new limit applied to position 0
new limit: 




  4
  5
Old limit
  0



  4
  5

Result = itself plus 1.000000 * 76.000000 * recurse

--------Limit mask has 2 valid spots, 4, 5
Computations: 912.000000 = (66.000000 * 14.000000) - (2.000000 * 6.000000)
Returning result
------new limit applied to position 1
new limit: 
  0




  5
Old limit
  0



  4
  5

Result = itself plus -1.000000 * -3.500000 * recurse

--------Limit mask has 2 valid spots, 0, 5
Computations: 26.000000 = (7.000000 * 14.000000) - (12.000000 * 6.000000)
Returning result
------new limit applied to position 2
new limit: 
  0



  4

Old limit
  0



  4
  5

Result = itself plus 1.000000 * 9.000000 * recurse

--------Limit mask has 2 valid spots, 0, 4
Computations: -778.000000 = (7.000000 * 2.000000) - (12.000000 * 66.000000)
Returning result
----new limit applied to position 2
new limit: 
  0
  1



  5
Old limit
  0
  1


  4
  5

Result = itself plus 1.000000 * 1.000000 * recurse

------new limit applied to position 0
new limit: 

  1



  5
Old limit
  0
  1



  5

Result = itself plus 1.000000 * 76.000000 * recurse

--------Limit mask has 2 valid spots, 1, 5
Computations: 1356.000000 = (99.000000 * 14.000000) - (5.000000 * 6.000000)
Returning result
------new limit applied to position 1
new limit: 
  0




  5
Old limit
  0
  1



  5

Result = itself plus -1.000000 * 51.000000 * recurse

--------Limit mask has 2 valid spots, 0, 5
Computations: 26.000000 = (7.000000 * 14.000000) - (12.000000 * 6.000000)
Returning result
------new limit applied to position 2
new limit: 
  0
  1




Old limit
  0
  1



  5

Result = itself plus 1.000000 * 9.000000 * recurse

--------Limit mask has 2 valid spots, 0, 1
Computations: -1153.000000 = (7.000000 * 5.000000) - (12.000000 * 99.000000)
Returning result
----new limit applied to position 3
new limit: 
  0
  1


  4

Old limit
  0
  1


  4
  5

Result = itself plus -1.000000 * 13.000000 * recurse

------new limit applied to position 0
new limit: 

  1


  4

Old limit
  0
  1


  4


Result = itself plus 1.000000 * 76.000000 * recurse

--------Limit mask has 2 valid spots, 1, 4
Computations: -132.000000 = (99.000000 * 2.000000) - (5.000000 * 66.000000)
Returning result
------new limit applied to position 1
new limit: 
  0



  4

Old limit
  0
  1


  4


Result = itself plus -1.000000 * 51.000000 * recurse

--------Limit mask has 2 valid spots, 0, 4
Computations: -778.000000 = (7.000000 * 2.000000) - (12.000000 * 66.000000)
Returning result
------new limit applied to position 2
new limit: 
  0
  1




Old limit
  0
  1


  4


Result = itself plus 1.000000 * -3.500000 * recurse

--------Limit mask has 2 valid spots, 0, 1
Computations: -1153.000000 = (7.000000 * 5.000000) - (12.000000 * 99.000000)
Returning result
--new limit applied to position 3
new limit: 
  0
  1

  3

  5
Old limit
  0
  1

  3
  4
  5

Result = itself plus -1.000000 * 12.000000 * recurse

----new limit applied to position 0
new limit: 

  1

  3

  5
Old limit
  0
  1

  3

  5

Result = itself plus 1.000000 * 21.000000 * recurse

------new limit applied to position 0
new limit: 



  3

  5
Old limit

  1

  3

  5

Result = itself plus 1.000000 * 51.000000 * recurse

--------Limit mask has 2 valid spots, 3, 5
Computations: 1148.000000 = (85.000000 * 14.000000) - (7.000000 * 6.000000)
Returning result
------new limit applied to position 1
new limit: 

  1



  5
Old limit

  1

  3

  5

Result = itself plus -1.000000 * 83.000000 * recurse

--------Limit mask has 2 valid spots, 1, 5
Computations: 1356.000000 = (99.000000 * 14.000000) - (5.000000 * 6.000000)
Returning result
------new limit applied to position 2
new limit: 

  1

  3


Old limit

  1

  3

  5

Result = itself plus 1.000000 * 9.000000 * recurse

--------Limit mask has 2 valid spots, 1, 3
Computations: 268.000000 = (99.000000 * 7.000000) - (5.000000 * 85.000000)
Returning result
----new limit applied to position 1
new limit: 
  0


  3

  5
Old limit
  0
  1

  3

  5

Result = itself plus -1.000000 * 14.000000 * recurse

------new limit applied to position 0
new limit: 



  3

  5
Old limit
  0


  3

  5

Result = itself plus 1.000000 * 76.000000 * recurse

--------Limit mask has 2 valid spots, 3, 5
Computations: 1148.000000 = (85.000000 * 14.000000) - (7.000000 * 6.000000)
Returning result
------new limit applied to position 1
new limit: 
  0




  5
Old limit
  0


  3

  5

Result = itself plus -1.000000 * 83.000000 * recurse

--------Limit mask has 2 valid spots, 0, 5
Computations: 26.000000 = (7.000000 * 14.000000) - (12.000000 * 6.000000)
Returning result
------new limit applied to position 2
new limit: 
  0


  3


Old limit
  0


  3

  5

Result = itself plus 1.000000 * 9.000000 * recurse

--------Limit mask has 2 valid spots, 0, 3
Computations: -971.000000 = (7.000000 * 7.000000) - (12.000000 * 85.000000)
Returning result
----new limit applied to position 2
new limit: 
  0
  1



  5
Old limit
  0
  1

  3

  5

Result = itself plus 1.000000 * 84.000000 * recurse

------new limit applied to position 0
new limit: 

  1



  5
Old limit
  0
  1



  5

Result = itself plus 1.000000 * 76.000000 * recurse

--------Limit mask has 2 valid spots, 1, 5
Computations: 1356.000000 = (99.000000 * 14.000000) - (5.000000 * 6.000000)
Returning result
------new limit applied to position 1
new limit: 
  0




  5
Old limit
  0
  1



  5

Result = itself plus -1.000000 * 51.000000 * recurse

--------Limit mask has 2 valid spots, 0, 5
Computations: 26.000000 = (7.000000 * 14.000000) - (12.000000 * 6.000000)
Returning result
------new limit applied to position 2
new limit: 
  0
  1




Old limit
  0
  1



  5

Result = itself plus 1.000000 * 9.000000 * recurse

--------Limit mask has 2 valid spots, 0, 1
Computations: -1153.000000 = (7.000000 * 5.000000) - (12.000000 * 99.000000)
Returning result
----new limit applied to position 3
new limit: 
  0
  1

  3


Old limit
  0
  1

  3

  5

Result = itself plus -1.000000 * 13.000000 * recurse

------new limit applied to position 0
new limit: 

  1

  3


Old limit
  0
  1

  3



Result = itself plus 1.000000 * 76.000000 * recurse

--------Limit mask has 2 valid spots, 1, 3
Computations: 268.000000 = (99.000000 * 7.000000) - (5.000000 * 85.000000)
Returning result
------new limit applied to position 1
new limit: 
  0


  3


Old limit
  0
  1

  3



Result = itself plus -1.000000 * 51.000000 * recurse

--------Limit mask has 2 valid spots, 0, 3
Computations: -971.000000 = (7.000000 * 7.000000) - (12.000000 * 85.000000)
Returning result
------new limit applied to position 2
new limit: 
  0
  1




Old limit
  0
  1

  3



Result = itself plus 1.000000 * 83.000000 * recurse

--------Limit mask has 2 valid spots, 0, 1
Computations: -1153.000000 = (7.000000 * 5.000000) - (12.000000 * 99.000000)
Returning result
--new limit applied to position 4
new limit: 
  0
  1

  3
  4

Old limit
  0
  1

  3
  4
  5

Result = itself plus 1.000000 * 22.000000 * recurse

----new limit applied to position 0
new limit: 

  1

  3
  4

Old limit
  0
  1

  3
  4


Result = itself plus 1.000000 * 21.000000 * recurse

------new limit applied to position 0
new limit: 



  3
  4

Old limit

  1

  3
  4


Result = itself plus 1.000000 * 51.000000 * recurse

--------Limit mask has 2 valid spots, 3, 4
Computations: -292.000000 = (85.000000 * 2.000000) - (7.000000 * 66.000000)
Returning result
------new limit applied to position 1
new limit: 

  1


  4

Old limit

  1

  3
  4


Result = itself plus -1.000000 * 83.000000 * recurse

--------Limit mask has 2 valid spots, 1, 4
Computations: -132.000000 = (99.000000 * 2.000000) - (5.000000 * 66.000000)
Returning result
------new limit applied to position 2
new limit: 

  1

  3


Old limit

  1

  3
  4


Result = itself plus 1.000000 * -3.500000 * recurse

--------Limit mask has 2 valid spots, 1, 3
Computations: 268.000000 = (99.000000 * 7.000000) - (5.000000 * 85.000000)
Returning result
----new limit applied to position 1
new limit: 
  0


  3
  4

Old limit
  0
  1

  3
  4


Result = itself plus -1.000000 * 14.000000 * recurse

------new limit applied to position 0
new limit: 



  3
  4

Old limit
  0


  3
  4


Result = itself plus 1.000000 * 76.000000 * recurse

--------Limit mask has 2 valid spots, 3, 4
Computations: -292.000000 = (85.000000 * 2.000000) - (7.000000 * 66.000000)
Returning result
------new limit applied to position 1
new limit: 
  0



  4

Old limit
  0


  3
  4


Result = itself plus -1.000000 * 83.000000 * recurse

--------Limit mask has 2 valid spots, 0, 4
Computations: -778.000000 = (7.000000 * 2.000000) - (12.000000 * 66.000000)
Returning result
------new limit applied to position 2
new limit: 
  0


  3


Old limit
  0


  3
  4


Result = itself plus 1.000000 * -3.500000 * recurse

--------Limit mask has 2 valid spots, 0, 3
Computations: -971.000000 = (7.000000 * 7.000000) - (12.000000 * 85.000000)
Returning result
----new limit applied to position 2
new limit: 
  0
  1


  4

Old limit
  0
  1

  3
  4


Result = itself plus 1.000000 * 84.000000 * recurse

------new limit applied to position 0
new limit: 

  1


  4

Old limit
  0
  1


  4


Result = itself plus 1.000000 * 76.000000 * recurse

--------Limit mask has 2 valid spots, 1, 4
Computations: -132.000000 = (99.000000 * 2.000000) - (5.000000 * 66.000000)
Returning result
------new limit applied to position 1
new limit: 
  0



  4

Old limit
  0
  1


  4


Result = itself plus -1.000000 * 51.000000 * recurse

--------Limit mask has 2 valid spots, 0, 4
Computations: -778.000000 = (7.000000 * 2.000000) - (12.000000 * 66.000000)
Returning result
------new limit applied to position 2
new limit: 
  0
  1




Old limit
  0
  1


  4


Result = itself plus 1.000000 * -3.500000 * recurse

--------Limit mask has 2 valid spots, 0, 1
Computations: -1153.000000 = (7.000000 * 5.000000) - (12.000000 * 99.000000)
Returning result
----new limit applied to position 3
new limit: 
  0
  1

  3


Old limit
  0
  1

  3
  4


Result = itself plus -1.000000 * 1.000000 * recurse

------new limit applied to position 0
new limit: 

  1

  3


Old limit
  0
  1

  3



Result = itself plus 1.000000 * 76.000000 * recurse

--------Limit mask has 2 valid spots, 1, 3
Computations: 268.000000 = (99.000000 * 7.000000) - (5.000000 * 85.000000)
Returning result
------new limit applied to position 1
new limit: 
  0


  3


Old limit
  0
  1

  3



Result = itself plus -1.000000 * 51.000000 * recurse

--------Limit mask has 2 valid spots, 0, 3
Computations: -971.000000 = (7.000000 * 7.000000) - (12.000000 * 85.000000)
Returning result
------new limit applied to position 2
new limit: 
  0
  1




Old limit
  0
  1

  3



Result = itself plus 1.000000 * 83.000000 * recurse

--------Limit mask has 2 valid spots, 0, 1
Computations: -1153.000000 = (7.000000 * 5.000000) - (12.000000 * 99.000000)
Returning result

New limit is at position 3
Result will equal -1.000000 * 4.000000 * recurse

--new limit applied to position 0
new limit: 

  1
  2

  4
  5
Old limit
  0
  1
  2

  4
  5

Result = itself plus 1.000000 * 72.000000 * recurse

----new limit applied to position 0
new limit: 


  2

  4
  5
Old limit

  1
  2

  4
  5

Result = itself plus 1.000000 * 14.000000 * recurse

------new limit applied to position 0
new limit: 




  4
  5
Old limit


  2

  4
  5

Result = itself plus 1.000000 * 74.000000 * recurse

--------Limit mask has 2 valid spots, 4, 5
Computations: 912.000000 = (66.000000 * 14.000000) - (2.000000 * 6.000000)
Returning result
------new limit applied to position 1
new limit: 


  2


  5
Old limit


  2

  4
  5

Result = itself plus -1.000000 * -3.500000 * recurse

--------Limit mask has 2 valid spots, 2, 5
Computations: 1212.000000 = (90.000000 * 14.000000) - (8.000000 * 6.000000)
Returning result
------new limit applied to position 2
new limit: 


  2

  4

Old limit


  2

  4
  5

Result = itself plus 1.000000 * 9.000000 * recurse

--------Limit mask has 2 valid spots, 2, 4
Computations: -348.000000 = (90.000000 * 2.000000) - (8.000000 * 66.000000)
Returning result
----new limit applied to position 1
new limit: 

  1


  4
  5
Old limit

  1
  2

  4
  5

Result = itself plus -1.000000 * 81.000000 * recurse

------new limit applied to position 0
new limit: 




  4
  5
Old limit

  1


  4
  5

Result = itself plus 1.000000 * 51.000000 * recurse

--------Limit mask has 2 valid spots, 4, 5
Computations: 912.000000 = (66.000000 * 14.000000) - (2.000000 * 6.000000)
Returning result
------new limit applied to position 1
new limit: 

  1



  5
Old limit

  1


  4
  5

Result = itself plus -1.000000 * -3.500000 * recurse

--------Limit mask has 2 valid spots, 1, 5
Computations: 1356.000000 = (99.000000 * 14.000000) - (5.000000 * 6.000000)
Returning result
------new limit applied to position 2
new limit: 

  1


  4

Old limit

  1


  4
  5

Result = itself plus 1.000000 * 9.000000 * recurse

--------Limit mask has 2 valid spots, 1, 4
Computations: -132.000000 = (99.000000 * 2.000000) - (5.000000 * 66.000000)
Returning result
----new limit applied to position 2
new limit: 

  1
  2


  5
Old limit

  1
  2

  4
  5

Result = itself plus 1.000000 * 1.000000 * recurse

------new limit applied to position 0
new limit: 


  2


  5
Old limit

  1
  2


  5

Result = itself plus 1.000000 * 51.000000 * recurse

--------Limit mask has 2 valid spots, 2, 5
Computations: 1212.000000 = (90.000000 * 14.000000) - (8.000000 * 6.000000)
Returning result
------new limit applied to position 1
new limit: 

  1



  5
Old limit

  1
  2


  5

Result = itself plus -1.000000 * 74.000000 * recurse

--------Limit mask has 2 valid spots, 1, 5
Computations: 1356.000000 = (99.000000 * 14.000000) - (5.000000 * 6.000000)
Returning result
------new limit applied to position 2
new limit: 

  1
  2



Old limit

  1
  2


  5

Result = itself plus 1.000000 * 9.000000 * recurse

--------Limit mask has 2 valid spots, 1, 2
Computations: 342.000000 = (99.000000 * 8.000000) - (5.000000 * 90.000000)
Returning result
----new limit applied to position 3
new limit: 

  1
  2

  4

Old limit

  1
  2

  4
  5

Result = itself plus -1.000000 * 13.000000 * recurse

------new limit applied to position 0
new limit: 


  2

  4

Old limit

  1
  2

  4


Result = itself plus 1.000000 * 51.000000 * recurse

--------Limit mask has 2 valid spots, 2, 4
Computations: -348.000000 = (90.000000 * 2.000000) - (8.000000 * 66.000000)
Returning result
------new limit applied to position 1
new limit: 

  1


  4

Old limit

  1
  2

  4


Result = itself plus -1.000000 * 74.000000 * recurse

--------Limit mask has 2 valid spots, 1, 4
Computations: -132.000000 = (99.000000 * 2.000000) - (5.000000 * 66.000000)
Returning result
------new limit applied to position 2
new limit: 

  1
  2



Old limit

  1
  2

  4


Result = itself plus 1.000000 * -3.500000 * recurse

--------Limit mask has 2 valid spots, 1, 2
Computations: 342.000000 = (99.000000 * 8.000000) - (5.000000 * 90.000000)
Returning result
--new limit applied to position 1
new limit: 
  0

  2

  4
  5
Old limit
  0
  1
  2

  4
  5

Result = itself plus -1.000000 * 58.000000 * recurse

----new limit applied to position 0
new limit: 


  2

  4
  5
Old limit
  0

  2

  4
  5

Result = itself plus 1.000000 * 21.000000 * recurse

------new limit applied to position 0
new limit: 




  4
  5
Old limit


  2

  4
  5

Result = itself plus 1.000000 * 74.000000 * recurse

--------Limit mask has 2 valid spots, 4, 5
Computations: 912.000000 = (66.000000 * 14.000000) - (2.000000 * 6.000000)
Returning result
------new limit applied to position 1
new limit: 


  2


  5
Old limit


  2

  4
  5

Result = itself plus -1.000000 * -3.500000 * recurse

--------Limit mask has 2 valid spots, 2, 5
Computations: 1212.000000 = (90.000000 * 14.000000) - (8.000000 * 6.000000)
Returning result
------new limit applied to position 2
new limit: 


  2

  4

Old limit


  2

  4
  5

Result = itself plus 1.000000 * 9.000000 * recurse

--------Limit mask has 2 valid spots, 2, 4
Computations: -348.000000 = (90.000000 * 2.000000) - (8.000000 * 66.000000)
Returning result
----new limit applied to position 1
new limit: 
  0



  4
  5
Old limit
  0

  2

  4
  5

Result = itself plus -1.000000 * 81.000000 * recurse

------new limit applied to position 0
new limit: 




  4
  5
Old limit
  0



  4
  5

Result = itself plus 1.000000 * 76.000000 * recurse

--------Limit mask has 2 valid spots, 4, 5
Computations: 912.000000 = (66.000000 * 14.000000) - (2.000000 * 6.000000)
Returning result
------new limit applied to position 1
new limit: 
  0




  5
Old limit
  0



  4
  5

Result = itself plus -1.000000 * -3.500000 * recurse

--------Limit mask has 2 valid spots, 0, 5
Computations: 26.000000 = (7.000000 * 14.000000) - (12.000000 * 6.000000)
Returning result
------new limit applied to position 2
new limit: 
  0



  4

Old limit
  0



  4
  5

Result = itself plus 1.000000 * 9.000000 * recurse

--------Limit mask has 2 valid spots, 0, 4
Computations: -778.000000 = (7.000000 * 2.000000) - (12.000000 * 66.000000)
Returning result
----new limit applied to position 2
new limit: 
  0

  2


  5
Old limit
  0

  2

  4
  5

Result = itself plus 1.000000 * 1.000000 * recurse

------new limit applied to position 0
new limit: 


  2


  5
Old limit
  0

  2


  5

Result = itself plus 1.000000 * 76.000000 * recurse

--------Limit mask has 2 valid spots, 2, 5
Computations: 1212.000000 = (90.000000 * 14.000000) - (8.000000 * 6.000000)
Returning result
------new limit applied to position 1
new limit: 
  0




  5
Old limit
  0

  2


  5

Result = itself plus -1.000000 * 74.000000 * recurse

--------Limit mask has 2 valid spots, 0, 5
Computations: 26.000000 = (7.000000 * 14.000000) - (12.000000 * 6.000000)
Returning result
------new limit applied to position 2
new limit: 
  0

  2



Old limit
  0

  2


  5

Result = itself plus 1.000000 * 9.000000 * recurse

--------Limit mask has 2 valid spots, 0, 2
Computations: -1024.000000 = (7.000000 * 8.000000) - (12.000000 * 90.000000)
Returning result
----new limit applied to position 3
new limit: 
  0

  2

  4

Old limit
  0

  2

  4
  5

Result = itself plus -1.000000 * 13.000000 * recurse

------new limit applied to position 0
new limit: 


  2

  4

Old limit
  0

  2

  4


Result = itself plus 1.000000 * 76.000000 * recurse

--------Limit mask has 2 valid spots, 2, 4
Computations: -348.000000 = (90.000000 * 2.000000) - (8.000000 * 66.000000)
Returning result
------new limit applied to position 1
new limit: 
  0



  4

Old limit
  0

  2

  4


Result = itself plus -1.000000 * 74.000000 * recurse

--------Limit mask has 2 valid spots, 0, 4
Computations: -778.000000 = (7.000000 * 2.000000) - (12.000000 * 66.000000)
Returning result
------new limit applied to position 2
new limit: 
  0

  2



Old limit
  0

  2

  4


Result = itself plus 1.000000 * -3.500000 * recurse

--------Limit mask has 2 valid spots, 0, 2
Computations: -1024.000000 = (7.000000 * 8.000000) - (12.000000 * 90.000000)
Returning result
--new limit applied to position 2
new limit: 
  0
  1


  4
  5
Old limit
  0
  1
  2

  4
  5

Result = itself plus 1.000000 * 22.000000 * recurse

----new limit applied to position 0
new limit: 

  1


  4
  5
Old limit
  0
  1


  4
  5

Result = itself plus 1.000000 * 21.000000 * recurse

------new limit applied to position 0
new limit: 




  4
  5
Old limit

  1


  4
  5

Result = itself plus 1.000000 * 51.000000 * recurse

--------Limit mask has 2 valid spots, 4, 5
Computations: 912.000000 = (66.000000 * 14.000000) - (2.000000 * 6.000000)
Returning result
------new limit applied to position 1
new limit: 

  1



  5
Old limit

  1


  4
  5

Result = itself plus -1.000000 * -3.500000 * recurse

--------Limit mask has 2 valid spots, 1, 5
Computations: 1356.000000 = (99.000000 * 14.000000) - (5.000000 * 6.000000)
Returning result
------new limit applied to position 2
new limit: 

  1


  4

Old limit

  1


  4
  5

Result = itself plus 1.000000 * 9.000000 * recurse

--------Limit mask has 2 valid spots, 1, 4
Computations: -132.000000 = (99.000000 * 2.000000) - (5.000000 * 66.000000)
Returning result
----new limit applied to position 1
new limit: 
  0



  4
  5
Old limit
  0
  1


  4
  5

Result = itself plus -1.000000 * 14.000000 * recurse

------new limit applied to position 0
new limit: 




  4
  5
Old limit
  0



  4
  5

Result = itself plus 1.000000 * 76.000000 * recurse

--------Limit mask has 2 valid spots, 4, 5
Computations: 912.000000 = (66.000000 * 14.000000) - (2.000000 * 6.000000)
Returning result
------new limit applied to position 1
new limit: 
  0




  5
Old limit
  0



  4
  5

Result = itself plus -1.000000 * -3.500000 * recurse

--------Limit mask has 2 valid spots, 0, 5
Computations: 26.000000 = (7.000000 * 14.000000) - (12.000000 * 6.000000)
Returning result
------new limit applied to position 2
new limit: 
  0



  4

Old limit
  0



  4
  5

Result = itself plus 1.000000 * 9.000000 * recurse

--------Limit mask has 2 valid spots, 0, 4
Computations: -778.000000 = (7.000000 * 2.000000) - (12.000000 * 66.000000)
Returning result
----new limit applied to position 2
new limit: 
  0
  1



  5
Old limit
  0
  1


  4
  5

Result = itself plus 1.000000 * 1.000000 * recurse

------new limit applied to position 0
new limit: 

  1



  5
Old limit
  0
  1



  5

Result = itself plus 1.000000 * 76.000000 * recurse

--------Limit mask has 2 valid spots, 1, 5
Computations: 1356.000000 = (99.000000 * 14.000000) - (5.000000 * 6.000000)
Returning result
------new limit applied to position 1
new limit: 
  0




  5
Old limit
  0
  1



  5

Result = itself plus -1.000000 * 51.000000 * recurse

--------Limit mask has 2 valid spots, 0, 5
Computations: 26.000000 = (7.000000 * 14.000000) - (12.000000 * 6.000000)
Returning result
------new limit applied to position 2
new limit: 
  0
  1




Old limit
  0
  1



  5

Result = itself plus 1.000000 * 9.000000 * recurse

--------Limit mask has 2 valid spots, 0, 1
Computations: -1153.000000 = (7.000000 * 5.000000) - (12.000000 * 99.000000)
Returning result
----new limit applied to position 3
new limit: 
  0
  1


  4

Old limit
  0
  1


  4
  5

Result = itself plus -1.000000 * 13.000000 * recurse

------new limit applied to position 0
new limit: 

  1


  4

Old limit
  0
  1


  4


Result = itself plus 1.000000 * 76.000000 * recurse

--------Limit mask has 2 valid spots, 1, 4
Computations: -132.000000 = (99.000000 * 2.000000) - (5.000000 * 66.000000)
Returning result
------new limit applied to position 1
new limit: 
  0



  4

Old limit
  0
  1


  4


Result = itself plus -1.000000 * 51.000000 * recurse

--------Limit mask has 2 valid spots, 0, 4
Computations: -778.000000 = (7.000000 * 2.000000) - (12.000000 * 66.000000)
Returning result
------new limit applied to position 2
new limit: 
  0
  1




Old limit
  0
  1


  4


Result = itself plus 1.000000 * -3.500000 * recurse

--------Limit mask has 2 valid spots, 0, 1
Computations: -1153.000000 = (7.000000 * 5.000000) - (12.000000 * 99.000000)
Returning result
--new limit applied to position 3
new limit: 
  0
  1
  2


  5
Old limit
  0
  1
  2

  4
  5

Result = itself plus -1.000000 * 12.000000 * recurse

----new limit applied to position 0
new limit: 

  1
  2


  5
Old limit
  0
  1
  2


  5

Result = itself plus 1.000000 * 21.000000 * recurse

------new limit applied to position 0
new limit: 


  2


  5
Old limit

  1
  2


  5

Result = itself plus 1.000000 * 51.000000 * recurse

--------Limit mask has 2 valid spots, 2, 5
Computations: 1212.000000 = (90.000000 * 14.000000) - (8.000000 * 6.000000)
Returning result
------new limit applied to position 1
new limit: 

  1



  5
Old limit

  1
  2


  5

Result = itself plus -1.000000 * 74.000000 * recurse

--------Limit mask has 2 valid spots, 1, 5
Computations: 1356.000000 = (99.000000 * 14.000000) - (5.000000 * 6.000000)
Returning result
------new limit applied to position 2
new limit: 

  1
  2



Old limit

  1
  2


  5

Result = itself plus 1.000000 * 9.000000 * recurse

--------Limit mask has 2 valid spots, 1, 2
Computations: 342.000000 = (99.000000 * 8.000000) - (5.000000 * 90.000000)
Returning result
----new limit applied to position 1
new limit: 
  0

  2


  5
Old limit
  0
  1
  2


  5

Result = itself plus -1.000000 * 14.000000 * recurse

------new limit applied to position 0
new limit: 


  2


  5
Old limit
  0

  2


  5

Result = itself plus 1.000000 * 76.000000 * recurse

--------Limit mask has 2 valid spots, 2, 5
Computations: 1212.000000 = (90.000000 * 14.000000) - (8.000000 * 6.000000)
Returning result
------new limit applied to position 1
new limit: 
  0




  5
Old limit
  0

  2


  5

Result = itself plus -1.000000 * 74.000000 * recurse

--------Limit mask has 2 valid spots, 0, 5
Computations: 26.000000 = (7.000000 * 14.000000) - (12.000000 * 6.000000)
Returning result
------new limit applied to position 2
new limit: 
  0

  2



Old limit
  0

  2


  5

Result = itself plus 1.000000 * 9.000000 * recurse

--------Limit mask has 2 valid spots, 0, 2
Computations: -1024.000000 = (7.000000 * 8.000000) - (12.000000 * 90.000000)
Returning result
----new limit applied to position 2
new limit: 
  0
  1



  5
Old limit
  0
  1
  2


  5

Result = itself plus 1.000000 * 81.000000 * recurse

------new limit applied to position 0
new limit: 

  1



  5
Old limit
  0
  1



  5

Result = itself plus 1.000000 * 76.000000 * recurse

--------Limit mask has 2 valid spots, 1, 5
Computations: 1356.000000 = (99.000000 * 14.000000) - (5.000000 * 6.000000)
Returning result
------new limit applied to position 1
new limit: 
  0




  5
Old limit
  0
  1



  5

Result = itself plus -1.000000 * 51.000000 * recurse

--------Limit mask has 2 valid spots, 0, 5
Computations: 26.000000 = (7.000000 * 14.000000) - (12.000000 * 6.000000)
Returning result
------new limit applied to position 2
new limit: 
  0
  1




Old limit
  0
  1



  5

Result = itself plus 1.000000 * 9.000000 * recurse

--------Limit mask has 2 valid spots, 0, 1
Computations: -1153.000000 = (7.000000 * 5.000000) - (12.000000 * 99.000000)
Returning result
----new limit applied to position 3
new limit: 
  0
  1
  2



Old limit
  0
  1
  2


  5

Result = itself plus -1.000000 * 13.000000 * recurse

------new limit applied to position 0
new limit: 

  1
  2



Old limit
  0
  1
  2




Result = itself plus 1.000000 * 76.000000 * recurse

--------Limit mask has 2 valid spots, 1, 2
Computations: 342.000000 = (99.000000 * 8.000000) - (5.000000 * 90.000000)
Returning result
------new limit applied to position 1
new limit: 
  0

  2



Old limit
  0
  1
  2




Result = itself plus -1.000000 * 51.000000 * recurse

--------Limit mask has 2 valid spots, 0, 2
Computations: -1024.000000 = (7.000000 * 8.000000) - (12.000000 * 90.000000)
Returning result
------new limit applied to position 2
new limit: 
  0
  1




Old limit
  0
  1
  2




Result = itself plus 1.000000 * 74.000000 * recurse

--------Limit mask has 2 valid spots, 0, 1
Computations: -1153.000000 = (7.000000 * 5.000000) - (12.000000 * 99.000000)
Returning result
--new limit applied to position 4
new limit: 
  0
  1
  2

  4

Old limit
  0
  1
  2

  4
  5

Result = itself plus 1.000000 * 22.000000 * recurse

----new limit applied to position 0
new limit: 

  1
  2

  4

Old limit
  0
  1
  2

  4


Result = itself plus 1.000000 * 21.000000 * recurse

------new limit applied to position 0
new limit: 


  2

  4

Old limit

  1
  2

  4


Result = itself plus 1.000000 * 51.000000 * recurse

--------Limit mask has 2 valid spots, 2, 4
Computations: -348.000000 = (90.000000 * 2.000000) - (8.000000 * 66.000000)
Returning result
------new limit applied to position 1
new limit: 

  1


  4

Old limit

  1
  2

  4


Result = itself plus -1.000000 * 74.000000 * recurse

--------Limit mask has 2 valid spots, 1, 4
Computations: -132.000000 = (99.000000 * 2.000000) - (5.000000 * 66.000000)
Returning result
------new limit applied to position 2
new limit: 

  1
  2



Old limit

  1
  2

  4


Result = itself plus 1.000000 * -3.500000 * recurse

--------Limit mask has 2 valid spots, 1, 2
Computations: 342.000000 = (99.000000 * 8.000000) - (5.000000 * 90.000000)
Returning result
----new limit applied to position 1
new limit: 
  0

  2

  4

Old limit
  0
  1
  2

  4


Result = itself plus -1.000000 * 14.000000 * recurse

------new limit applied to position 0
new limit: 


  2

  4

Old limit
  0

  2

  4


Result = itself plus 1.000000 * 76.000000 * recurse

--------Limit mask has 2 valid spots, 2, 4
Computations: -348.000000 = (90.000000 * 2.000000) - (8.000000 * 66.000000)
Returning result
------new limit applied to position 1
new limit: 
  0



  4

Old limit
  0

  2

  4


Result = itself plus -1.000000 * 74.000000 * recurse

--------Limit mask has 2 valid spots, 0, 4
Computations: -778.000000 = (7.000000 * 2.000000) - (12.000000 * 66.000000)
Returning result
------new limit applied to position 2
new limit: 
  0

  2



Old limit
  0

  2

  4


Result = itself plus 1.000000 * -3.500000 * recurse

--------Limit mask has 2 valid spots, 0, 2
Computations: -1024.000000 = (7.000000 * 8.000000) - (12.000000 * 90.000000)
Returning result
----new limit applied to position 2
new limit: 
  0
  1


  4

Old limit
  0
  1
  2

  4


Result = itself plus 1.000000 * 81.000000 * recurse

------new limit applied to position 0
new limit: 

  1


  4

Old limit
  0
  1


  4


Result = itself plus 1.000000 * 76.000000 * recurse

--------Limit mask has 2 valid spots, 1, 4
Computations: -132.000000 = (99.000000 * 2.000000) - (5.000000 * 66.000000)
Returning result
------new limit applied to position 1
new limit: 
  0



  4

Old limit
  0
  1


  4


Result = itself plus -1.000000 * 51.000000 * recurse

--------Limit mask has 2 valid spots, 0, 4
Computations: -778.000000 = (7.000000 * 2.000000) - (12.000000 * 66.000000)
Returning result
------new limit applied to position 2
new limit: 
  0
  1




Old limit
  0
  1


  4


Result = itself plus 1.000000 * -3.500000 * recurse

--------Limit mask has 2 valid spots, 0, 1
Computations: -1153.000000 = (7.000000 * 5.000000) - (12.000000 * 99.000000)
Returning result
----new limit applied to position 3
new limit: 
  0
  1
  2



Old limit
  0
  1
  2

  4


Result = itself plus -1.000000 * 1.000000 * recurse

------new limit applied to position 0
new limit: 

  1
  2



Old limit
  0
  1
  2




Result = itself plus 1.000000 * 76.000000 * recurse

--------Limit mask has 2 valid spots, 1, 2
Computations: 342.000000 = (99.000000 * 8.000000) - (5.000000 * 90.000000)
Returning result
------new limit applied to position 1
new limit: 
  0

  2



Old limit
  0
  1
  2




Result = itself plus -1.000000 * 51.000000 * recurse

--------Limit mask has 2 valid spots, 0, 2
Computations: -1024.000000 = (7.000000 * 8.000000) - (12.000000 * 90.000000)
Returning result
------new limit applied to position 2
new limit: 
  0
  1




Old limit
  0
  1
  2




Result = itself plus 1.000000 * 74.000000 * recurse

--------Limit mask has 2 valid spots, 0, 1
Computations: -1153.000000 = (7.000000 * 5.000000) - (12.000000 * 99.000000)
Returning result

New limit is at position 4
Result will equal 1.000000 * 13.000000 * recurse

--new limit applied to position 0
new limit: 

  1
  2
  3

  5
Old limit
  0
  1
  2
  3

  5

Result = itself plus 1.000000 * 72.000000 * recurse

----new limit applied to position 0
new limit: 


  2
  3

  5
Old limit

  1
  2
  3

  5

Result = itself plus 1.000000 * 14.000000 * recurse

------new limit applied to position 0
new limit: 



  3

  5
Old limit


  2
  3

  5

Result = itself plus 1.000000 * 74.000000 * recurse

--------Limit mask has 2 valid spots, 3, 5
Computations: 1148.000000 = (85.000000 * 14.000000) - (7.000000 * 6.000000)
Returning result
------new limit applied to position 1
new limit: 


  2


  5
Old limit


  2
  3

  5

Result = itself plus -1.000000 * 83.000000 * recurse

--------Limit mask has 2 valid spots, 2, 5
Computations: 1212.000000 = (90.000000 * 14.000000) - (8.000000 * 6.000000)
Returning result
------new limit applied to position 2
new limit: 


  2
  3


Old limit


  2
  3

  5

Result = itself plus 1.000000 * 9.000000 * recurse

--------Limit mask has 2 valid spots, 2, 3
Computations: -50.000000 = (90.000000 * 7.000000) - (8.000000 * 85.000000)
Returning result
----new limit applied to position 1
new limit: 

  1

  3

  5
Old limit

  1
  2
  3

  5

Result = itself plus -1.000000 * 81.000000 * recurse

------new limit applied to position 0
new limit: 



  3

  5
Old limit

  1

  3

  5

Result = itself plus 1.000000 * 51.000000 * recurse

--------Limit mask has 2 valid spots, 3, 5
Computations: 1148.000000 = (85.000000 * 14.000000) - (7.000000 * 6.000000)
Returning result
------new limit applied to position 1
new limit: 

  1



  5
Old limit

  1

  3

  5

Result = itself plus -1.000000 * 83.000000 * recurse

--------Limit mask has 2 valid spots, 1, 5
Computations: 1356.000000 = (99.000000 * 14.000000) - (5.000000 * 6.000000)
Returning result
------new limit applied to position 2
new limit: 

  1

  3


Old limit

  1

  3

  5

Result = itself plus 1.000000 * 9.000000 * recurse

--------Limit mask has 2 valid spots, 1, 3
Computations: 268.000000 = (99.000000 * 7.000000) - (5.000000 * 85.000000)
Returning result
----new limit applied to position 2
new limit: 

  1
  2


  5
Old limit

  1
  2
  3

  5

Result = itself plus 1.000000 * 84.000000 * recurse

------new limit applied to position 0
new limit: 


  2


  5
Old limit

  1
  2


  5

Result = itself plus 1.000000 * 51.000000 * recurse

--------Limit mask has 2 valid spots, 2, 5
Computations: 1212.000000 = (90.000000 * 14.000000) - (8.000000 * 6.000000)
Returning result
------new limit applied to position 1
new limit: 

  1



  5
Old limit

  1
  2


  5

Result = itself plus -1.000000 * 74.000000 * recurse

--------Limit mask has 2 valid spots, 1, 5
Computations: 1356.000000 = (99.000000 * 14.000000) - (5.000000 * 6.000000)
Returning result
------new limit applied to position 2
new limit: 

  1
  2



Old limit

  1
  2


  5

Result = itself plus 1.000000 * 9.000000 * recurse

--------Limit mask has 2 valid spots, 1, 2
Computations: 342.000000 = (99.000000 * 8.000000) - (5.000000 * 90.000000)
Returning result
----new limit applied to position 3
new limit: 

  1
  2
  3


Old limit

  1
  2
  3

  5

Result = itself plus -1.000000 * 13.000000 * recurse

------new limit applied to position 0
new limit: 


  2
  3


Old limit

  1
  2
  3



Result = itself plus 1.000000 * 51.000000 * recurse

--------Limit mask has 2 valid spots, 2, 3
Computations: -50.000000 = (90.000000 * 7.000000) - (8.000000 * 85.000000)
Returning result
------new limit applied to position 1
new limit: 

  1

  3


Old limit

  1
  2
  3



Result = itself plus -1.000000 * 74.000000 * recurse

--------Limit mask has 2 valid spots, 1, 3
Computations: 268.000000 = (99.000000 * 7.000000) - (5.000000 * 85.000000)
Returning result
------new limit applied to position 2
new limit: 

  1
  2



Old limit

  1
  2
  3



Result = itself plus 1.000000 * 83.000000 * recurse

--------Limit mask has 2 valid spots, 1, 2
Computations: 342.000000 = (99.000000 * 8.000000) - (5.000000 * 90.000000)
Returning result
--new limit applied to position 1
new limit: 
  0

  2
  3

  5
Old limit
  0
  1
  2
  3

  5

Result = itself plus -1.000000 * 58.000000 * recurse

----new limit applied to position 0
new limit: 


  2
  3

  5
Old limit
  0

  2
  3

  5

Result = itself plus 1.000000 * 21.000000 * recurse

------new limit applied to position 0
new limit: 



  3

  5
Old limit


  2
  3

  5

Result = itself plus 1.000000 * 74.000000 * recurse

--------Limit mask has 2 valid spots, 3, 5
Computations: 1148.000000 = (85.000000 * 14.000000) - (7.000000 * 6.000000)
Returning result
------new limit applied to position 1
new limit: 


  2


  5
Old limit


  2
  3

  5

Result = itself plus -1.000000 * 83.000000 * recurse

--------Limit mask has 2 valid spots, 2, 5
Computations: 1212.000000 = (90.000000 * 14.000000) - (8.000000 * 6.000000)
Returning result
------new limit applied to position 2
new limit: 


  2
  3


Old limit


  2
  3

  5

Result = itself plus 1.000000 * 9.000000 * recurse

--------Limit mask has 2 valid spots, 2, 3
Computations: -50.000000 = (90.000000 * 7.000000) - (8.000000 * 85.000000)
Returning result
----new limit applied to position 1
new limit: 
  0


  3

  5
Old limit
  0

  2
  3

  5

Result = itself plus -1.000000 * 81.000000 * recurse

------new limit applied to position 0
new limit: 



  3

  5
Old limit
  0


  3

  5

Result = itself plus 1.000000 * 76.000000 * recurse

--------Limit mask has 2 valid spots, 3, 5
Computations: 1148.000000 = (85.000000 * 14.000000) - (7.000000 * 6.000000)
Returning result
------new limit applied to position 1
new limit: 
  0




  5
Old limit
  0


  3

  5

Result = itself plus -1.000000 * 83.000000 * recurse

--------Limit mask has 2 valid spots, 0, 5
Computations: 26.000000 = (7.000000 * 14.000000) - (12.000000 * 6.000000)
Returning result
------new limit applied to position 2
new limit: 
  0


  3


Old limit
  0


  3

  5

Result = itself plus 1.000000 * 9.000000 * recurse

--------Limit mask has 2 valid spots, 0, 3
Computations: -971.000000 = (7.000000 * 7.000000) - (12.000000 * 85.000000)
Returning result
----new limit applied to position 2
new limit: 
  0

  2


  5
Old limit
  0

  2
  3

  5

Result = itself plus 1.000000 * 84.000000 * recurse

------new limit applied to position 0
new limit: 


  2


  5
Old limit
  0

  2


  5

Result = itself plus 1.000000 * 76.000000 * recurse

--------Limit mask has 2 valid spots, 2, 5
Computations: 1212.000000 = (90.000000 * 14.000000) - (8.000000 * 6.000000)
Returning result
------new limit applied to position 1
new limit: 
  0




  5
Old limit
  0

  2


  5

Result = itself plus -1.000000 * 74.000000 * recurse

--------Limit mask has 2 valid spots, 0, 5
Computations: 26.000000 = (7.000000 * 14.000000) - (12.000000 * 6.000000)
Returning result
------new limit applied to position 2
new limit: 
  0

  2



Old limit
  0

  2


  5

Result = itself plus 1.000000 * 9.000000 * recurse

--------Limit mask has 2 valid spots, 0, 2
Computations: -1024.000000 = (7.000000 * 8.000000) - (12.000000 * 90.000000)
Returning result
----new limit applied to position 3
new limit: 
  0

  2
  3


Old limit
  0

  2
  3

  5

Result = itself plus -1.000000 * 13.000000 * recurse

------new limit applied to position 0
new limit: 


  2
  3


Old limit
  0

  2
  3



Result = itself plus 1.000000 * 76.000000 * recurse

--------Limit mask has 2 valid spots, 2, 3
Computations: -50.000000 = (90.000000 * 7.000000) - (8.000000 * 85.000000)
Returning result
------new limit applied to position 1
new limit: 
  0


  3


Old limit
  0

  2
  3



Result = itself plus -1.000000 * 74.000000 * recurse

--------Limit mask has 2 valid spots, 0, 3
Computations: -971.000000 = (7.000000 * 7.000000) - (12.000000 * 85.000000)
Returning result
------new limit applied to position 2
new limit: 
  0

  2



Old limit
  0

  2
  3



Result = itself plus 1.000000 * 83.000000 * recurse

--------Limit mask has 2 valid spots, 0, 2
Computations: -1024.000000 = (7.000000 * 8.000000) - (12.000000 * 90.000000)
Returning result
--new limit applied to position 2
new limit: 
  0
  1

  3

  5
Old limit
  0
  1
  2
  3

  5

Result = itself plus 1.000000 * 22.000000 * recurse

----new limit applied to position 0
new limit: 

  1

  3

  5
Old limit
  0
  1

  3

  5

Result = itself plus 1.000000 * 21.000000 * recurse

------new limit applied to position 0
new limit: 



  3

  5
Old limit

  1

  3

  5

Result = itself plus 1.000000 * 51.000000 * recurse

--------Limit mask has 2 valid spots, 3, 5
Computations: 1148.000000 = (85.000000 * 14.000000) - (7.000000 * 6.000000)
Returning result
------new limit applied to position 1
new limit: 

  1



  5
Old limit

  1

  3

  5

Result = itself plus -1.000000 * 83.000000 * recurse

--------Limit mask has 2 valid spots, 1, 5
Computations: 1356.000000 = (99.000000 * 14.000000) - (5.000000 * 6.000000)
Returning result
------new limit applied to position 2
new limit: 

  1

  3


Old limit

  1

  3

  5

Result = itself plus 1.000000 * 9.000000 * recurse

--------Limit mask has 2 valid spots, 1, 3
Computations: 268.000000 = (99.000000 * 7.000000) - (5.000000 * 85.000000)
Returning result
----new limit applied to position 1
new limit: 
  0


  3

  5
Old limit
  0
  1

  3

  5

Result = itself plus -1.000000 * 14.000000 * recurse

------new limit applied to position 0
new limit: 



  3

  5
Old limit
  0


  3

  5

Result = itself plus 1.000000 * 76.000000 * recurse

--------Limit mask has 2 valid spots, 3, 5
Computations: 1148.000000 = (85.000000 * 14.000000) - (7.000000 * 6.000000)
Returning result
------new limit applied to position 1
new limit: 
  0




  5
Old limit
  0


  3

  5

Result = itself plus -1.000000 * 83.000000 * recurse

--------Limit mask has 2 valid spots, 0, 5
Computations: 26.000000 = (7.000000 * 14.000000) - (12.000000 * 6.000000)
Returning result
------new limit applied to position 2
new limit: 
  0


  3


Old limit
  0


  3

  5

Result = itself plus 1.000000 * 9.000000 * recurse

--------Limit mask has 2 valid spots, 0, 3
Computations: -971.000000 = (7.000000 * 7.000000) - (12.000000 * 85.000000)
Returning result
----new limit applied to position 2
new limit: 
  0
  1



  5
Old limit
  0
  1

  3

  5

Result = itself plus 1.000000 * 84.000000 * recurse

------new limit applied to position 0
new limit: 

  1



  5
Old limit
  0
  1



  5

Result = itself plus 1.000000 * 76.000000 * recurse

--------Limit mask has 2 valid spots, 1, 5
Computations: 1356.000000 = (99.000000 * 14.000000) - (5.000000 * 6.000000)
Returning result
------new limit applied to position 1
new limit: 
  0




  5
Old limit
  0
  1



  5

Result = itself plus -1.000000 * 51.000000 * recurse

--------Limit mask has 2 valid spots, 0, 5
Computations: 26.000000 = (7.000000 * 14.000000) - (12.000000 * 6.000000)
Returning result
------new limit applied to position 2
new limit: 
  0
  1




Old limit
  0
  1



  5

Result = itself plus 1.000000 * 9.000000 * recurse

--------Limit mask has 2 valid spots, 0, 1
Computations: -1153.000000 = (7.000000 * 5.000000) - (12.000000 * 99.000000)
Returning result
----new limit applied to position 3
new limit: 
  0
  1

  3


Old limit
  0
  1

  3

  5

Result = itself plus -1.000000 * 13.000000 * recurse

------new limit applied to position 0
new limit: 

  1

  3


Old limit
  0
  1

  3



Result = itself plus 1.000000 * 76.000000 * recurse

--------Limit mask has 2 valid spots, 1, 3
Computations: 268.000000 = (99.000000 * 7.000000) - (5.000000 * 85.000000)
Returning result
------new limit applied to position 1
new limit: 
  0


  3


Old limit
  0
  1

  3



Result = itself plus -1.000000 * 51.000000 * recurse

--------Limit mask has 2 valid spots, 0, 3
Computations: -971.000000 = (7.000000 * 7.000000) - (12.000000 * 85.000000)
Returning result
------new limit applied to position 2
new limit: 
  0
  1




Old limit
  0
  1

  3



Result = itself plus 1.000000 * 83.000000 * recurse

--------Limit mask has 2 valid spots, 0, 1
Computations: -1153.000000 = (7.000000 * 5.000000) - (12.000000 * 99.000000)
Returning result
--new limit applied to position 3
new limit: 
  0
  1
  2


  5
Old limit
  0
  1
  2
  3

  5

Result = itself plus -1.000000 * 19.000000 * recurse

----new limit applied to position 0
new limit: 

  1
  2


  5
Old limit
  0
  1
  2


  5

Result = itself plus 1.000000 * 21.000000 * recurse

------new limit applied to position 0
new limit: 


  2


  5
Old limit

  1
  2


  5

Result = itself plus 1.000000 * 51.000000 * recurse

--------Limit mask has 2 valid spots, 2, 5
Computations: 1212.000000 = (90.000000 * 14.000000) - (8.000000 * 6.000000)
Returning result
------new limit applied to position 1
new limit: 

  1



  5
Old limit

  1
  2


  5

Result = itself plus -1.000000 * 74.000000 * recurse

--------Limit mask has 2 valid spots, 1, 5
Computations: 1356.000000 = (99.000000 * 14.000000) - (5.000000 * 6.000000)
Returning result
------new limit applied to position 2
new limit: 

  1
  2



Old limit

  1
  2


  5

Result = itself plus 1.000000 * 9.000000 * recurse

--------Limit mask has 2 valid spots, 1, 2
Computations: 342.000000 = (99.000000 * 8.000000) - (5.000000 * 90.000000)
Returning result
----new limit applied to position 1
new limit: 
  0

  2


  5
Old limit
  0
  1
  2


  5

Result = itself plus -1.000000 * 14.000000 * recurse

------new limit applied to position 0
new limit: 


  2


  5
Old limit
  0

  2


  5

Result = itself plus 1.000000 * 76.000000 * recurse

--------Limit mask has 2 valid spots, 2, 5
Computations: 1212.000000 = (90.000000 * 14.000000) - (8.000000 * 6.000000)
Returning result
------new limit applied to position 1
new limit: 
  0




  5
Old limit
  0

  2


  5

Result = itself plus -1.000000 * 74.000000 * recurse

--------Limit mask has 2 valid spots, 0, 5
Computations: 26.000000 = (7.000000 * 14.000000) - (12.000000 * 6.000000)
Returning result
------new limit applied to position 2
new limit: 
  0

  2



Old limit
  0

  2


  5

Result = itself plus 1.000000 * 9.000000 * recurse

--------Limit mask has 2 valid spots, 0, 2
Computations: -1024.000000 = (7.000000 * 8.000000) - (12.000000 * 90.000000)
Returning result
----new limit applied to position 2
new limit: 
  0
  1



  5
Old limit
  0
  1
  2


  5

Result = itself plus 1.000000 * 81.000000 * recurse

------new limit applied to position 0
new limit: 

  1



  5
Old limit
  0
  1



  5

Result = itself plus 1.000000 * 76.000000 * recurse

--------Limit mask has 2 valid spots, 1, 5
Computations: 1356.000000 = (99.000000 * 14.000000) - (5.000000 * 6.000000)
Returning result
------new limit applied to position 1
new limit: 
  0




  5
Old limit
  0
  1



  5

Result = itself plus -1.000000 * 51.000000 * recurse

--------Limit mask has 2 valid spots, 0, 5
Computations: 26.000000 = (7.000000 * 14.000000) - (12.000000 * 6.000000)
Returning result
------new limit applied to position 2
new limit: 
  0
  1




Old limit
  0
  1



  5

Result = itself plus 1.000000 * 9.000000 * recurse

--------Limit mask has 2 valid spots, 0, 1
Computations: -1153.000000 = (7.000000 * 5.000000) - (12.000000 * 99.000000)
Returning result
----new limit applied to position 3
new limit: 
  0
  1
  2



Old limit
  0
  1
  2


  5

Result = itself plus -1.000000 * 13.000000 * recurse

------new limit applied to position 0
new limit: 

  1
  2



Old limit
  0
  1
  2




Result = itself plus 1.000000 * 76.000000 * recurse

--------Limit mask has 2 valid spots, 1, 2
Computations: 342.000000 = (99.000000 * 8.000000) - (5.000000 * 90.000000)
Returning result
------new limit applied to position 1
new limit: 
  0

  2



Old limit
  0
  1
  2




Result = itself plus -1.000000 * 51.000000 * recurse

--------Limit mask has 2 valid spots, 0, 2
Computations: -1024.000000 = (7.000000 * 8.000000) - (12.000000 * 90.000000)
Returning result
------new limit applied to position 2
new limit: 
  0
  1




Old limit
  0
  1
  2




Result = itself plus 1.000000 * 74.000000 * recurse

--------Limit mask has 2 valid spots, 0, 1
Computations: -1153.000000 = (7.000000 * 5.000000) - (12.000000 * 99.000000)
Returning result
--new limit applied to position 4
new limit: 
  0
  1
  2
  3


Old limit
  0
  1
  2
  3

  5

Result = itself plus 1.000000 * 22.000000 * recurse

----new limit applied to position 0
new limit: 

  1
  2
  3


Old limit
  0
  1
  2
  3



Result = itself plus 1.000000 * 21.000000 * recurse

------new limit applied to position 0
new limit: 


  2
  3


Old limit

  1
  2
  3



Result = itself plus 1.000000 * 51.000000 * recurse

--------Limit mask has 2 valid spots, 2, 3
Computations: -50.000000 = (90.000000 * 7.000000) - (8.000000 * 85.000000)
Returning result
------new limit applied to position 1
new limit: 

  1

  3


Old limit

  1
  2
  3



Result = itself plus -1.000000 * 74.000000 * recurse

--------Limit mask has 2 valid spots, 1, 3
Computations: 268.000000 = (99.000000 * 7.000000) - (5.000000 * 85.000000)
Returning result
------new limit applied to position 2
new limit: 

  1
  2



Old limit

  1
  2
  3



Result = itself plus 1.000000 * 83.000000 * recurse

--------Limit mask has 2 valid spots, 1, 2
Computations: 342.000000 = (99.000000 * 8.000000) - (5.000000 * 90.000000)
Returning result
----new limit applied to position 1
new limit: 
  0

  2
  3


Old limit
  0
  1
  2
  3



Result = itself plus -1.000000 * 14.000000 * recurse

------new limit applied to position 0
new limit: 


  2
  3


Old limit
  0

  2
  3



Result = itself plus 1.000000 * 76.000000 * recurse

--------Limit mask has 2 valid spots, 2, 3
Computations: -50.000000 = (90.000000 * 7.000000) - (8.000000 * 85.000000)
Returning result
------new limit applied to position 1
new limit: 
  0


  3


Old limit
  0

  2
  3



Result = itself plus -1.000000 * 74.000000 * recurse

--------Limit mask has 2 valid spots, 0, 3
Computations: -971.000000 = (7.000000 * 7.000000) - (12.000000 * 85.000000)
Returning result
------new limit applied to position 2
new limit: 
  0

  2



Old limit
  0

  2
  3



Result = itself plus 1.000000 * 83.000000 * recurse

--------Limit mask has 2 valid spots, 0, 2
Computations: -1024.000000 = (7.000000 * 8.000000) - (12.000000 * 90.000000)
Returning result
----new limit applied to position 2
new limit: 
  0
  1

  3


Old limit
  0
  1
  2
  3



Result = itself plus 1.000000 * 81.000000 * recurse

------new limit applied to position 0
new limit: 

  1

  3


Old limit
  0
  1

  3



Result = itself plus 1.000000 * 76.000000 * recurse

--------Limit mask has 2 valid spots, 1, 3
Computations: 268.000000 = (99.000000 * 7.000000) - (5.000000 * 85.000000)
Returning result
------new limit applied to position 1
new limit: 
  0


  3


Old limit
  0
  1

  3



Result = itself plus -1.000000 * 51.000000 * recurse

--------Limit mask has 2 valid spots, 0, 3
Computations: -971.000000 = (7.000000 * 7.000000) - (12.000000 * 85.000000)
Returning result
------new limit applied to position 2
new limit: 
  0
  1




Old limit
  0
  1

  3



Result = itself plus 1.000000 * 83.000000 * recurse

--------Limit mask has 2 valid spots, 0, 1
Computations: -1153.000000 = (7.000000 * 5.000000) - (12.000000 * 99.000000)
Returning result
----new limit applied to position 3
new limit: 
  0
  1
  2



Old limit
  0
  1
  2
  3



Result = itself plus -1.000000 * 84.000000 * recurse

------new limit applied to position 0
new limit: 

  1
  2



Old limit
  0
  1
  2




Result = itself plus 1.000000 * 76.000000 * recurse

--------Limit mask has 2 valid spots, 1, 2
Computations: 342.000000 = (99.000000 * 8.000000) - (5.000000 * 90.000000)
Returning result
------new limit applied to position 1
new limit: 
  0

  2



Old limit
  0
  1
  2




Result = itself plus -1.000000 * 51.000000 * recurse

--------Limit mask has 2 valid spots, 0, 2
Computations: -1024.000000 = (7.000000 * 8.000000) - (12.000000 * 90.000000)
Returning result
------new limit applied to position 2
new limit: 
  0
  1




Old limit
  0
  1
  2




Result = itself plus 1.000000 * 74.000000 * recurse

--------Limit mask has 2 valid spots, 0, 1
Computations: -1153.000000 = (7.000000 * 5.000000) - (12.000000 * 99.000000)
Returning result

New limit is at position 5
Result will equal -1.000000 * 19.000000 * recurse

--new limit applied to position 0
new limit: 

  1
  2
  3
  4

Old limit
  0
  1
  2
  3
  4


Result = itself plus 1.000000 * 72.000000 * recurse

----new limit applied to position 0
new limit: 


  2
  3
  4

Old limit

  1
  2
  3
  4


Result = itself plus 1.000000 * 14.000000 * recurse

------new limit applied to position 0
new limit: 



  3
  4

Old limit


  2
  3
  4


Result = itself plus 1.000000 * 74.000000 * recurse

--------Limit mask has 2 valid spots, 3, 4
Computations: -292.000000 = (85.000000 * 2.000000) - (7.000000 * 66.000000)
Returning result
------new limit applied to position 1
new limit: 


  2

  4

Old limit


  2
  3
  4


Result = itself plus -1.000000 * 83.000000 * recurse

--------Limit mask has 2 valid spots, 2, 4
Computations: -348.000000 = (90.000000 * 2.000000) - (8.000000 * 66.000000)
Returning result
------new limit applied to position 2
new limit: 


  2
  3


Old limit


  2
  3
  4


Result = itself plus 1.000000 * -3.500000 * recurse

--------Limit mask has 2 valid spots, 2, 3
Computations: -50.000000 = (90.000000 * 7.000000) - (8.000000 * 85.000000)
Returning result
----new limit applied to position 1
new limit: 

  1

  3
  4

Old limit

  1
  2
  3
  4


Result = itself plus -1.000000 * 81.000000 * recurse

------new limit applied to position 0
new limit: 



  3
  4

Old limit

  1

  3
  4


Result = itself plus 1.000000 * 51.000000 * recurse

--------Limit mask has 2 valid spots, 3, 4
Computations: -292.000000 = (85.000000 * 2.000000) - (7.000000 * 66.000000)
Returning result
------new limit applied to position 1
new limit: 

  1


  4

Old limit

  1

  3
  4


Result = itself plus -1.000000 * 83.000000 * recurse

--------Limit mask has 2 valid spots, 1, 4
Computations: -132.000000 = (99.000000 * 2.000000) - (5.000000 * 66.000000)
Returning result
------new limit applied to position 2
new limit: 

  1

  3


Old limit

  1

  3
  4


Result = itself plus 1.000000 * -3.500000 * recurse

--------Limit mask has 2 valid spots, 1, 3
Computations: 268.000000 = (99.000000 * 7.000000) - (5.000000 * 85.000000)
Returning result
----new limit applied to position 2
new limit: 

  1
  2

  4

Old limit

  1
  2
  3
  4


Result = itself plus 1.000000 * 84.000000 * recurse

------new limit applied to position 0
new limit: 


  2

  4

Old limit

  1
  2

  4


Result = itself plus 1.000000 * 51.000000 * recurse

--------Limit mask has 2 valid spots, 2, 4
Computations: -348.000000 = (90.000000 * 2.000000) - (8.000000 * 66.000000)
Returning result
------new limit applied to position 1
new limit: 

  1


  4

Old limit

  1
  2

  4


Result = itself plus -1.000000 * 74.000000 * recurse

--------Limit mask has 2 valid spots, 1, 4
Computations: -132.000000 = (99.000000 * 2.000000) - (5.000000 * 66.000000)
Returning result
------new limit applied to position 2
new limit: 

  1
  2



Old limit

  1
  2

  4


Result = itself plus 1.000000 * -3.500000 * recurse

--------Limit mask has 2 valid spots, 1, 2
Computations: 342.000000 = (99.000000 * 8.000000) - (5.000000 * 90.000000)
Returning result
----new limit applied to position 3
new limit: 

  1
  2
  3


Old limit

  1
  2
  3
  4


Result = itself plus -1.000000 * 1.000000 * recurse

------new limit applied to position 0
new limit: 


  2
  3


Old limit

  1
  2
  3



Result = itself plus 1.000000 * 51.000000 * recurse

--------Limit mask has 2 valid spots, 2, 3
Computations: -50.000000 = (90.000000 * 7.000000) - (8.000000 * 85.000000)
Returning result
------new limit applied to position 1
new limit: 

  1

  3


Old limit

  1
  2
  3



Result = itself plus -1.000000 * 74.000000 * recurse

--------Limit mask has 2 valid spots, 1, 3
Computations: 268.000000 = (99.000000 * 7.000000) - (5.000000 * 85.000000)
Returning result
------new limit applied to position 2
new limit: 

  1
  2



Old limit

  1
  2
  3



Result = itself plus 1.000000 * 83.000000 * recurse

--------Limit mask has 2 valid spots, 1, 2
Computations: 342.000000 = (99.000000 * 8.000000) - (5.000000 * 90.000000)
Returning result
--new limit applied to position 1
new limit: 
  0

  2
  3
  4

Old limit
  0
  1
  2
  3
  4


Result = itself plus -1.000000 * 58.000000 * recurse

----new limit applied to position 0
new limit: 


  2
  3
  4

Old limit
  0

  2
  3
  4


Result = itself plus 1.000000 * 21.000000 * recurse

------new limit applied to position 0
new limit: 



  3
  4

Old limit


  2
  3
  4


Result = itself plus 1.000000 * 74.000000 * recurse

--------Limit mask has 2 valid spots, 3, 4
Computations: -292.000000 = (85.000000 * 2.000000) - (7.000000 * 66.000000)
Returning result
------new limit applied to position 1
new limit: 


  2

  4

Old limit


  2
  3
  4


Result = itself plus -1.000000 * 83.000000 * recurse

--------Limit mask has 2 valid spots, 2, 4
Computations: -348.000000 = (90.000000 * 2.000000) - (8.000000 * 66.000000)
Returning result
------new limit applied to position 2
new limit: 


  2
  3


Old limit


  2
  3
  4


Result = itself plus 1.000000 * -3.500000 * recurse

--------Limit mask has 2 valid spots, 2, 3
Computations: -50.000000 = (90.000000 * 7.000000) - (8.000000 * 85.000000)
Returning result
----new limit applied to position 1
new limit: 
  0


  3
  4

Old limit
  0

  2
  3
  4


Result = itself plus -1.000000 * 81.000000 * recurse

------new limit applied to position 0
new limit: 



  3
  4

Old limit
  0


  3
  4


Result = itself plus 1.000000 * 76.000000 * recurse

--------Limit mask has 2 valid spots, 3, 4
Computations: -292.000000 = (85.000000 * 2.000000) - (7.000000 * 66.000000)
Returning result
------new limit applied to position 1
new limit: 
  0



  4

Old limit
  0


  3
  4


Result = itself plus -1.000000 * 83.000000 * recurse

--------Limit mask has 2 valid spots, 0, 4
Computations: -778.000000 = (7.000000 * 2.000000) - (12.000000 * 66.000000)
Returning result
------new limit applied to position 2
new limit: 
  0


  3


Old limit
  0


  3
  4


Result = itself plus 1.000000 * -3.500000 * recurse

--------Limit mask has 2 valid spots, 0, 3
Computations: -971.000000 = (7.000000 * 7.000000) - (12.000000 * 85.000000)
Returning result
----new limit applied to position 2
new limit: 
  0

  2

  4

Old limit
  0

  2
  3
  4


Result = itself plus 1.000000 * 84.000000 * recurse

------new limit applied to position 0
new limit: 


  2

  4

Old limit
  0

  2

  4


Result = itself plus 1.000000 * 76.000000 * recurse

--------Limit mask has 2 valid spots, 2, 4
Computations: -348.000000 = (90.000000 * 2.000000) - (8.000000 * 66.000000)
Returning result
------new limit applied to position 1
new limit: 
  0



  4

Old limit
  0

  2

  4


Result = itself plus -1.000000 * 74.000000 * recurse

--------Limit mask has 2 valid spots, 0, 4
Computations: -778.000000 = (7.000000 * 2.000000) - (12.000000 * 66.000000)
Returning result
------new limit applied to position 2
new limit: 
  0

  2



Old limit
  0

  2

  4


Result = itself plus 1.000000 * -3.500000 * recurse

--------Limit mask has 2 valid spots, 0, 2
Computations: -1024.000000 = (7.000000 * 8.000000) - (12.000000 * 90.000000)
Returning result
----new limit applied to position 3
new limit: 
  0

  2
  3


Old limit
  0

  2
  3
  4


Result = itself plus -1.000000 * 1.000000 * recurse

------new limit applied to position 0
new limit: 


  2
  3


Old limit
  0

  2
  3



Result = itself plus 1.000000 * 76.000000 * recurse

--------Limit mask has 2 valid spots, 2, 3
Computations: -50.000000 = (90.000000 * 7.000000) - (8.000000 * 85.000000)
Returning result
------new limit applied to position 1
new limit: 
  0


  3


Old limit
  0

  2
  3



Result = itself plus -1.000000 * 74.000000 * recurse

--------Limit mask has 2 valid spots, 0, 3
Computations: -971.000000 = (7.000000 * 7.000000) - (12.000000 * 85.000000)
Returning result
------new limit applied to position 2
new limit: 
  0

  2



Old limit
  0

  2
  3



Result = itself plus 1.000000 * 83.000000 * recurse

--------Limit mask has 2 valid spots, 0, 2
Computations: -1024.000000 = (7.000000 * 8.000000) - (12.000000 * 90.000000)
Returning result
--new limit applied to position 2
new limit: 
  0
  1

  3
  4

Old limit
  0
  1
  2
  3
  4


Result = itself plus 1.000000 * 22.000000 * recurse

----new limit applied to position 0
new limit: 

  1

  3
  4

Old limit
  0
  1

  3
  4


Result = itself plus 1.000000 * 21.000000 * recurse

------new limit applied to position 0
new limit: 



  3
  4

Old limit

  1

  3
  4


Result = itself plus 1.000000 * 51.000000 * recurse

--------Limit mask has 2 valid spots, 3, 4
Computations: -292.000000 = (85.000000 * 2.000000) - (7.000000 * 66.000000)
Returning result
------new limit applied to position 1
new limit: 

  1


  4

Old limit

  1

  3
  4


Result = itself plus -1.000000 * 83.000000 * recurse

--------Limit mask has 2 valid spots, 1, 4
Computations: -132.000000 = (99.000000 * 2.000000) - (5.000000 * 66.000000)
Returning result
------new limit applied to position 2
new limit: 

  1

  3


Old limit

  1

  3
  4


Result = itself plus 1.000000 * -3.500000 * recurse

--------Limit mask has 2 valid spots, 1, 3
Computations: 268.000000 = (99.000000 * 7.000000) - (5.000000 * 85.000000)
Returning result
----new limit applied to position 1
new limit: 
  0


  3
  4

Old limit
  0
  1

  3
  4


Result = itself plus -1.000000 * 14.000000 * recurse

------new limit applied to position 0
new limit: 



  3
  4

Old limit
  0


  3
  4


Result = itself plus 1.000000 * 76.000000 * recurse

--------Limit mask has 2 valid spots, 3, 4
Computations: -292.000000 = (85.000000 * 2.000000) - (7.000000 * 66.000000)
Returning result
------new limit applied to position 1
new limit: 
  0



  4

Old limit
  0


  3
  4


Result = itself plus -1.000000 * 83.000000 * recurse

--------Limit mask has 2 valid spots, 0, 4
Computations: -778.000000 = (7.000000 * 2.000000) - (12.000000 * 66.000000)
Returning result
------new limit applied to position 2
new limit: 
  0


  3


Old limit
  0


  3
  4


Result = itself plus 1.000000 * -3.500000 * recurse

--------Limit mask has 2 valid spots, 0, 3
Computations: -971.000000 = (7.000000 * 7.000000) - (12.000000 * 85.000000)
Returning result
----new limit applied to position 2
new limit: 
  0
  1


  4

Old limit
  0
  1

  3
  4


Result = itself plus 1.000000 * 84.000000 * recurse

------new limit applied to position 0
new limit: 

  1


  4

Old limit
  0
  1


  4


Result = itself plus 1.000000 * 76.000000 * recurse

--------Limit mask has 2 valid spots, 1, 4
Computations: -132.000000 = (99.000000 * 2.000000) - (5.000000 * 66.000000)
Returning result
------new limit applied to position 1
new limit: 
  0



  4

Old limit
  0
  1


  4


Result = itself plus -1.000000 * 51.000000 * recurse

--------Limit mask has 2 valid spots, 0, 4
Computations: -778.000000 = (7.000000 * 2.000000) - (12.000000 * 66.000000)
Returning result
------new limit applied to position 2
new limit: 
  0
  1




Old limit
  0
  1


  4


Result = itself plus 1.000000 * -3.500000 * recurse

--------Limit mask has 2 valid spots, 0, 1
Computations: -1153.000000 = (7.000000 * 5.000000) - (12.000000 * 99.000000)
Returning result
----new limit applied to position 3
new limit: 
  0
  1

  3


Old limit
  0
  1

  3
  4


Result = itself plus -1.000000 * 1.000000 * recurse

------new limit applied to position 0
new limit: 

  1

  3


Old limit
  0
  1

  3



Result = itself plus 1.000000 * 76.000000 * recurse

--------Limit mask has 2 valid spots, 1, 3
Computations: 268.000000 = (99.000000 * 7.000000) - (5.000000 * 85.000000)
Returning result
------new limit applied to position 1
new limit: 
  0


  3


Old limit
  0
  1

  3



Result = itself plus -1.000000 * 51.000000 * recurse

--------Limit mask has 2 valid spots, 0, 3
Computations: -971.000000 = (7.000000 * 7.000000) - (12.000000 * 85.000000)
Returning result
------new limit applied to position 2
new limit: 
  0
  1




Old limit
  0
  1

  3



Result = itself plus 1.000000 * 83.000000 * recurse

--------Limit mask has 2 valid spots, 0, 1
Computations: -1153.000000 = (7.000000 * 5.000000) - (12.000000 * 99.000000)
Returning result
--new limit applied to position 3
new limit: 
  0
  1
  2

  4

Old limit
  0
  1
  2
  3
  4


Result = itself plus -1.000000 * 19.000000 * recurse

----new limit applied to position 0
new limit: 

  1
  2

  4

Old limit
  0
  1
  2

  4


Result = itself plus 1.000000 * 21.000000 * recurse

------new limit applied to position 0
new limit: 


  2

  4

Old limit

  1
  2

  4


Result = itself plus 1.000000 * 51.000000 * recurse

--------Limit mask has 2 valid spots, 2, 4
Computations: -348.000000 = (90.000000 * 2.000000) - (8.000000 * 66.000000)
Returning result
------new limit applied to position 1
new limit: 

  1


  4

Old limit

  1
  2

  4


Result = itself plus -1.000000 * 74.000000 * recurse

--------Limit mask has 2 valid spots, 1, 4
Computations: -132.000000 = (99.000000 * 2.000000) - (5.000000 * 66.000000)
Returning result
------new limit applied to position 2
new limit: 

  1
  2



Old limit

  1
  2

  4


Result = itself plus 1.000000 * -3.500000 * recurse

--------Limit mask has 2 valid spots, 1, 2
Computations: 342.000000 = (99.000000 * 8.000000) - (5.000000 * 90.000000)
Returning result
----new limit applied to position 1
new limit: 
  0

  2

  4

Old limit
  0
  1
  2

  4


Result = itself plus -1.000000 * 14.000000 * recurse

------new limit applied to position 0
new limit: 


  2

  4

Old limit
  0

  2

  4


Result = itself plus 1.000000 * 76.000000 * recurse

--------Limit mask has 2 valid spots, 2, 4
Computations: -348.000000 = (90.000000 * 2.000000) - (8.000000 * 66.000000)
Returning result
------new limit applied to position 1
new limit: 
  0



  4

Old limit
  0

  2

  4


Result = itself plus -1.000000 * 74.000000 * recurse

--------Limit mask has 2 valid spots, 0, 4
Computations: -778.000000 = (7.000000 * 2.000000) - (12.000000 * 66.000000)
Returning result
------new limit applied to position 2
new limit: 
  0

  2



Old limit
  0

  2

  4


Result = itself plus 1.000000 * -3.500000 * recurse

--------Limit mask has 2 valid spots, 0, 2
Computations: -1024.000000 = (7.000000 * 8.000000) - (12.000000 * 90.000000)
Returning result
----new limit applied to position 2
new limit: 
  0
  1


  4

Old limit
  0
  1
  2

  4


Result = itself plus 1.000000 * 81.000000 * recurse

------new limit applied to position 0
new limit: 

  1


  4

Old limit
  0
  1


  4


Result = itself plus 1.000000 * 76.000000 * recurse

--------Limit mask has 2 valid spots, 1, 4
Computations: -132.000000 = (99.000000 * 2.000000) - (5.000000 * 66.000000)
Returning result
------new limit applied to position 1
new limit: 
  0



  4

Old limit
  0
  1


  4


Result = itself plus -1.000000 * 51.000000 * recurse

--------Limit mask has 2 valid spots, 0, 4
Computations: -778.000000 = (7.000000 * 2.000000) - (12.000000 * 66.000000)
Returning result
------new limit applied to position 2
new limit: 
  0
  1




Old limit
  0
  1


  4


Result = itself plus 1.000000 * -3.500000 * recurse

--------Limit mask has 2 valid spots, 0, 1
Computations: -1153.000000 = (7.000000 * 5.000000) - (12.000000 * 99.000000)
Returning result
----new limit applied to position 3
new limit: 
  0
  1
  2



Old limit
  0
  1
  2

  4


Result = itself plus -1.000000 * 1.000000 * recurse

------new limit applied to position 0
new limit: 

  1
  2



Old limit
  0
  1
  2




Result = itself plus 1.000000 * 76.000000 * recurse

--------Limit mask has 2 valid spots, 1, 2
Computations: 342.000000 = (99.000000 * 8.000000) - (5.000000 * 90.000000)
Returning result
------new limit applied to position 1
new limit: 
  0

  2



Old limit
  0
  1
  2




Result = itself plus -1.000000 * 51.000000 * recurse

--------Limit mask has 2 valid spots, 0, 2
Computations: -1024.000000 = (7.000000 * 8.000000) - (12.000000 * 90.000000)
Returning result
------new limit applied to position 2
new limit: 
  0
  1




Old limit
  0
  1
  2




Result = itself plus 1.000000 * 74.000000 * recurse

--------Limit mask has 2 valid spots, 0, 1
Computations: -1153.000000 = (7.000000 * 5.000000) - (12.000000 * 99.000000)
Returning result
--new limit applied to position 4
new limit: 
  0
  1
  2
  3


Old limit
  0
  1
  2
  3
  4


Result = itself plus 1.000000 * 12.000000 * recurse

----new limit applied to position 0
new limit: 

  1
  2
  3


Old limit
  0
  1
  2
  3



Result = itself plus 1.000000 * 21.000000 * recurse

------new limit applied to position 0
new limit: 


  2
  3


Old limit

  1
  2
  3



Result = itself plus 1.000000 * 51.000000 * recurse

--------Limit mask has 2 valid spots, 2, 3
Computations: -50.000000 = (90.000000 * 7.000000) - (8.000000 * 85.000000)
Returning result
------new limit applied to position 1
new limit: 

  1

  3


Old limit

  1
  2
  3



Result = itself plus -1.000000 * 74.000000 * recurse

--------Limit mask has 2 valid spots, 1, 3
Computations: 268.000000 = (99.000000 * 7.000000) - (5.000000 * 85.000000)
Returning result
------new limit applied to position 2
new limit: 

  1
  2



Old limit

  1
  2
  3



Result = itself plus 1.000000 * 83.000000 * recurse

--------Limit mask has 2 valid spots, 1, 2
Computations: 342.000000 = (99.000000 * 8.000000) - (5.000000 * 90.000000)
Returning result
----new limit applied to position 1
new limit: 
  0

  2
  3


Old limit
  0
  1
  2
  3



Result = itself plus -1.000000 * 14.000000 * recurse

------new limit applied to position 0
new limit: 


  2
  3


Old limit
  0

  2
  3



Result = itself plus 1.000000 * 76.000000 * recurse

--------Limit mask has 2 valid spots, 2, 3
Computations: -50.000000 = (90.000000 * 7.000000) - (8.000000 * 85.000000)
Returning result
------new limit applied to position 1
new limit: 
  0


  3


Old limit
  0

  2
  3



Result = itself plus -1.000000 * 74.000000 * recurse

--------Limit mask has 2 valid spots, 0, 3
Computations: -971.000000 = (7.000000 * 7.000000) - (12.000000 * 85.000000)
Returning result
------new limit applied to position 2
new limit: 
  0

  2



Old limit
  0

  2
  3



Result = itself plus 1.000000 * 83.000000 * recurse

--------Limit mask has 2 valid spots, 0, 2
Computations: -1024.000000 = (7.000000 * 8.000000) - (12.000000 * 90.000000)
Returning result
----new limit applied to position 2
new limit: 
  0
  1

  3


Old limit
  0
  1
  2
  3



Result = itself plus 1.000000 * 81.000000 * recurse

------new limit applied to position 0
new limit: 

  1

  3


Old limit
  0
  1

  3



Result = itself plus 1.000000 * 76.000000 * recurse

--------Limit mask has 2 valid spots, 1, 3
Computations: 268.000000 = (99.000000 * 7.000000) - (5.000000 * 85.000000)
Returning result
------new limit applied to position 1
new limit: 
  0


  3


Old limit
  0
  1

  3



Result = itself plus -1.000000 * 51.000000 * recurse

--------Limit mask has 2 valid spots, 0, 3
Computations: -971.000000 = (7.000000 * 7.000000) - (12.000000 * 85.000000)
Returning result
------new limit applied to position 2
new limit: 
  0
  1




Old limit
  0
  1

  3



Result = itself plus 1.000000 * 83.000000 * recurse

--------Limit mask has 2 valid spots, 0, 1
Computations: -1153.000000 = (7.000000 * 5.000000) - (12.000000 * 99.000000)
Returning result
----new limit applied to position 3
new limit: 
  0
  1
  2



Old limit
  0
  1
  2
  3



Result = itself plus -1.000000 * 84.000000 * recurse

------new limit applied to position 0
new limit: 

  1
  2



Old limit
  0
  1
  2




Result = itself plus 1.000000 * 76.000000 * recurse

--------Limit mask has 2 valid spots, 1, 2
Computations: 342.000000 = (99.000000 * 8.000000) - (5.000000 * 90.000000)
Returning result
------new limit applied to position 1
new limit: 
  0

  2



Old limit
  0
  1
  2




Result = itself plus -1.000000 * 51.000000 * recurse

--------Limit mask has 2 valid spots, 0, 2
Computations: -1024.000000 = (7.000000 * 8.000000) - (12.000000 * 90.000000)
Returning result
------new limit applied to position 2
new limit: 
  0
  1




Old limit
  0
  1
  2




Result = itself plus 1.000000 * 74.000000 * recurse

--------Limit mask has 2 valid spots, 0, 1
Computations: -1153.000000 = (7.000000 * 5.000000) - (12.000000 * 99.000000)
Returning result
--------------------------------------------------------------------------------
Taking determinant of the following matrix

  10.0000    15.0000    3.0000  
  6.0000    1.0000    5.0000  
  2.0000    9.0000    17.0000  




New limit is at position 0
Result will equal 1.000000 * 10.000000 * recurse

--Limit mask has 2 valid spots, 1, 2
Computations: -28.000000 = (1.000000 * 17.000000) - (9.000000 * 5.000000)
Returning result

New limit is at position 1
Result will equal -1.000000 * 15.000000 * recurse

--Limit mask has 2 valid spots, 0, 2
Computations: 92.000000 = (6.000000 * 17.000000) - (2.000000 * 5.000000)
Returning result

New limit is at position 2
Result will equal 1.000000 * 3.000000 * recurse

--Limit mask has 2 valid spots, 0, 1
Computations: 52.000000 = (6.000000 * 9.000000) - (2.000000 * 1.000000)
Returning result
--------------------------------------------------------------------------------
Taking determinant of the following matrix

  2.5000    17.0000    2.0000    4.0000    13.0000  
  72.0000    58.0000    22.0000    19.0000    12.0000  
  21.0000    14.0000    81.0000    84.0000    1.0000  
  76.0000    51.0000    74.0000    83.0000    63.0000  
  7.0000    99.0000    90.0000    85.0000    66.0000  




New limit is at position 0
Result will equal 1.000000 * 2.500000 * recurse

--new limit applied to position 0
new limit: 


  2
  3
  4
Old limit

  1
  2
  3
  4

Result = itself plus 1.000000 * 58.000000 * recurse

----new limit applied to position 0
new limit: 



  3
  4
Old limit


  2
  3
  4

Result = itself plus 1.000000 * 81.000000 * recurse

------Limit mask has 2 valid spots, 3, 4
Computations: 123.000000 = (83.000000 * 66.000000) - (85.000000 * 63.000000)
Returning result
----new limit applied to position 1
new limit: 


  2

  4
Old limit


  2
  3
  4

Result = itself plus -1.000000 * 84.000000 * recurse

------Limit mask has 2 valid spots, 2, 4
Computations: -786.000000 = (74.000000 * 66.000000) - (90.000000 * 63.000000)
Returning result
----new limit applied to position 2
new limit: 


  2
  3

Old limit


  2
  3
  4

Result = itself plus 1.000000 * 1.000000 * recurse

------Limit mask has 2 valid spots, 2, 3
Computations: -1180.000000 = (74.000000 * 85.000000) - (90.000000 * 83.000000)
Returning result
--new limit applied to position 1
new limit: 

  1

  3
  4
Old limit

  1
  2
  3
  4

Result = itself plus -1.000000 * 22.000000 * recurse

----new limit applied to position 0
new limit: 



  3
  4
Old limit

  1

  3
  4

Result = itself plus 1.000000 * 14.000000 * recurse

------Limit mask has 2 valid spots, 3, 4
Computations: 123.000000 = (83.000000 * 66.000000) - (85.000000 * 63.000000)
Returning result
----new limit applied to position 1
new limit: 

  1


  4
Old limit

  1

  3
  4

Result = itself plus -1.000000 * 84.000000 * recurse

------Limit mask has 2 valid spots, 1, 4
Computations: -2871.000000 = (51.000000 * 66.000000) - (99.000000 * 63.000000)
Returning result
----new limit applied to position 2
new limit: 

  1

  3

Old limit

  1

  3
  4

Result = itself plus 1.000000 * 1.000000 * recurse

------Limit mask has 2 valid spots, 1, 3
Computations: -3882.000000 = (51.000000 * 85.000000) - (99.000000 * 83.000000)
Returning result
--new limit applied to position 2
new limit: 

  1
  2

  4
Old limit

  1
  2
  3
  4

Result = itself plus 1.000000 * 19.000000 * recurse

----new limit applied to position 0
new limit: 


  2

  4
Old limit

  1
  2

  4

Result = itself plus 1.000000 * 14.000000 * recurse

------Limit mask has 2 valid spots, 2, 4
Computations: -786.000000 = (74.000000 * 66.000000) - (90.000000 * 63.000000)
Returning result
----new limit applied to position 1
new limit: 

  1


  4
Old limit

  1
  2

  4

Result = itself plus -1.000000 * 81.000000 * recurse

------Limit mask has 2 valid spots, 1, 4
Computations: -2871.000000 = (51.000000 * 66.000000) - (99.000000 * 63.000000)
Returning result
----new limit applied to position 2
new limit: 

  1
  2


Old limit

  1
  2

  4

Result = itself plus 1.000000 * 1.000000 * recurse

------Limit mask has 2 valid spots, 1, 2
Computations: -2736.000000 = (51.000000 * 90.000000) - (99.000000 * 74.000000)
Returning result
--new limit applied to position 3
new limit: 

  1
  2
  3

Old limit

  1
  2
  3
  4

Result = itself plus -1.000000 * 12.000000 * recurse

----new limit applied to position 0
new limit: 


  2
  3

Old limit

  1
  2
  3


Result = itself plus 1.000000 * 14.000000 * recurse

------Limit mask has 2 valid spots, 2, 3
Computations: -1180.000000 = (74.000000 * 85.000000) - (90.000000 * 83.000000)
Returning result
----new limit applied to position 1
new limit: 

  1

  3

Old limit

  1
  2
  3


Result = itself plus -1.000000 * 81.000000 * recurse

------Limit mask has 2 valid spots, 1, 3
Computations: -3882.000000 = (51.000000 * 85.000000) - (99.000000 * 83.000000)
Returning result
----new limit applied to position 2
new limit: 

  1
  2


Old limit

  1
  2
  3


Result = itself plus 1.000000 * 84.000000 * recurse

------Limit mask has 2 valid spots, 1, 2
Computations: -2736.000000 = (51.000000 * 90.000000) - (99.000000 * 74.000000)
Returning result

New limit is at position 1
Result will equal -1.000000 * 17.000000 * recurse

--new limit applied to position 0
new limit: 


  2
  3
  4
Old limit
  0

  2
  3
  4

Result = itself plus 1.000000 * 72.000000 * recurse

----new limit applied to position 0
new limit: 



  3
  4
Old limit


  2
  3
  4

Result = itself plus 1.000000 * 81.000000 * recurse

------Limit mask has 2 valid spots, 3, 4
Computations: 123.000000 = (83.000000 * 66.000000) - (85.000000 * 63.000000)
Returning result
----new limit applied to position 1
new limit: 


  2

  4
Old limit


  2
  3
  4

Result = itself plus -1.000000 * 84.000000 * recurse

------Limit mask has 2 valid spots, 2, 4
Computations: -786.000000 = (74.000000 * 66.000000) - (90.000000 * 63.000000)
Returning result
----new limit applied to position 2
new limit: 


  2
  3

Old limit


  2
  3
  4

Result = itself plus 1.000000 * 1.000000 * recurse

------Limit mask has 2 valid spots, 2, 3
Computations: -1180.000000 = (74.000000 * 85.000000) - (90.000000 * 83.000000)
Returning result
--new limit applied to position 1
new limit: 
  0


  3
  4
Old limit
  0

  2
  3
  4

Result = itself plus -1.000000 * 22.000000 * recurse

----new limit applied to position 0
new limit: 



  3
  4
Old limit
  0


  3
  4

Result = itself plus 1.000000 * 21.000000 * recurse

------Limit mask has 2 valid spots, 3, 4
Computations: 123.000000 = (83.000000 * 66.000000) - (85.000000 * 63.000000)
Returning result
----new limit applied to position 1
new limit: 
  0



  4
Old limit
  0


  3
  4

Result = itself plus -1.000000 * 84.000000 * recurse

------Limit mask has 2 valid spots, 0, 4
Computations: 4575.000000 = (76.000000 * 66.000000) - (7.000000 * 63.000000)
Returning result
----new limit applied to position 2
new limit: 
  0


  3

Old limit
  0


  3
  4

Result = itself plus 1.000000 * 1.000000 * recurse

------Limit mask has 2 valid spots, 0, 3
Computations: 5879.000000 = (76.000000 * 85.000000) - (7.000000 * 83.000000)
Returning result
--new limit applied to position 2
new limit: 
  0

  2

  4
Old limit
  0

  2
  3
  4

Result = itself plus 1.000000 * 19.000000 * recurse

----new limit applied to position 0
new limit: 


  2

  4
Old limit
  0

  2

  4

Result = itself plus 1.000000 * 21.000000 * recurse

------Limit mask has 2 valid spots, 2, 4
Computations: -786.000000 = (74.000000 * 66.000000) - (90.000000 * 63.000000)
Returning result
----new limit applied to position 1
new limit: 
  0



  4
Old limit
  0

  2

  4

Result = itself plus -1.000000 * 81.000000 * recurse

------Limit mask has 2 valid spots, 0, 4
Computations: 4575.000000 = (76.000000 * 66.000000) - (7.000000 * 63.000000)
Returning result
----new limit applied to position 2
new limit: 
  0

  2


Old limit
  0

  2

  4

Result = itself plus 1.000000 * 1.000000 * recurse

------Limit mask has 2 valid spots, 0, 2
Computations: 6322.000000 = (76.000000 * 90.000000) - (7.000000 * 74.000000)
Returning result
--new limit applied to position 3
new limit: 
  0

  2
  3

Old limit
  0

  2
  3
  4

Result = itself plus -1.000000 * 12.000000 * recurse

----new limit applied to position 0
new limit: 


  2
  3

Old limit
  0

  2
  3


Result = itself plus 1.000000 * 21.000000 * recurse

------Limit mask has 2 valid spots, 2, 3
Computations: -1180.000000 = (74.000000 * 85.000000) - (90.000000 * 83.000000)
Returning result
----new limit applied to position 1
new limit: 
  0


  3

Old limit
  0

  2
  3


Result = itself plus -1.000000 * 81.000000 * recurse

------Limit mask has 2 valid spots, 0, 3
Computations: 5879.000000 = (76.000000 * 85.000000) - (7.000000 * 83.000000)
Returning result
----new limit applied to position 2
new limit: 
  0

  2


Old limit
  0

  2
  3


Result = itself plus 1.000000 * 84.000000 * recurse

------Limit mask has 2 valid spots, 0, 2
Computations: 6322.000000 = (76.000000 * 90.000000) - (7.000000 * 74.000000)
Returning result

New limit is at position 2
Result will equal 1.000000 * 2.000000 * recurse

--new limit applied to position 0
new limit: 

  1

  3
  4
Old limit
  0
  1

  3
  4

Result = itself plus 1.000000 * 72.000000 * recurse

----new limit applied to position 0
new limit: 



  3
  4
Old limit

  1

  3
  4

Result = itself plus 1.000000 * 14.000000 * recurse

------Limit mask has 2 valid spots, 3, 4
Computations: 123.000000 = (83.000000 * 66.000000) - (85.000000 * 63.000000)
Returning result
----new limit applied to position 1
new limit: 

  1


  4
Old limit

  1

  3
  4

Result = itself plus -1.000000 * 84.000000 * recurse

------Limit mask has 2 valid spots, 1, 4
Computations: -2871.000000 = (51.000000 * 66.000000) - (99.000000 * 63.000000)
Returning result
----new limit applied to position 2
new limit: 

  1

  3

Old limit

  1

  3
  4

Result = itself plus 1.000000 * 1.000000 * recurse

------Limit mask has 2 valid spots, 1, 3
Computations: -3882.000000 = (51.000000 * 85.000000) - (99.000000 * 83.000000)
Returning result
--new limit applied to position 1
new limit: 
  0


  3
  4
Old limit
  0
  1

  3
  4

Result = itself plus -1.000000 * 58.000000 * recurse

----new limit applied to position 0
new limit: 



  3
  4
Old limit
  0


  3
  4

Result = itself plus 1.000000 * 21.000000 * recurse

------Limit mask has 2 valid spots, 3, 4
Computations: 123.000000 = (83.000000 * 66.000000) - (85.000000 * 63.000000)
Returning result
----new limit applied to position 1
new limit: 
  0



  4
Old limit
  0


  3
  4

Result = itself plus -1.000000 * 84.000000 * recurse

------Limit mask has 2 valid spots, 0, 4
Computations: 4575.000000 = (76.000000 * 66.000000) - (7.000000 * 63.000000)
Returning result
----new limit applied to position 2
new limit: 
  0


  3

Old limit
  0


  3
  4

Result = itself plus 1.000000 * 1.000000 * recurse

------Limit mask has 2 valid spots, 0, 3
Computations: 5879.000000 = (76.000000 * 85.000000) - (7.000000 * 83.000000)
Returning result
--new limit applied to position 2
new limit: 
  0
  1


  4
Old limit
  0
  1

  3
  4

Result = itself plus 1.000000 * 19.000000 * recurse

----new limit applied to position 0
new limit: 

  1


  4
Old limit
  0
  1


  4

Result = itself plus 1.000000 * 21.000000 * recurse

------Limit mask has 2 valid spots, 1, 4
Computations: -2871.000000 = (51.000000 * 66.000000) - (99.000000 * 63.000000)
Returning result
----new limit applied to position 1
new limit: 
  0



  4
Old limit
  0
  1


  4

Result = itself plus -1.000000 * 14.000000 * recurse

------Limit mask has 2 valid spots, 0, 4
Computations: 4575.000000 = (76.000000 * 66.000000) - (7.000000 * 63.000000)
Returning result
----new limit applied to position 2
new limit: 
  0
  1



Old limit
  0
  1


  4

Result = itself plus 1.000000 * 1.000000 * recurse

------Limit mask has 2 valid spots, 0, 1
Computations: 7167.000000 = (76.000000 * 99.000000) - (7.000000 * 51.000000)
Returning result
--new limit applied to position 3
new limit: 
  0
  1

  3

Old limit
  0
  1

  3
  4

Result = itself plus -1.000000 * 12.000000 * recurse

----new limit applied to position 0
new limit: 

  1

  3

Old limit
  0
  1

  3


Result = itself plus 1.000000 * 21.000000 * recurse

------Limit mask has 2 valid spots, 1, 3
Computations: -3882.000000 = (51.000000 * 85.000000) - (99.000000 * 83.000000)
Returning result
----new limit applied to position 1
new limit: 
  0


  3

Old limit
  0
  1

  3


Result = itself plus -1.000000 * 14.000000 * recurse

------Limit mask has 2 valid spots, 0, 3
Computations: 5879.000000 = (76.000000 * 85.000000) - (7.000000 * 83.000000)
Returning result
----new limit applied to position 2
new limit: 
  0
  1



Old limit
  0
  1

  3


Result = itself plus 1.000000 * 84.000000 * recurse

------Limit mask has 2 valid spots, 0, 1
Computations: 7167.000000 = (76.000000 * 99.000000) - (7.000000 * 51.000000)
Returning result

New limit is at position 3
Result will equal -1.000000 * 4.000000 * recurse

--new limit applied to position 0
new limit: 

  1
  2

  4
Old limit
  0
  1
  2

  4

Result = itself plus 1.000000 * 72.000000 * recurse

----new limit applied to position 0
new limit: 


  2

  4
Old limit

  1
  2

  4

Result = itself plus 1.000000 * 14.000000 * recurse

------Limit mask has 2 valid spots, 2, 4
Computations: -786.000000 = (74.000000 * 66.000000) - (90.000000 * 63.000000)
Returning result
----new limit applied to position 1
new limit: 

  1


  4
Old limit

  1
  2

  4

Result = itself plus -1.000000 * 81.000000 * recurse

------Limit mask has 2 valid spots, 1, 4
Computations: -2871.000000 = (51.000000 * 66.000000) - (99.000000 * 63.000000)
Returning result
----new limit applied to position 2
new limit: 

  1
  2


Old limit

  1
  2

  4

Result = itself plus 1.000000 * 1.000000 * recurse

------Limit mask has 2 valid spots, 1, 2
Computations: -2736.000000 = (51.000000 * 90.000000) - (99.000000 * 74.000000)
Returning result
--new limit applied to position 1
new limit: 
  0

  2

  4
Old limit
  0
  1
  2

  4

Result = itself plus -1.000000 * 58.000000 * recurse

----new limit applied to position 0
new limit: 


  2

  4
Old limit
  0

  2

  4

Result = itself plus 1.000000 * 21.000000 * recurse

------Limit mask has 2 valid spots, 2, 4
Computations: -786.000000 = (74.000000 * 66.000000) - (90.000000 * 63.000000)
Returning result
----new limit applied to position 1
new limit: 
  0



  4
Old limit
  0

  2

  4

Result = itself plus -1.000000 * 81.000000 * recurse

------Limit mask has 2 valid spots, 0, 4
Computations: 4575.000000 = (76.000000 * 66.000000) - (7.000000 * 63.000000)
Returning result
----new limit applied to position 2
new limit: 
  0

  2


Old limit
  0

  2

  4

Result = itself plus 1.000000 * 1.000000 * recurse

------Limit mask has 2 valid spots, 0, 2
Computations: 6322.000000 = (76.000000 * 90.000000) - (7.000000 * 74.000000)
Returning result
--new limit applied to position 2
new limit: 
  0
  1


  4
Old limit
  0
  1
  2

  4

Result = itself plus 1.000000 * 22.000000 * recurse

----new limit applied to position 0
new limit: 

  1


  4
Old limit
  0
  1


  4

Result = itself plus 1.000000 * 21.000000 * recurse

------Limit mask has 2 valid spots, 1, 4
Computations: -2871.000000 = (51.000000 * 66.000000) - (99.000000 * 63.000000)
Returning result
----new limit applied to position 1
new limit: 
  0



  4
Old limit
  0
  1


  4

Result = itself plus -1.000000 * 14.000000 * recurse

------Limit mask has 2 valid spots, 0, 4
Computations: 4575.000000 = (76.000000 * 66.000000) - (7.000000 * 63.000000)
Returning result
----new limit applied to position 2
new limit: 
  0
  1



Old limit
  0
  1


  4

Result = itself plus 1.000000 * 1.000000 * recurse

------Limit mask has 2 valid spots, 0, 1
Computations: 7167.000000 = (76.000000 * 99.000000) - (7.000000 * 51.000000)
Returning result
--new limit applied to position 3
new limit: 
  0
  1
  2


Old limit
  0
  1
  2

  4

Result = itself plus -1.000000 * 12.000000 * recurse

----new limit applied to position 0
new limit: 

  1
  2


Old limit
  0
  1
  2



Result = itself plus 1.000000 * 21.000000 * recurse

------Limit mask has 2 valid spots, 1, 2
Computations: -2736.000000 = (51.000000 * 90.000000) - (99.000000 * 74.000000)
Returning result
----new limit applied to position 1
new limit: 
  0

  2


Old limit
  0
  1
  2



Result = itself plus -1.000000 * 14.000000 * recurse

------Limit mask has 2 valid spots, 0, 2
Computations: 6322.000000 = (76.000000 * 90.000000) - (7.000000 * 74.000000)
Returning result
----new limit applied to position 2
new limit: 
  0
  1



Old limit
  0
  1
  2



Result = itself plus 1.000000 * 81.000000 * recurse

------Limit mask has 2 valid spots, 0, 1
Computations: 7167.000000 = (76.000000 * 99.000000) - (7.000000 * 51.000000)
Returning result

New limit is at position 4
Result will equal 1.000000 * 13.000000 * recurse

--new limit applied to position 0
new limit: 

  1
  2
  3

Old limit
  0
  1
  2
  3


Result = itself plus 1.000000 * 72.000000 * recurse

----new limit applied to position 0
new limit: 


  2
  3

Old limit

  1
  2
  3


Result = itself plus 1.000000 * 14.000000 * recurse

------Limit mask has 2 valid spots, 2, 3
Computations: -1180.000000 = (74.000000 * 85.000000) - (90.000000 * 83.000000)
Returning result
----new limit applied to position 1
new limit: 

  1

  3

Old limit

  1
  2
  3


Result = itself plus -1.000000 * 81.000000 * recurse

------Limit mask has 2 valid spots, 1, 3
Computations: -3882.000000 = (51.000000 * 85.000000) - (99.000000 * 83.000000)
Returning result
----new limit applied to position 2
new limit: 

  1
  2


Old limit

  1
  2
  3


Result = itself plus 1.000000 * 84.000000 * recurse

------Limit mask has 2 valid spots, 1, 2
Computations: -2736.000000 = (51.000000 * 90.000000) - (99.000000 * 74.000000)
Returning result
--new limit applied to position 1
new limit: 
  0

  2
  3

Old limit
  0
  1
  2
  3


Result = itself plus -1.000000 * 58.000000 * recurse

----new limit applied to position 0
new limit: 


  2
  3

Old limit
  0

  2
  3


Result = itself plus 1.000000 * 21.000000 * recurse

------Limit mask has 2 valid spots, 2, 3
Computations: -1180.000000 = (74.000000 * 85.000000) - (90.000000 * 83.000000)
Returning result
----new limit applied to position 1
new limit: 
  0


  3

Old limit
  0

  2
  3


Result = itself plus -1.000000 * 81.000000 * recurse

------Limit mask has 2 valid spots, 0, 3
Computations: 5879.000000 = (76.000000 * 85.000000) - (7.000000 * 83.000000)
Returning result
----new limit applied to position 2
new limit: 
  0

  2


Old limit
  0

  2
  3


Result = itself plus 1.000000 * 84.000000 * recurse

------Limit mask has 2 valid spots, 0, 2
Computations: 6322.000000 = (76.000000 * 90.000000) - (7.000000 * 74.000000)
Returning result
--new limit applied to position 2
new limit: 
  0
  1

  3

Old limit
  0
  1
  2
  3


Result = itself plus 1.000000 * 22.000000 * recurse

----new limit applied to position 0
new limit: 

  1

  3

Old limit
  0
  1

  3


Result = itself plus 1.000000 * 21.000000 * recurse

------Limit mask has 2 valid spots, 1, 3
Computations: -3882.000000 = (51.000000 * 85.000000) - (99.000000 * 83.000000)
Returning result
----new limit applied to position 1
new limit: 
  0


  3

Old limit
  0
  1

  3


Result = itself plus -1.000000 * 14.000000 * recurse

------Limit mask has 2 valid spots, 0, 3
Computations: 5879.000000 = (76.000000 * 85.000000) - (7.000000 * 83.000000)
Returning result
----new limit applied to position 2
new limit: 
  0
  1



Old limit
  0
  1

  3


Result = itself plus 1.000000 * 84.000000 * recurse

------Limit mask has 2 valid spots, 0, 1
Computations: 7167.000000 = (76.000000 * 99.000000) - (7.000000 * 51.000000)
Returning result
--new limit applied to position 3
new limit: 
  0
  1
  2


Old limit
  0
  1
  2
  3


Result = itself plus -1.000000 * 19.000000 * recurse

----new limit applied to position 0
new limit: 

  1
  2


Old limit
  0
  1
  2



Result = itself plus 1.000000 * 21.000000 * recurse

------Limit mask has 2 valid spots, 1, 2
Computations: -2736.000000 = (51.000000 * 90.000000) - (99.000000 * 74.000000)
Returning result
----new limit applied to position 1
new limit: 
  0

  2


Old limit
  0
  1
  2



Result = itself plus -1.000000 * 14.000000 * recurse

------Limit mask has 2 valid spots, 0, 2
Computations: 6322.000000 = (76.000000 * 90.000000) - (7.000000 * 74.000000)
Returning result
----new limit applied to position 2
new limit: 
  0
  1



Old limit
  0
  1
  2



Result = itself plus 1.000000 * 81.000000 * recurse

------Limit mask has 2 valid spots, 0, 1
Computations: 7167.000000 = (76.000000 * 99.000000) - (7.000000 * 51.000000)
Returning result
--------------------------------------------------------------------------------
Taking determinant of the following matrix

  2.5000    17.0000    2.0000    4.0000    13.0000  
  72.0000    58.0000    22.0000    19.0000    12.0000  
  21.0000    14.0000    81.0000    84.0000    1.0000  
  76.0000    51.0000    74.0000    83.0000    -3.5000  
  7.0000    99.0000    90.0000    85.0000    66.0000  




New limit is at position 0
Result will equal 1.000000 * 2.500000 * recurse

--new limit applied to position 0
new limit: 


  2
  3
  4
Old limit

  1
  2
  3
  4

Result = itself plus 1.000000 * 58.000000 * recurse

----new limit applied to position 0
new limit: 



  3
  4
Old limit


  2
  3
  4

Result = itself plus 1.000000 * 81.000000 * recurse

------Limit mask has 2 valid spots, 3, 4
Computations: 5775.500000 = (83.000000 * 66.000000) - (85.000000 * -3.500000)
Returning result
----new limit applied to position 1
new limit: 


  2

  4
Old limit


  2
  3
  4

Result = itself plus -1.000000 * 84.000000 * recurse

------Limit mask has 2 valid spots, 2, 4
Computations: 5199.000000 = (74.000000 * 66.000000) - (90.000000 * -3.500000)
Returning result
----new limit applied to position 2
new limit: 


  2
  3

Old limit


  2
  3
  4

Result = itself plus 1.000000 * 1.000000 * recurse

------Limit mask has 2 valid spots, 2, 3
Computations: -1180.000000 = (74.000000 * 85.000000) - (90.000000 * 83.000000)
Returning result
--new limit applied to position 1
new limit: 

  1

  3
  4
Old limit

  1
  2
  3
  4

Result = itself plus -1.000000 * 22.000000 * recurse

----new limit applied to position 0
new limit: 



  3
  4
Old limit

  1

  3
  4

Result = itself plus 1.000000 * 14.000000 * recurse

------Limit mask has 2 valid spots, 3, 4
Computations: 5775.500000 = (83.000000 * 66.000000) - (85.000000 * -3.500000)
Returning result
----new limit applied to position 1
new limit: 

  1


  4
Old limit

  1

  3
  4

Result = itself plus -1.000000 * 84.000000 * recurse

------Limit mask has 2 valid spots, 1, 4
Computations: 3712.500000 = (51.000000 * 66.000000) - (99.000000 * -3.500000)
Returning result
----new limit applied to position 2
new limit: 

  1

  3

Old limit

  1

  3
  4

Result = itself plus 1.000000 * 1.000000 * recurse

------Limit mask has 2 valid spots, 1, 3
Computations: -3882.000000 = (51.000000 * 85.000000) - (99.000000 * 83.000000)
Returning result
--new limit applied to position 2
new limit: 

  1
  2

  4
Old limit

  1
  2
  3
  4

Result = itself plus 1.000000 * 19.000000 * recurse

----new limit applied to position 0
new limit: 


  2

  4
Old limit

  1
  2

  4

Result = itself plus 1.000000 * 14.000000 * recurse

------Limit mask has 2 valid spots, 2, 4
Computations: 5199.000000 = (74.000000 * 66.000000) - (90.000000 * -3.500000)
Returning result
----new limit applied to position 1
new limit: 

  1


  4
Old limit

  1
  2

  4

Result = itself plus -1.000000 * 81.000000 * recurse

------Limit mask has 2 valid spots, 1, 4
Computations: 3712.500000 = (51.000000 * 66.000000) - (99.000000 * -3.500000)
Returning result
----new limit applied to position 2
new limit: 

  1
  2


Old limit

  1
  2

  4

Result = itself plus 1.000000 * 1.000000 * recurse

------Limit mask has 2 valid spots, 1, 2
Computations: -2736.000000 = (51.000000 * 90.000000) - (99.000000 * 74.000000)
Returning result
--new limit applied to position 3
new limit: 

  1
  2
  3

Old limit

  1
  2
  3
  4

Result = itself plus -1.000000 * 12.000000 * recurse

----new limit applied to position 0
new limit: 


  2
  3

Old limit

  1
  2
  3


Result = itself plus 1.000000 * 14.000000 * recurse

------Limit mask has 2 valid spots, 2, 3
Computations: -1180.000000 = (74.000000 * 85.000000) - (90.000000 * 83.000000)
Returning result
----new limit applied to position 1
new limit: 

  1

  3

Old limit

  1
  2
  3


Result = itself plus -1.000000 * 81.000000 * recurse

------Limit mask has 2 valid spots, 1, 3
Computations: -3882.000000 = (51.000000 * 85.000000) - (99.000000 * 83.000000)
Returning result
----new limit applied to position 2
new limit: 

  1
  2


Old limit

  1
  2
  3


Result = itself plus 1.000000 * 84.000000 * recurse

------Limit mask has 2 valid spots, 1, 2
Computations: -2736.000000 = (51.000000 * 90.000000) - (99.000000 * 74.000000)
Returning result

New limit is at position 1
Result will equal -1.000000 * 17.000000 * recurse

--new limit applied to position 0
new limit: 


  2
  3
  4
Old limit
  0

  2
  3
  4

Result = itself plus 1.000000 * 72.000000 * recurse

----new limit applied to position 0
new limit: 



  3
  4
Old limit


  2
  3
  4

Result = itself plus 1.000000 * 81.000000 * recurse

------Limit mask has 2 valid spots, 3, 4
Computations: 5775.500000 = (83.000000 * 66.000000) - (85.000000 * -3.500000)
Returning result
----new limit applied to position 1
new limit: 


  2

  4
Old limit


  2
  3
  4

Result = itself plus -1.000000 * 84.000000 * recurse

------Limit mask has 2 valid spots, 2, 4
Computations: 5199.000000 = (74.000000 * 66.000000) - (90.000000 * -3.500000)
Returning result
----new limit applied to position 2
new limit: 


  2
  3

Old limit


  2
  3
  4

Result = itself plus 1.000000 * 1.000000 * recurse

------Limit mask has 2 valid spots, 2, 3
Computations: -1180.000000 = (74.000000 * 85.000000) - (90.000000 * 83.000000)
Returning result
--new limit applied to position 1
new limit: 
  0


  3
  4
Old limit
  0

  2
  3
  4

Result = itself plus -1.000000 * 22.000000 * recurse

----new limit applied to position 0
new limit: 



  3
  4
Old limit
  0


  3
  4

Result = itself plus 1.000000 * 21.000000 * recurse

------Limit mask has 2 valid spots, 3, 4
Computations: 5775.500000 = (83.000000 * 66.000000) - (85.000000 * -3.500000)
Returning result
----new limit applied to position 1
new limit: 
  0



  4
Old limit
  0


  3
  4

Result = itself plus -1.000000 * 84.000000 * recurse

------Limit mask has 2 valid spots, 0, 4
Computations: 5040.500000 = (76.000000 * 66.000000) - (7.000000 * -3.500000)
Returning result
----new limit applied to position 2
new limit: 
  0


  3

Old limit
  0


  3
  4

Result = itself plus 1.000000 * 1.000000 * recurse

------Limit mask has 2 valid spots, 0, 3
Computations: 5879.000000 = (76.000000 * 85.000000) - (7.000000 * 83.000000)
Returning result
--new limit applied to position 2
new limit: 
  0

  2

  4
Old limit
  0

  2
  3
  4

Result = itself plus 1.000000 * 19.000000 * recurse

----new limit applied to position 0
new limit: 


  2

  4
Old limit
  0

  2

  4

Result = itself plus 1.000000 * 21.000000 * recurse

------Limit mask has 2 valid spots, 2, 4
Computations: 5199.000000 = (74.000000 * 66.000000) - (90.000000 * -3.500000)
Returning result
----new limit applied to position 1
new limit: 
  0



  4
Old limit
  0

  2

  4

Result = itself plus -1.000000 * 81.000000 * recurse

------Limit mask has 2 valid spots, 0, 4
Computations: 5040.500000 = (76.000000 * 66.000000) - (7.000000 * -3.500000)
Returning result
----new limit applied to position 2
new limit: 
  0

  2


Old limit
  0

  2

  4

Result = itself plus 1.000000 * 1.000000 * recurse

------Limit mask has 2 valid spots, 0, 2
Computations: 6322.000000 = (76.000000 * 90.000000) - (7.000000 * 74.000000)
Returning result
--new limit applied to position 3
new limit: 
  0

  2
  3

Old limit
  0

  2
  3
  4

Result = itself plus -1.000000 * 12.000000 * recurse

----new limit applied to position 0
new limit: 


  2
  3

Old limit
  0

  2
  3


Result = itself plus 1.000000 * 21.000000 * recurse

------Limit mask has 2 valid spots, 2, 3
Computations: -1180.000000 = (74.000000 * 85.000000) - (90.000000 * 83.000000)
Returning result
----new limit applied to position 1
new limit: 
  0


  3

Old limit
  0

  2
  3


Result = itself plus -1.000000 * 81.000000 * recurse

------Limit mask has 2 valid spots, 0, 3
Computations: 5879.000000 = (76.000000 * 85.000000) - (7.000000 * 83.000000)
Returning result
----new limit applied to position 2
new limit: 
  0

  2


Old limit
  0

  2
  3


Result = itself plus 1.000000 * 84.000000 * recurse

------Limit mask has 2 valid spots, 0, 2
Computations: 6322.000000 = (76.000000 * 90.000000) - (7.000000 * 74.000000)
Returning result

New limit is at position 2
Result will equal 1.000000 * 2.000000 * recurse

--new limit applied to position 0
new limit: 

  1

  3
  4
Old limit
  0
  1

  3
  4

Result = itself plus 1.000000 * 72.000000 * recurse

----new limit applied to position 0
new limit: 



  3
  4
Old limit

  1

  3
  4

Result = itself plus 1.000000 * 14.000000 * recurse

------Limit mask has 2 valid spots, 3, 4
Computations: 5775.500000 = (83.000000 * 66.000000) - (85.000000 * -3.500000)
Returning result
----new limit applied to position 1
new limit: 

  1


  4
Old limit

  1

  3
  4

Result = itself plus -1.000000 * 84.000000 * recurse

------Limit mask has 2 valid spots, 1, 4
Computations: 3712.500000 = (51.000000 * 66.000000) - (99.000000 * -3.500000)
Returning result
----new limit applied to position 2
new limit: 

  1

  3

Old limit

  1

  3
  4

Result = itself plus 1.000000 * 1.000000 * recurse

------Limit mask has 2 valid spots, 1, 3
Computations: -3882.000000 = (51.000000 * 85.000000) - (99.000000 * 83.000000)
Returning result
--new limit applied to position 1
new limit: 
  0


  3
  4
Old limit
  0
  1

  3
  4

Result = itself plus -1.000000 * 58.000000 * recurse

----new limit applied to position 0
new limit: 



  3
  4
Old limit
  0


  3
  4

Result = itself plus 1.000000 * 21.000000 * recurse

------Limit mask has 2 valid spots, 3, 4
Computations: 5775.500000 = (83.000000 * 66.000000) - (85.000000 * -3.500000)
Returning result
----new limit applied to position 1
new limit: 
  0



  4
Old limit
  0


  3
  4

Result = itself plus -1.000000 * 84.000000 * recurse

------Limit mask has 2 valid spots, 0, 4
Computations: 5040.500000 = (76.000000 * 66.000000) - (7.000000 * -3.500000)
Returning result
----new limit applied to position 2
new limit: 
  0


  3

Old limit
  0


  3
  4

Result = itself plus 1.000000 * 1.000000 * recurse

------Limit mask has 2 valid spots, 0, 3
Computations: 5879.000000 = (76.000000 * 85.000000) - (7.000000 * 83.000000)
Returning result
--new limit applied to position 2
new limit: 
  0
  1


  4
Old limit
  0
  1

  3
  4

Result = itself plus 1.000000 * 19.000000 * recurse

----new limit applied to position 0
new limit: 

  1


  4
Old limit
  0
  1


  4

Result = itself plus 1.000000 * 21.000000 * recurse

------Limit mask has 2 valid spots, 1, 4
Computations: 3712.500000 = (51.000000 * 66.000000) - (99.000000 * -3.500000)
Returning result
----new limit applied to position 1
new limit: 
  0



  4
Old limit
  0
  1


  4

Result = itself plus -1.000000 * 14.000000 * recurse

------Limit mask has 2 valid spots, 0, 4
Computations: 5040.500000 = (76.000000 * 66.000000) - (7.000000 * -3.500000)
Returning result
----new limit applied to position 2
new limit: 
  0
  1



Old limit
  0
  1


  4

Result = itself plus 1.000000 * 1.000000 * recurse

------Limit mask has 2 valid spots, 0, 1
Computations: 7167.000000 = (76.000000 * 99.000000) - (7.000000 * 51.000000)
Returning result
--new limit applied to position 3
new limit: 
  0
  1

  3

Old limit
  0
  1

  3
  4

Result = itself plus -1.000000 * 12.000000 * recurse

----new limit applied to position 0
new limit: 

  1

  3

Old limit
  0
  1

  3


Result = itself plus 1.000000 * 21.000000 * recurse

------Limit mask has 2 valid spots, 1, 3
Computations: -3882.000000 = (51.000000 * 85.000000) - (99.000000 * 83.000000)
Returning result
----new limit applied to position 1
new limit: 
  0


  3

Old limit
  0
  1

  3


Result = itself plus -1.000000 * 14.000000 * recurse

------Limit mask has 2 valid spots, 0, 3
Computations: 5879.000000 = (76.000000 * 85.000000) - (7.000000 * 83.000000)
Returning result
----new limit applied to position 2
new limit: 
  0
  1



Old limit
  0
  1

  3


Result = itself plus 1.000000 * 84.000000 * recurse

------Limit mask has 2 valid spots, 0, 1
Computations: 7167.000000 = (76.000000 * 99.000000) - (7.000000 * 51.000000)
Returning result

New limit is at position 3
Result will equal -1.000000 * 4.000000 * recurse

--new limit applied to position 0
new limit: 

  1
  2

  4
Old limit
  0
  1
  2

  4

Result = itself plus 1.000000 * 72.000000 * recurse

----new limit applied to position 0
new limit: 


  2

  4
Old limit

  1
  2

  4

Result = itself plus 1.000000 * 14.000000 * recurse

------Limit mask has 2 valid spots, 2, 4
Computations: 5199.000000 = (74.000000 * 66.000000) - (90.000000 * -3.500000)
Returning result
----new limit applied to position 1
new limit: 

  1


  4
Old limit

  1
  2

  4

Result = itself plus -1.000000 * 81.000000 * recurse

------Limit mask has 2 valid spots, 1, 4
Computations: 3712.500000 = (51.000000 * 66.000000) - (99.000000 * -3.500000)
Returning result
----new limit applied to position 2
new limit: 

  1
  2


Old limit

  1
  2

  4

Result = itself plus 1.000000 * 1.000000 * recurse

------Limit mask has 2 valid spots, 1, 2
Computations: -2736.000000 = (51.000000 * 90.000000) - (99.000000 * 74.000000)
Returning result
--new limit applied to position 1
new limit: 
  0

  2

  4
Old limit
  0
  1
  2

  4

Result = itself plus -1.000000 * 58.000000 * recurse

----new limit applied to position 0
new limit: 


  2

  4
Old limit
  0

  2

  4

Result = itself plus 1.000000 * 21.000000 * recurse

------Limit mask has 2 valid spots, 2, 4
Computations: 5199.000000 = (74.000000 * 66.000000) - (90.000000 * -3.500000)
Returning result
----new limit applied to position 1
new limit: 
  0



  4
Old limit
  0

  2

  4

Result = itself plus -1.000000 * 81.000000 * recurse

------Limit mask has 2 valid spots, 0, 4
Computations: 5040.500000 = (76.000000 * 66.000000) - (7.000000 * -3.500000)
Returning result
----new limit applied to position 2
new limit: 
  0

  2


Old limit
  0

  2

  4

Result = itself plus 1.000000 * 1.000000 * recurse

------Limit mask has 2 valid spots, 0, 2
Computations: 6322.000000 = (76.000000 * 90.000000) - (7.000000 * 74.000000)
Returning result
--new limit applied to position 2
new limit: 
  0
  1


  4
Old limit
  0
  1
  2

  4

Result = itself plus 1.000000 * 22.000000 * recurse

----new limit applied to position 0
new limit: 

  1


  4
Old limit
  0
  1


  4

Result = itself plus 1.000000 * 21.000000 * recurse

------Limit mask has 2 valid spots, 1, 4
Computations: 3712.500000 = (51.000000 * 66.000000) - (99.000000 * -3.500000)
Returning result
----new limit applied to position 1
new limit: 
  0



  4
Old limit
  0
  1


  4

Result = itself plus -1.000000 * 14.000000 * recurse

------Limit mask has 2 valid spots, 0, 4
Computations: 5040.500000 = (76.000000 * 66.000000) - (7.000000 * -3.500000)
Returning result
----new limit applied to position 2
new limit: 
  0
  1



Old limit
  0
  1


  4

Result = itself plus 1.000000 * 1.000000 * recurse

------Limit mask has 2 valid spots, 0, 1
Computations: 7167.000000 = (76.000000 * 99.000000) - (7.000000 * 51.000000)
Returning result
--new limit applied to position 3
new limit: 
  0
  1
  2


Old limit
  0
  1
  2

  4

Result = itself plus -1.000000 * 12.000000 * recurse

----new limit applied to position 0
new limit: 

  1
  2


Old limit
  0
  1
  2



Result = itself plus 1.000000 * 21.000000 * recurse

------Limit mask has 2 valid spots, 1, 2
Computations: -2736.000000 = (51.000000 * 90.000000) - (99.000000 * 74.000000)
Returning result
----new limit applied to position 1
new limit: 
  0

  2


Old limit
  0
  1
  2



Result = itself plus -1.000000 * 14.000000 * recurse

------Limit mask has 2 valid spots, 0, 2
Computations: 6322.000000 = (76.000000 * 90.000000) - (7.000000 * 74.000000)
Returning result
----new limit applied to position 2
new limit: 
  0
  1



Old limit
  0
  1
  2



Result = itself plus 1.000000 * 81.000000 * recurse

------Limit mask has 2 valid spots, 0, 1
Computations: 7167.000000 = (76.000000 * 99.000000) - (7.000000 * 51.000000)
Returning result

New limit is at position 4
Result will equal 1.000000 * 13.000000 * recurse

--new limit applied to position 0
new limit: 

  1
  2
  3

Old limit
  0
  1
  2
  3


Result = itself plus 1.000000 * 72.000000 * recurse

----new limit applied to position 0
new limit: 


  2
  3

Old limit

  1
  2
  3


Result = itself plus 1.000000 * 14.000000 * recurse

------Limit mask has 2 valid spots, 2, 3
Computations: -1180.000000 = (74.000000 * 85.000000) - (90.000000 * 83.000000)
Returning result
----new limit applied to position 1
new limit: 

  1

  3

Old limit

  1
  2
  3


Result = itself plus -1.000000 * 81.000000 * recurse

------Limit mask has 2 valid spots, 1, 3
Computations: -3882.000000 = (51.000000 * 85.000000) - (99.000000 * 83.000000)
Returning result
----new limit applied to position 2
new limit: 

  1
  2


Old limit

  1
  2
  3


Result = itself plus 1.000000 * 84.000000 * recurse

------Limit mask has 2 valid spots, 1, 2
Computations: -2736.000000 = (51.000000 * 90.000000) - (99.000000 * 74.000000)
Returning result
--new limit applied to position 1
new limit: 
  0

  2
  3

Old limit
  0
  1
  2
  3


Result = itself plus -1.000000 * 58.000000 * recurse

----new limit applied to position 0
new limit: 


  2
  3

Old limit
  0

  2
  3


Result = itself plus 1.000000 * 21.000000 * recurse

------Limit mask has 2 valid spots, 2, 3
Computations: -1180.000000 = (74.000000 * 85.000000) - (90.000000 * 83.000000)
Returning result
----new limit applied to position 1
new limit: 
  0


  3

Old limit
  0

  2
  3


Result = itself plus -1.000000 * 81.000000 * recurse

------Limit mask has 2 valid spots, 0, 3
Computations: 5879.000000 = (76.000000 * 85.000000) - (7.000000 * 83.000000)
Returning result
----new limit applied to position 2
new limit: 
  0

  2


Old limit
  0

  2
  3


Result = itself plus 1.000000 * 84.000000 * recurse

------Limit mask has 2 valid spots, 0, 2
Computations: 6322.000000 = (76.000000 * 90.000000) - (7.000000 * 74.000000)
Returning result
--new limit applied to position 2
new limit: 
  0
  1

  3

Old limit
  0
  1
  2
  3


Result = itself plus 1.000000 * 22.000000 * recurse

----new limit applied to position 0
new limit: 

  1

  3

Old limit
  0
  1

  3


Result = itself plus 1.000000 * 21.000000 * recurse

------Limit mask has 2 valid spots, 1, 3
Computations: -3882.000000 = (51.000000 * 85.000000) - (99.000000 * 83.000000)
Returning result
----new limit applied to position 1
new limit: 
  0


  3

Old limit
  0
  1

  3


Result = itself plus -1.000000 * 14.000000 * recurse

------Limit mask has 2 valid spots, 0, 3
Computations: 5879.000000 = (76.000000 * 85.000000) - (7.000000 * 83.000000)
Returning result
----new limit applied to position 2
new limit: 
  0
  1



Old limit
  0
  1

  3


Result = itself plus 1.000000 * 84.000000 * recurse

------Limit mask has 2 valid spots, 0, 1
Computations: 7167.000000 = (76.000000 * 99.000000) - (7.000000 * 51.000000)
Returning result
--new limit applied to position 3
new limit: 
  0
  1
  2


Old limit
  0
  1
  2
  3


Result = itself plus -1.000000 * 19.000000 * recurse

----new limit applied to position 0
new limit: 

  1
  2


Old limit
  0
  1
  2



Result = itself plus 1.000000 * 21.000000 * recurse

------Limit mask has 2 valid spots, 1, 2
Computations: -2736.000000 = (51.000000 * 90.000000) - (99.000000 * 74.000000)
Returning result
----new limit applied to position 1
new limit: 
  0

  2


Old limit
  0
  1
  2



Result = itself plus -1.000000 * 14.000000 * recurse

------Limit mask has 2 valid spots, 0, 2
Computations: 6322.000000 = (76.000000 * 90.000000) - (7.000000 * 74.000000)
Returning result
----new limit applied to position 2
new limit: 
  0
  1



Old limit
  0
  1
  2



Result = itself plus 1.000000 * 81.000000 * recurse

------Limit mask has 2 valid spots, 0, 1
Computations: 7167.000000 = (76.000000 * 99.000000) - (7.000000 * 51.000000)
Returning result
--------------------------------------------------------------------------------
Taking determinant of the following matrix

  2.5000    17.0000    2.0000    4.0000    13.0000    19.0000  
  72.0000    58.0000    22.0000    19.0000    12.0000    22.0000  
  21.0000    14.0000    81.0000    84.0000    1.0000    13.0000  
  76.0000    51.0000    74.0000    83.0000    -3.5000    9.0000  
  7.0000    99.0000    90.0000    85.0000    66.0000    6.0000  
  12.0000    5.0000    8.0000    7.0000    2.0000    14.0000  




New limit is at position 0
Result will equal 1.000000 * 2.500000 * recurse

--new limit applied to position 0
new limit: 


  2
  3
  4
  5
Old limit

  1
  2
  3
  4
  5

Result = itself plus 1.000000 * 58.000000 * recurse

----new limit applied to position 0
new limit: 



  3
  4
  5
Old limit


  2
  3
  4
  5

Result = itself plus 1.000000 * 81.000000 * recurse

------new limit applied to position 0
new limit: 




  4
  5
Old limit



  3
  4
  5

Result = itself plus 1.000000 * 83.000000 * recurse

--------Limit mask has 2 valid spots, 4, 5
Computations: 912.000000 = (66.000000 * 14.000000) - (2.000000 * 6.000000)
Returning result
------new limit applied to position 1
new limit: 



  3

  5
Old limit



  3
  4
  5

Result = itself plus -1.000000 * -3.500000 * recurse

--------Limit mask has 2 valid spots, 3, 5
Computations: 1148.000000 = (85.000000 * 14.000000) - (7.000000 * 6.000000)
Returning result
------new limit applied to position 2
new limit: 



  3
  4

Old limit



  3
  4
  5

Result = itself plus 1.000000 * 9.000000 * recurse

--------Limit mask has 2 valid spots, 3, 4
Computations: -292.000000 = (85.000000 * 2.000000) - (7.000000 * 66.000000)
Returning result
----new limit applied to position 1
new limit: 


  2

  4
  5
Old limit


  2
  3
  4
  5

Result = itself plus -1.000000 * 84.000000 * recurse

------new limit applied to position 0
new limit: 




  4
  5
Old limit


  2

  4
  5

Result = itself plus 1.000000 * 74.000000 * recurse

--------Limit mask has 2 valid spots, 4, 5
Computations: 912.000000 = (66.000000 * 14.000000) - (2.000000 * 6.000000)
Returning result
------new limit applied to position 1
new limit: 


  2


  5
Old limit


  2

  4
  5

Result = itself plus -1.000000 * -3.500000 * recurse

--------Limit mask has 2 valid spots, 2, 5
Computations: 1212.000000 = (90.000000 * 14.000000) - (8.000000 * 6.000000)
Returning result
------new limit applied to position 2
new limit: 


  2

  4

Old limit


  2

  4
  5

Result = itself plus 1.000000 * 9.000000 * recurse

--------Limit mask has 2 valid spots, 2, 4
Computations: -348.000000 = (90.000000 * 2.000000) - (8.000000 * 66.000000)
Returning result
----new limit applied to position 2
new limit: 


  2
  3

  5
Old limit


  2
  3
  4
  5

Result = itself plus 1.000000 * 1.000000 * recurse

------new limit applied to position 0
new limit: 



  3

  5
Old limit


  2
  3

  5

Result = itself plus 1.000000 * 74.000000 * recurse

--------Limit mask has 2 valid spots, 3, 5
Computations: 1148.000000 = (85.000000 * 14.000000) - (7.000000 * 6.000000)
Returning result
------new limit applied to position 1
new limit: 


  2


  5
Old limit


  2
  3

  5

Result = itself plus -1.000000 * 83.000000 * recurse

--------Limit mask has 2 valid spots, 2, 5
Computations: 1212.000000 = (90.000000 * 14.000000) - (8.000000 * 6.000000)
Returning result
------new limit applied to position 2
new limit: 


  2
  3


Old limit


  2
  3

  5

Result = itself plus 1.000000 * 9.000000 * recurse

--------Limit mask has 2 valid spots, 2, 3
Computations: -50.000000 = (90.000000 * 7.000000) - (8.000000 * 85.000000)
Returning result
----new limit applied to position 3
new limit: 


  2
  3
  4

Old limit


  2
  3
  4
  5

Result = itself plus -1.000000 * 13.000000 * recurse

------new limit applied to position 0
new limit: 



  3
  4

Old limit


  2
  3
  4


Result = itself plus 1.000000 * 74.000000 * recurse

--------Limit mask has 2 valid spots, 3, 4
Computations: -292.000000 = (85.000000 * 2.000000) - (7.000000 * 66.000000)
Returning result
------new limit applied to position 1
new limit: 


  2

  4

Old limit


  2
  3
  4


Result = itself plus -1.000000 * 83.000000 * recurse

--------Limit mask has 2 valid spots, 2, 4
Computations: -348.000000 = (90.000000 * 2.000000) - (8.000000 * 66.000000)
Returning result
------new limit applied to position 2
new limit: 


  2
  3


Old limit


  2
  3
  4


Result = itself plus 1.000000 * -3.500000 * recurse

--------Limit mask has 2 valid spots, 2, 3
Computations: -50.000000 = (90.000000 * 7.000000) - (8.000000 * 85.000000)
Returning result
--new limit applied to position 1
new limit: 

  1

  3
  4
  5
Old limit

  1
  2
  3
  4
  5

Result = itself plus -1.000000 * 22.000000 * recurse

----new limit applied to position 0
new limit: 



  3
  4
  5
Old limit

  1

  3
  4
  5

Result = itself plus 1.000000 * 14.000000 * recurse

------new limit applied to position 0
new limit: 




  4
  5
Old limit



  3
  4
  5

Result = itself plus 1.000000 * 83.000000 * recurse

--------Limit mask has 2 valid spots, 4, 5
Computations: 912.000000 = (66.000000 * 14.000000) - (2.000000 * 6.000000)
Returning result
------new limit applied to position 1
new limit: 



  3

  5
Old limit



  3
  4
  5

Result = itself plus -1.000000 * -3.500000 * recurse

--------Limit mask has 2 valid spots, 3, 5
Computations: 1148.000000 = (85.000000 * 14.000000) - (7.000000 * 6.000000)
Returning result
------new limit applied to position 2
new limit: 



  3
  4

Old limit



  3
  4
  5

Result = itself plus 1.000000 * 9.000000 * recurse

--------Limit mask has 2 valid spots, 3, 4
Computations: -292.000000 = (85.000000 * 2.000000) - (7.000000 * 66.000000)
Returning result
----new limit applied to position 1
new limit: 

  1


  4
  5
Old limit

  1

  3
  4
  5

Result = itself plus -1.000000 * 84.000000 * recurse

------new limit applied to position 0
new limit: 




  4
  5
Old limit

  1


  4
  5

Result = itself plus 1.000000 * 51.000000 * recurse

--------Limit mask has 2 valid spots, 4, 5
Computations: 912.000000 = (66.000000 * 14.000000) - (2.000000 * 6.000000)
Returning result
------new limit applied to position 1
new limit: 

  1



  5
Old limit

  1


  4
  5

Result = itself plus -1.000000 * -3.500000 * recurse

--------Limit mask has 2 valid spots, 1, 5
Computations: 1356.000000 = (99.000000 * 14.000000) - (5.000000 * 6.000000)
Returning result
------new limit applied to position 2
new limit: 

  1


  4

Old limit

  1


  4
  5

Result = itself plus 1.000000 * 9.000000 * recurse

--------Limit mask has 2 valid spots, 1, 4
Computations: -132.000000 = (99.000000 * 2.000000) - (5.000000 * 66.000000)
Returning result
----new limit applied to position 2
new limit: 

  1

  3

  5
Old limit

  1

  3
  4
  5

Result = itself plus 1.000000 * 1.000000 * recurse

------new limit applied to position 0
new limit: 



  3

  5
Old limit

  1

  3

  5

Result = itself plus 1.000000 * 51.000000 * recurse

--------Limit mask has 2 valid spots, 3, 5
Computations: 1148.000000 = (85.000000 * 14.000000) - (7.000000 * 6.000000)
Returning result
------new limit applied to position 1
new limit: 

  1



  5
Old limit

  1

  3

  5

Result = itself plus -1.000000 * 83.000000 * recurse

--------Limit mask has 2 valid spots, 1, 5
Computations: 1356.000000 = (99.000000 * 14.000000) - (5.000000 * 6.000000)
Returning result
------new limit applied to position 2
new limit: 

  1

  3


Old limit

  1

  3

  5

Result = itself plus 1.000000 * 9.000000 * recurse

--------Limit mask has 2 valid spots, 1, 3
Computations: 268.000000 = (99.000000 * 7.000000) - (5.000000 * 85.000000)
Returning result
----new limit applied to position 3
new limit: 

  1

  3
  4

Old limit

  1

  3
  4
  5

Result = itself plus -1.000000 * 13.000000 * recurse

------new limit applied to position 0
new limit: 



  3
  4

Old limit

  1

  3
  4


Result = itself plus 1.000000 * 51.000000 * recurse

--------Limit mask has 2 valid spots, 3, 4
Computations: -292.000000 = (85.000000 * 2.000000) - (7.000000 * 66.000000)
Returning result
------new limit applied to position 1
new limit: 

  1


  4

Old limit

  1

  3
  4


Result = itself plus -1.000000 * 83.000000 * recurse

--------Limit mask has 2 valid spots, 1, 4
Computations: -132.000000 = (99.000000 * 2.000000) - (5.000000 * 66.000000)
Returning result
------new limit applied to position 2
new limit: 

  1

  3


Old limit

  1

  3
  4


Result = itself plus 1.000000 * -3.500000 * recurse

--------Limit mask has 2 valid spots, 1, 3
Computations: 268.000000 = (99.000000 * 7.000000) - (5.000000 * 85.000000)
Returning result
--new limit applied to position 2
new limit: 

  1
  2

  4
  5
Old limit

  1
  2
  3
  4
  5

Result = itself plus 1.000000 * 19.000000 * recurse

----new limit applied to position 0
new limit: 


  2

  4
  5
Old limit

  1
  2

  4
  5

Result = itself plus 1.000000 * 14.000000 * recurse

------new limit applied to position 0
new limit: 




  4
  5
Old limit


  2

  4
  5

Result = itself plus 1.000000 * 74.000000 * recurse

--------Limit mask has 2 valid spots, 4, 5
Computations: 912.000000 = (66.000000 * 14.000000) - (2.000000 * 6.000000)
Returning result
------new limit applied to position 1
new limit: 


  2


  5
Old limit


  2

  4
  5

Result = itself plus -1.000000 * -3.500000 * recurse

--------Limit mask has 2 valid spots, 2, 5
Computations: 1212.000000 = (90.000000 * 14.000000) - (8.000000 * 6.000000)
Returning result
------new limit applied to position 2
new limit: 


  2

  4

Old limit


  2

  4
  5

Result = itself plus 1.000000 * 9.000000 * recurse

--------Limit mask has 2 valid spots, 2, 4
Computations: -348.000000 = (90.000000 * 2.000000) - (8.000000 * 66.000000)
Returning result
----new limit applied to position 1
new limit: 

  1


  4
  5
Old limit

  1
  2

  4
  5

Result = itself plus -1.000000 * 81.000000 * recurse

------new limit applied to position 0
new limit: 




  4
  5
Old limit

  1


  4
  5

Result = itself plus 1.000000 * 51.000000 * recurse

--------Limit mask has 2 valid spots, 4, 5
Computations: 912.000000 = (66.000000 * 14.000000) - (2.000000 * 6.000000)
Returning result
------new limit applied to position 1
new limit: 

  1



  5
Old limit

  1


  4
  5

Result = itself plus -1.000000 * -3.500000 * recurse

--------Limit mask has 2 valid spots, 1, 5
Computations: 1356.000000 = (99.000000 * 14.000000) - (5.000000 * 6.000000)
Returning result
------new limit applied to position 2
new limit: 

  1


  4

Old limit

  1


  4
  5

Result = itself plus 1.000000 * 9.000000 * recurse

--------Limit mask has 2 valid spots, 1, 4
Computations: -132.000000 = (99.000000 * 2.000000) - (5.000000 * 66.000000)
Returning result
----new limit applied to position 2
new limit: 

  1
  2


  5
Old limit

  1
  2

  4
  5

Result = itself plus 1.000000 * 1.000000 * recurse

------new limit applied to position 0
new limit: 


  2


  5
Old limit

  1
  2


  5

Result = itself plus 1.000000 * 51.000000 * recurse

--------Limit mask has 2 valid spots, 2, 5
Computations: 1212.000000 = (90.000000 * 14.000000) - (8.000000 * 6.000000)
Returning result
------new limit applied to position 1
new limit: 

  1



  5
Old limit

  1
  2


  5

Result = itself plus -1.000000 * 74.000000 * recurse

--------Limit mask has 2 valid spots, 1, 5
Computations: 1356.000000 = (99.000000 * 14.000000) - (5.000000 * 6.000000)
Returning result
------new limit applied to position 2
new limit: 

  1
  2



Old limit

  1
  2


  5

Result = itself plus 1.000000 * 9.000000 * recurse

--------Limit mask has 2 valid spots, 1, 2
Computations: 342.000000 = (99.000000 * 8.000000) - (5.000000 * 90.000000)
Returning result
----new limit applied to position 3
new limit: 

  1
  2

  4

Old limit

  1
  2

  4
  5

Result = itself plus -1.000000 * 13.000000 * recurse

------new limit applied to position 0
new limit: 


  2

  4

Old limit

  1
  2

  4


Result = itself plus 1.000000 * 51.000000 * recurse

--------Limit mask has 2 valid spots, 2, 4
Computations: -348.000000 = (90.000000 * 2.000000) - (8.000000 * 66.000000)
Returning result
------new limit applied to position 1
new limit: 

  1


  4

Old limit

  1
  2

  4


Result = itself plus -1.000000 * 74.000000 * recurse

--------Limit mask has 2 valid spots, 1, 4
Computations: -132.000000 = (99.000000 * 2.000000) - (5.000000 * 66.000000)
Returning result
------new limit applied to position 2
new limit: 

  1
  2



Old limit

  1
  2

  4


Result = itself plus 1.000000 * -3.500000 * recurse

--------Limit mask has 2 valid spots, 1, 2
Computations: 342.000000 = (99.000000 * 8.000000) - (5.000000 * 90.000000)
Returning result
--new limit applied to position 3
new limit: 

  1
  2
  3

  5
Old limit

  1
  2
  3
  4
  5

Result = itself plus -1.000000 * 12.000000 * recurse

----new limit applied to position 0
new limit: 


  2
  3

  5
Old limit

  1
  2
  3

  5

Result = itself plus 1.000000 * 14.000000 * recurse

------new limit applied to position 0
new limit: 



  3

  5
Old limit


  2
  3

  5

Result = itself plus 1.000000 * 74.000000 * recurse

--------Limit mask has 2 valid spots, 3, 5
Computations: 1148.000000 = (85.000000 * 14.000000) - (7.000000 * 6.000000)
Returning result
------new limit applied to position 1
new limit: 


  2


  5
Old limit


  2
  3

  5

Result = itself plus -1.000000 * 83.000000 * recurse

--------Limit mask has 2 valid spots, 2, 5
Computations: 1212.000000 = (90.000000 * 14.000000) - (8.000000 * 6.000000)
Returning result
------new limit applied to position 2
new limit: 


  2
  3


Old limit


  2
  3

  5

Result = itself plus 1.000000 * 9.000000 * recurse

--------Limit mask has 2 valid spots, 2, 3
Computations: -50.000000 = (90.000000 * 7.000000) - (8.000000 * 85.000000)
Returning result
----new limit applied to position 1
new limit: 

  1

  3

  5
Old limit

  1
  2
  3

  5

Result = itself plus -1.000000 * 81.000000 * recurse

------new limit applied to position 0
new limit: 



  3

  5
Old limit

  1

  3

  5

Result = itself plus 1.000000 * 51.000000 * recurse

--------Limit mask has 2 valid spots, 3, 5
Computations: 1148.000000 = (85.000000 * 14.000000) - (7.000000 * 6.000000)
Returning result
------new limit applied to position 1
new limit: 

  1



  5
Old limit

  1

  3

  5

Result = itself plus -1.000000 * 83.000000 * recurse

--------Limit mask has 2 valid spots, 1, 5
Computations: 1356.000000 = (99.000000 * 14.000000) - (5.000000 * 6.000000)
Returning result
------new limit applied to position 2
new limit: 

  1

  3


Old limit

  1

  3

  5

Result = itself plus 1.000000 * 9.000000 * recurse

--------Limit mask has 2 valid spots, 1, 3
Computations: 268.000000 = (99.000000 * 7.000000) - (5.000000 * 85.000000)
Returning result
----new limit applied to position 2
new limit: 

  1
  2


  5
Old limit

  1
  2
  3

  5

Result = itself plus 1.000000 * 84.000000 * recurse

------new limit applied to position 0
new limit: 


  2


  5
Old limit

  1
  2


  5

Result = itself plus 1.000000 * 51.000000 * recurse

--------Limit mask has 2 valid spots, 2, 5
Computations: 1212.000000 = (90.000000 * 14.000000) - (8.000000 * 6.000000)
Returning result
------new limit applied to position 1
new limit: 

  1



  5
Old limit

  1
  2


  5

Result = itself plus -1.000000 * 74.000000 * recurse

--------Limit mask has 2 valid spots, 1, 5
Computations: 1356.000000 = (99.000000 * 14.000000) - (5.000000 * 6.000000)
Returning result
------new limit applied to position 2
new limit: 

  1
  2



Old limit

  1
  2


  5

Result = itself plus 1.000000 * 9.000000 * recurse

--------Limit mask has 2 valid spots, 1, 2
Computations: 342.000000 = (99.000000 * 8.000000) - (5.000000 * 90.000000)
Returning result
----new limit applied to position 3
new limit: 

  1
  2
  3


Old limit

  1
  2
  3

  5

Result = itself plus -1.000000 * 13.000000 * recurse

------new limit applied to position 0
new limit: 


  2
  3


Old limit

  1
  2
  3



Result = itself plus 1.000000 * 51.000000 * recurse

--------Limit mask has 2 valid spots, 2, 3
Computations: -50.000000 = (90.000000 * 7.000000) - (8.000000 * 85.000000)
Returning result
------new limit applied to position 1
new limit: 

  1

  3


Old limit

  1
  2
  3



Result = itself plus -1.000000 * 74.000000 * recurse

--------Limit mask has 2 valid spots, 1, 3
Computations: 268.000000 = (99.000000 * 7.000000) - (5.000000 * 85.000000)
Returning result
------new limit applied to position 2
new limit: 

  1
  2



Old limit

  1
  2
  3



Result = itself plus 1.000000 * 83.000000 * recurse

--------Limit mask has 2 valid spots, 1, 2
Computations: 342.000000 = (99.000000 * 8.000000) - (5.000000 * 90.000000)
Returning result
--new limit applied to position 4
new limit: 

  1
  2
  3
  4

Old limit

  1
  2
  3
  4
  5

Result = itself plus 1.000000 * 22.000000 * recurse

----new limit applied to position 0
new limit: 


  2
  3
  4

Old limit

  1
  2
  3
  4


Result = itself plus 1.000000 * 14.000000 * recurse

------new limit applied to position 0
new limit: 



  3
  4

Old limit


  2
  3
  4


Result = itself plus 1.000000 * 74.000000 * recurse

--------Limit mask has 2 valid spots, 3, 4
Computations: -292.000000 = (85.000000 * 2.000000) - (7.000000 * 66.000000)
Returning result
------new limit applied to position 1
new limit: 


  2

  4

Old limit


  2
  3
  4


Result = itself plus -1.000000 * 83.000000 * recurse

--------Limit mask has 2 valid spots, 2, 4
Computations: -348.000000 = (90.000000 * 2.000000) - (8.000000 * 66.000000)
Returning result
------new limit applied to position 2
new limit: 


  2
  3


Old limit


  2
  3
  4


Result = itself plus 1.000000 * -3.500000 * recurse

--------Limit mask has 2 valid spots, 2, 3
Computations: -50.000000 = (90.000000 * 7.000000) - (8.000000 * 85.000000)
Returning result
----new limit applied to position 1
new limit: 

  1

  3
  4

Old limit

  1
  2
  3
  4


Result = itself plus -1.000000 * 81.000000 * recurse

------new limit applied to position 0
new limit: 



  3
  4

Old limit

  1

  3
  4


Result = itself plus 1.000000 * 51.000000 * recurse

--------Limit mask has 2 valid spots, 3, 4
Computations: -292.000000 = (85.000000 * 2.000000) - (7.000000 * 66.000000)
Returning result
------new limit applied to position 1
new limit: 

  1


  4

Old limit

  1

  3
  4


Result = itself plus -1.000000 * 83.000000 * recurse

--------Limit mask has 2 valid spots, 1, 4
Computations: -132.000000 = (99.000000 * 2.000000) - (5.000000 * 66.000000)
Returning result
------new limit applied to position 2
new limit: 

  1

  3


Old limit

  1

  3
  4


Result = itself plus 1.000000 * -3.500000 * recurse

--------Limit mask has 2 valid spots, 1, 3
Computations: 268.000000 = (99.000000 * 7.000000) - (5.000000 * 85.000000)
Returning result
----new limit applied to position 2
new limit: 

  1
  2

  4

Old limit

  1
  2
  3
  4


Result = itself plus 1.000000 * 84.000000 * recurse

------new limit applied to position 0
new limit: 


  2

  4

Old limit

  1
  2

  4


Result = itself plus 1.000000 * 51.000000 * recurse

--------Limit mask has 2 valid spots, 2, 4
Computations: -348.000000 = (90.000000 * 2.000000) - (8.000000 * 66.000000)
Returning result
------new limit applied to position 1
new limit: 

  1


  4

Old limit

  1
  2

  4


Result = itself plus -1.000000 * 74.000000 * recurse

--------Limit mask has 2 valid spots, 1, 4
Computations: -132.000000 = (99.000000 * 2.000000) - (5.000000 * 66.000000)
Returning result
------new limit applied to position 2
new limit: 

  1
  2



Old limit

  1
  2

  4


Result = itself plus 1.000000 * -3.500000 * recurse

--------Limit mask has 2 valid spots, 1, 2
Computations: 342.000000 = (99.000000 * 8.000000) - (5.000000 * 90.000000)
Returning result
----new limit applied to position 3
new limit: 

  1
  2
  3


Old limit

  1
  2
  3
  4


Result = itself plus -1.000000 * 1.000000 * recurse

------new limit applied to position 0
new limit: 


  2
  3


Old limit

  1
  2
  3



Result = itself plus 1.000000 * 51.000000 * recurse

--------Limit mask has 2 valid spots, 2, 3
Computations: -50.000000 = (90.000000 * 7.000000) - (8.000000 * 85.000000)
Returning result
------new limit applied to position 1
new limit: 

  1

  3


Old limit

  1
  2
  3



Result = itself plus -1.000000 * 74.000000 * recurse

--------Limit mask has 2 valid spots, 1, 3
Computations: 268.000000 = (99.000000 * 7.000000) - (5.000000 * 85.000000)
Returning result
------new limit applied to position 2
new limit: 

  1
  2



Old limit

  1
  2
  3



Result = itself plus 1.000000 * 83.000000 * recurse

--------Limit mask has 2 valid spots, 1, 2
Computations: 342.000000 = (99.000000 * 8.000000) - (5.000000 * 90.000000)
Returning result

New limit is at position 1
Result will equal -1.000000 * 17.000000 * recurse

--new limit applied to position 0
new limit: 


  2
  3
  4
  5
Old limit
  0

  2
  3
  4
  5

Result = itself plus 1.000000 * 72.000000 * recurse

----new limit applied to position 0
new limit: 



  3
  4
  5
Old limit


  2
  3
  4
  5

Result = itself plus 1.000000 * 81.000000 * recurse

------new limit applied to position 0
new limit: 




  4
  5
Old limit



  3
  4
  5

Result = itself plus 1.000000 * 83.000000 * recurse

--------Limit mask has 2 valid spots, 4, 5
Computations: 912.000000 = (66.000000 * 14.000000) - (2.000000 * 6.000000)
Returning result
------new limit applied to position 1
new limit: 



  3

  5
Old limit



  3
  4
  5

Result = itself plus -1.000000 * -3.500000 * recurse

--------Limit mask has 2 valid spots, 3, 5
Computations: 1148.000000 = (85.000000 * 14.000000) - (7.000000 * 6.000000)
Returning result
------new limit applied to position 2
new limit: 



  3
  4

Old limit



  3
  4
  5

Result = itself plus 1.000000 * 9.000000 * recurse

--------Limit mask has 2 valid spots, 3, 4
Computations: -292.000000 = (85.000000 * 2.000000) - (7.000000 * 66.000000)
Returning result
----new limit applied to position 1
new limit: 


  2

  4
  5
Old limit


  2
  3
  4
  5

Result = itself plus -1.000000 * 84.000000 * recurse

------new limit applied to position 0
new limit: 




  4
  5
Old limit


  2

  4
  5

Result = itself plus 1.000000 * 74.000000 * recurse

--------Limit mask has 2 valid spots, 4, 5
Computations: 912.000000 = (66.000000 * 14.000000) - (2.000000 * 6.000000)
Returning result
------new limit applied to position 1
new limit: 


  2


  5
Old limit


  2

  4
  5

Result = itself plus -1.000000 * -3.500000 * recurse

--------Limit mask has 2 valid spots, 2, 5
Computations: 1212.000000 = (90.000000 * 14.000000) - (8.000000 * 6.000000)
Returning result
------new limit applied to position 2
new limit: 


  2

  4

Old limit


  2

  4
  5

Result = itself plus 1.000000 * 9.000000 * recurse

--------Limit mask has 2 valid spots, 2, 4
Computations: -348.000000 = (90.000000 * 2.000000) - (8.000000 * 66.000000)
Returning result
----new limit applied to position 2
new limit: 


  2
  3

  5
Old limit


  2
  3
  4
  5

Result = itself plus 1.000000 * 1.000000 * recurse

------new limit applied to position 0
new limit: 



  3

  5
Old limit


  2
  3

  5

Result = itself plus 1.000000 * 74.000000 * recurse

--------Limit mask has 2 valid spots, 3, 5
Computations: 1148.000000 = (85.000000 * 14.000000) - (7.000000 * 6.000000)
Returning result
------new limit applied to position 1
new limit: 


  2


  5
Old limit


  2
  3

  5

Result = itself plus -1.000000 * 83.000000 * recurse

--------Limit mask has 2 valid spots, 2, 5
Computations: 1212.000000 = (90.000000 * 14.000000) - (8.000000 * 6.000000)
Returning result
------new limit applied to position 2
new limit: 


  2
  3


Old limit


  2
  3

  5

Result = itself plus 1.000000 * 9.000000 * recurse

--------Limit mask has 2 valid spots, 2, 3
Computations: -50.000000 = (90.000000 * 7.000000) - (8.000000 * 85.000000)
Returning result
----new limit applied to position 3
new limit: 


  2
  3
  4

Old limit


  2
  3
  4
  5

Result = itself plus -1.000000 * 13.000000 * recurse

------new limit applied to position 0
new limit: 



  3
  4

Old limit


  2
  3
  4


Result = itself plus 1.000000 * 74.000000 * recurse

--------Limit mask has 2 valid spots, 3, 4
Computations: -292.000000 = (85.000000 * 2.000000) - (7.000000 * 66.000000)
Returning result
------new limit applied to position 1
new limit: 


  2

  4

Old limit


  2
  3
  4


Result = itself plus -1.000000 * 83.000000 * recurse

--------Limit mask has 2 valid spots, 2, 4
Computations: -348.000000 = (90.000000 * 2.000000) - (8.000000 * 66.000000)
Returning result
------new limit applied to position 2
new limit: 


  2
  3


Old limit


  2
  3
  4


Result = itself plus 1.000000 * -3.500000 * recurse

--------Limit mask has 2 valid spots, 2, 3
Computations: -50.000000 = (90.000000 * 7.000000) - (8.000000 * 85.000000)
Returning result
--new limit applied to position 1
new limit: 
  0


  3
  4
  5
Old limit
  0

  2
  3
  4
  5

Result = itself plus -1.000000 * 22.000000 * recurse

----new limit applied to position 0
new limit: 



  3
  4
  5
Old limit
  0


  3
  4
  5

Result = itself plus 1.000000 * 21.000000 * recurse

------new limit applied to position 0
new limit: 




  4
  5
Old limit



  3
  4
  5

Result = itself plus 1.000000 * 83.000000 * recurse

--------Limit mask has 2 valid spots, 4, 5
Computations: 912.000000 = (66.000000 * 14.000000) - (2.000000 * 6.000000)
Returning result
------new limit applied to position 1
new limit: 



  3

  5
Old limit



  3
  4
  5

Result = itself plus -1.000000 * -3.500000 * recurse

--------Limit mask has 2 valid spots, 3, 5
Computations: 1148.000000 = (85.000000 * 14.000000) - (7.000000 * 6.000000)
Returning result
------new limit applied to position 2
new limit: 



  3
  4

Old limit



  3
  4
  5

Result = itself plus 1.000000 * 9.000000 * recurse

--------Limit mask has 2 valid spots, 3, 4
Computations: -292.000000 = (85.000000 * 2.000000) - (7.000000 * 66.000000)
Returning result
----new limit applied to position 1
new limit: 
  0



  4
  5
Old limit
  0


  3
  4
  5

Result = itself plus -1.000000 * 84.000000 * recurse

------new limit applied to position 0
new limit: 




  4
  5
Old limit
  0



  4
  5

Result = itself plus 1.000000 * 76.000000 * recurse

--------Limit mask has 2 valid spots, 4, 5
Computations: 912.000000 = (66.000000 * 14.000000) - (2.000000 * 6.000000)
Returning result
------new limit applied to position 1
new limit: 
  0




  5
Old limit
  0



  4
  5

Result = itself plus -1.000000 * -3.500000 * recurse

--------Limit mask has 2 valid spots, 0, 5
Computations: 26.000000 = (7.000000 * 14.000000) - (12.000000 * 6.000000)
Returning result
------new limit applied to position 2
new limit: 
  0



  4

Old limit
  0



  4
  5

Result = itself plus 1.000000 * 9.000000 * recurse

--------Limit mask has 2 valid spots, 0, 4
Computations: -778.000000 = (7.000000 * 2.000000) - (12.000000 * 66.000000)
Returning result
----new limit applied to position 2
new limit: 
  0


  3

  5
Old limit
  0


  3
  4
  5

Result = itself plus 1.000000 * 1.000000 * recurse

------new limit applied to position 0
new limit: 



  3

  5
Old limit
  0


  3

  5

Result = itself plus 1.000000 * 76.000000 * recurse

--------Limit mask has 2 valid spots, 3, 5
Computations: 1148.000000 = (85.000000 * 14.000000) - (7.000000 * 6.000000)
Returning result
------new limit applied to position 1
new limit: 
  0




  5
Old limit
  0


  3

  5

Result = itself plus -1.000000 * 83.000000 * recurse

--------Limit mask has 2 valid spots, 0, 5
Computations: 26.000000 = (7.000000 * 14.000000) - (12.000000 * 6.000000)
Returning result
------new limit applied to position 2
new limit: 
  0


  3


Old limit
  0


  3

  5

Result = itself plus 1.000000 * 9.000000 * recurse

--------Limit mask has 2 valid spots, 0, 3
Computations: -971.000000 = (7.000000 * 7.000000) - (12.000000 * 85.000000)
Returning result
----new limit applied to position 3
new limit: 
  0


  3
  4

Old limit
  0


  3
  4
  5

Result = itself plus -1.000000 * 13.000000 * recurse

------new limit applied to position 0
new limit: 



  3
  4

Old limit
  0


  3
  4


Result = itself plus 1.000000 * 76.000000 * recurse

--------Limit mask has 2 valid spots, 3, 4
Computations: -292.000000 = (85.000000 * 2.000000) - (7.000000 * 66.000000)
Returning result
------new limit applied to position 1
new limit: 
  0



  4

Old limit
  0


  3
  4


Result = itself plus -1.000000 * 83.000000 * recurse

--------Limit mask has 2 valid spots, 0, 4
Computations: -778.000000 = (7.000000 * 2.000000) - (12.000000 * 66.000000)
Returning result
------new limit applied to position 2
new limit: 
  0


  3


Old limit
  0


  3
  4


Result = itself plus 1.000000 * -3.500000 * recurse

--------Limit mask has 2 valid spots, 0, 3
Computations: -971.000000 = (7.000000 * 7.000000) - (12.000000 * 85.000000)
Returning result
--new limit applied to position 2
new limit: 
  0

  2

  4
  5
Old limit
  0

  2
  3
  4
  5

Result = itself plus 1.000000 * 19.000000 * recurse

----new limit applied to position 0
new limit: 


  2

  4
  5
Old limit
  0

  2

  4
  5

Result = itself plus 1.000000 * 21.000000 * recurse

------new limit applied to position 0
new limit: 




  4
  5
Old limit


  2

  4
  5

Result = itself plus 1.000000 * 74.000000 * recurse

--------Limit mask has 2 valid spots, 4, 5
Computations: 912.000000 = (66.000000 * 14.000000) - (2.000000 * 6.000000)
Returning result
------new limit applied to position 1
new limit: 


  2


  5
Old limit


  2

  4
  5

Result = itself plus -1.000000 * -3.500000 * recurse

--------Limit mask has 2 valid spots, 2, 5
Computations: 1212.000000 = (90.000000 * 14.000000) - (8.000000 * 6.000000)
Returning result
------new limit applied to position 2
new limit: 


  2

  4

Old limit


  2

  4
  5

Result = itself plus 1.000000 * 9.000000 * recurse

--------Limit mask has 2 valid spots, 2, 4
Computations: -348.000000 = (90.000000 * 2.000000) - (8.000000 * 66.000000)
Returning result
----new limit applied to position 1
new limit: 
  0



  4
  5
Old limit
  0

  2

  4
  5

Result = itself plus -1.000000 * 81.000000 * recurse

------new limit applied to position 0
new limit: 




  4
  5
Old limit
  0



  4
  5

Result = itself plus 1.000000 * 76.000000 * recurse

--------Limit mask has 2 valid spots, 4, 5
Computations: 912.000000 = (66.000000 * 14.000000) - (2.000000 * 6.000000)
Returning result
------new limit applied to position 1
new limit: 
  0




  5
Old limit
  0



  4
  5

Result = itself plus -1.000000 * -3.500000 * recurse

--------Limit mask has 2 valid spots, 0, 5
Computations: 26.000000 = (7.000000 * 14.000000) - (12.000000 * 6.000000)
Returning result
------new limit applied to position 2
new limit: 
  0



  4

Old limit
  0



  4
  5

Result = itself plus 1.000000 * 9.000000 * recurse

--------Limit mask has 2 valid spots, 0, 4
Computations: -778.000000 = (7.000000 * 2.000000) - (12.000000 * 66.000000)
Returning result
----new limit applied to position 2
new limit: 
  0

  2


  5
Old limit
  0

  2

  4
  5

Result = itself plus 1.000000 * 1.000000 * recurse

------new limit applied to position 0
new limit: 


  2


  5
Old limit
  0

  2


  5

Result = itself plus 1.000000 * 76.000000 * recurse

--------Limit mask has 2 valid spots, 2, 5
Computations: 1212.000000 = (90.000000 * 14.000000) - (8.000000 * 6.000000)
Returning result
------new limit applied to position 1
new limit: 
  0




  5
Old limit
  0

  2


  5

Result = itself plus -1.000000 * 74.000000 * recurse

--------Limit mask has 2 valid spots, 0, 5
Computations: 26.000000 = (7.000000 * 14.000000) - (12.000000 * 6.000000)
Returning result
------new limit applied to position 2
new limit: 
  0

  2



Old limit
  0

  2


  5

Result = itself plus 1.000000 * 9.000000 * recurse

--------Limit mask has 2 valid spots, 0, 2
Computations: -1024.000000 = (7.000000 * 8.000000) - (12.000000 * 90.000000)
Returning result
----new limit applied to position 3
new limit: 
  0

  2

  4

Old limit
  0

  2

  4
  5

Result = itself plus -1.000000 * 13.000000 * recurse

------new limit applied to position 0
new limit: 


  2

  4

Old limit
  0

  2

  4


Result = itself plus 1.000000 * 76.000000 * recurse

--------Limit mask has 2 valid spots, 2, 4
Computations: -348.000000 = (90.000000 * 2.000000) - (8.000000 * 66.000000)
Returning result
------new limit applied to position 1
new limit: 
  0



  4

Old limit
  0

  2

  4


Result = itself plus -1.000000 * 74.000000 * recurse

--------Limit mask has 2 valid spots, 0, 4
Computations: -778.000000 = (7.000000 * 2.000000) - (12.000000 * 66.000000)
Returning result
------new limit applied to position 2
new limit: 
  0

  2



Old limit
  0

  2

  4


Result = itself plus 1.000000 * -3.500000 * recurse

--------Limit mask has 2 valid spots, 0, 2
Computations: -1024.000000 = (7.000000 * 8.000000) - (12.000000 * 90.000000)
Returning result
--new limit applied to position 3
new limit: 
  0

  2
  3

  5
Old limit
  0

  2
  3
  4
  5

Result = itself plus -1.000000 * 12.000000 * recurse

----new limit applied to position 0
new limit: 


  2
  3

  5
Old limit
  0

  2
  3

  5

Result = itself plus 1.000000 * 21.000000 * recurse

------new limit applied to position 0
new limit: 



  3

  5
Old limit


  2
  3

  5

Result = itself plus 1.000000 * 74.000000 * recurse

--------Limit mask has 2 valid spots, 3, 5
Computations: 1148.000000 = (85.000000 * 14.000000) - (7.000000 * 6.000000)
Returning result
------new limit applied to position 1
new limit: 


  2


  5
Old limit


  2
  3

  5

Result = itself plus -1.000000 * 83.000000 * recurse

--------Limit mask has 2 valid spots, 2, 5
Computations: 1212.000000 = (90.000000 * 14.000000) - (8.000000 * 6.000000)
Returning result
------new limit applied to position 2
new limit: 


  2
  3


Old limit


  2
  3

  5

Result = itself plus 1.000000 * 9.000000 * recurse

--------Limit mask has 2 valid spots, 2, 3
Computations: -50.000000 = (90.000000 * 7.000000) - (8.000000 * 85.000000)
Returning result
----new limit applied to position 1
new limit: 
  0


  3

  5
Old limit
  0

  2
  3

  5

Result = itself plus -1.000000 * 81.000000 * recurse

------new limit applied to position 0
new limit: 



  3

  5
Old limit
  0


  3

  5

Result = itself plus 1.000000 * 76.000000 * recurse

--------Limit mask has 2 valid spots, 3, 5
Computations: 1148.000000 = (85.000000 * 14.000000) - (7.000000 * 6.000000)
Returning result
------new limit applied to position 1
new limit: 
  0




  5
Old limit
  0


  3

  5

Result = itself plus -1.000000 * 83.000000 * recurse

--------Limit mask has 2 valid spots, 0, 5
Computations: 26.000000 = (7.000000 * 14.000000) - (12.000000 * 6.000000)
Returning result
------new limit applied to position 2
new limit: 
  0


  3


Old limit
  0


  3

  5

Result = itself plus 1.000000 * 9.000000 * recurse

--------Limit mask has 2 valid spots, 0, 3
Computations: -971.000000 = (7.000000 * 7.000000) - (12.000000 * 85.000000)
Returning result
----new limit applied to position 2
new limit: 
  0

  2


  5
Old limit
  0

  2
  3

  5

Result = itself plus 1.000000 * 84.000000 * recurse

------new limit applied to position 0
new limit: 


  2


  5
Old limit
  0

  2


  5

Result = itself plus 1.000000 * 76.000000 * recurse

--------Limit mask has 2 valid spots, 2, 5
Computations: 1212.000000 = (90.000000 * 14.000000) - (8.000000 * 6.000000)
Returning result
------new limit applied to position 1
new limit: 
  0




  5
Old limit
  0

  2


  5

Result = itself plus -1.000000 * 74.000000 * recurse

--------Limit mask has 2 valid spots, 0, 5
Computations: 26.000000 = (7.000000 * 14.000000) - (12.000000 * 6.000000)
Returning result
------new limit applied to position 2
new limit: 
  0

  2



Old limit
  0

  2


  5

Result = itself plus 1.000000 * 9.000000 * recurse

--------Limit mask has 2 valid spots, 0, 2
Computations: -1024.000000 = (7.000000 * 8.000000) - (12.000000 * 90.000000)
Returning result
----new limit applied to position 3
new limit: 
  0

  2
  3


Old limit
  0

  2
  3

  5

Result = itself plus -1.000000 * 13.000000 * recurse

------new limit applied to position 0
new limit: 


  2
  3


Old limit
  0

  2
  3



Result = itself plus 1.000000 * 76.000000 * recurse

--------Limit mask has 2 valid spots, 2, 3
Computations: -50.000000 = (90.000000 * 7.000000) - (8.000000 * 85.000000)
Returning result
------new limit applied to position 1
new limit: 
  0


  3


Old limit
  0

  2
  3



Result = itself plus -1.000000 * 74.000000 * recurse

--------Limit mask has 2 valid spots, 0, 3
Computations: -971.000000 = (7.000000 * 7.000000) - (12.000000 * 85.000000)
Returning result
------new limit applied to position 2
new limit: 
  0

  2



Old limit
  0

  2
  3



Result = itself plus 1.000000 * 83.000000 * recurse

--------Limit mask has 2 valid spots, 0, 2
Computations: -1024.000000 = (7.000000 * 8.000000) - (12.000000 * 90.000000)
Returning result
--new limit applied to position 4
new limit: 
  0

  2
  3
  4

Old limit
  0

  2
  3
  4
  5

Result = itself plus 1.000000 * 22.000000 * recurse

----new limit applied to position 0
new limit: 


  2
  3
  4

Old limit
  0

  2
  3
  4


Result = itself plus 1.000000 * 21.000000 * recurse

------new limit applied to position 0
new limit: 



  3
  4

Old limit


  2
  3
  4


Result = itself plus 1.000000 * 74.000000 * recurse

--------Limit mask has 2 valid spots, 3, 4
Computations: -292.000000 = (85.000000 * 2.000000) - (7.000000 * 66.000000)
Returning result
------new limit applied to position 1
new limit: 


  2

  4

Old limit


  2
  3
  4


Result = itself plus -1.000000 * 83.000000 * recurse

--------Limit mask has 2 valid spots, 2, 4
Computations: -348.000000 = (90.000000 * 2.000000) - (8.000000 * 66.000000)
Returning result
------new limit applied to position 2
new limit: 


  2
  3


Old limit


  2
  3
  4


Result = itself plus 1.000000 * -3.500000 * recurse

--------Limit mask has 2 valid spots, 2, 3
Computations: -50.000000 = (90.000000 * 7.000000) - (8.000000 * 85.000000)
Returning result
----new limit applied to position 1
new limit: 
  0


  3
  4

Old limit
  0

  2
  3
  4


Result = itself plus -1.000000 * 81.000000 * recurse

------new limit applied to position 0
new limit: 



  3
  4

Old limit
  0


  3
  4


Result = itself plus 1.000000 * 76.000000 * recurse

--------Limit mask has 2 valid spots, 3, 4
Computations: -292.000000 = (85.000000 * 2.000000) - (7.000000 * 66.000000)
Returning result
------new limit applied to position 1
new limit: 
  0



  4

Old limit
  0


  3
  4


Result = itself plus -1.000000 * 83.000000 * recurse

--------Limit mask has 2 valid spots, 0, 4
Computations: -778.000000 = (7.000000 * 2.000000) - (12.000000 * 66.000000)
Returning result
------new limit applied to position 2
new limit: 
  0


  3


Old limit
  0


  3
  4


Result = itself plus 1.000000 * -3.500000 * recurse

--------Limit mask has 2 valid spots, 0, 3
Computations: -971.000000 = (7.000000 * 7.000000) - (12.000000 * 85.000000)
Returning result
----new limit applied to position 2
new limit: 
  0

  2

  4

Old limit
  0

  2
  3
  4


Result = itself plus 1.000000 * 84.000000 * recurse

------new limit applied to position 0
new limit: 


  2

  4

Old limit
  0

  2

  4


Result = itself plus 1.000000 * 76.000000 * recurse

--------Limit mask has 2 valid spots, 2, 4
Computations: -348.000000 = (90.000000 * 2.000000) - (8.000000 * 66.000000)
Returning result
------new limit applied to position 1
new limit: 
  0



  4

Old limit
  0

  2

  4


Result = itself plus -1.000000 * 74.000000 * recurse

--------Limit mask has 2 valid spots, 0, 4
Computations: -778.000000 = (7.000000 * 2.000000) - (12.000000 * 66.000000)
Returning result
------new limit applied to position 2
new limit: 
  0

  2



Old limit
  0

  2

  4


Result = itself plus 1.000000 * -3.500000 * recurse

--------Limit mask has 2 valid spots, 0, 2
Computations: -1024.000000 = (7.000000 * 8.000000) - (12.000000 * 90.000000)
Returning result
----new limit applied to position 3
new limit: 
  0

  2
  3


Old limit
  0

  2
  3
  4


Result = itself plus -1.000000 * 1.000000 * recurse

------new limit applied to position 0
new limit: 


  2
  3


Old limit
  0

  2
  3



Result = itself plus 1.000000 * 76.000000 * recurse

--------Limit mask has 2 valid spots, 2, 3
Computations: -50.000000 = (90.000000 * 7.000000) - (8.000000 * 85.000000)
Returning result
------new limit applied to position 1
new limit: 
  0


  3


Old limit
  0

  2
  3



Result = itself plus -1.000000 * 74.000000 * recurse

--------Limit mask has 2 valid spots, 0, 3
Computations: -971.000000 = (7.000000 * 7.000000) - (12.000000 * 85.000000)
Returning result
------new limit applied to position 2
new limit: 
  0

  2



Old limit
  0

  2
  3



Result = itself plus 1.000000 * 83.000000 * recurse

--------Limit mask has 2 valid spots, 0, 2
Computations: -1024.000000 = (7.000000 * 8.000000) - (12.000000 * 90.000000)
Returning result

New limit is at position 2
Result will equal 1.000000 * 2.000000 * recurse

--new limit applied to position 0
new limit: 

  1

  3
  4
  5
Old limit
  0
  1

  3
  4
  5

Result = itself plus 1.000000 * 72.000000 * recurse

----new limit applied to position 0
new limit: 



  3
  4
  5
Old limit

  1

  3
  4
  5

Result = itself plus 1.000000 * 14.000000 * recurse

------new limit applied to position 0
new limit: 




  4
  5
Old limit



  3
  4
  5

Result = itself plus 1.000000 * 83.000000 * recurse

--------Limit mask has 2 valid spots, 4, 5
Computations: 912.000000 = (66.000000 * 14.000000) - (2.000000 * 6.000000)
Returning result
------new limit applied to position 1
new limit: 



  3

  5
Old limit



  3
  4
  5

Result = itself plus -1.000000 * -3.500000 * recurse

--------Limit mask has 2 valid spots, 3, 5
Computations: 1148.000000 = (85.000000 * 14.000000) - (7.000000 * 6.000000)
Returning result
------new limit applied to position 2
new limit: 



  3
  4

Old limit



  3
  4
  5

Result = itself plus 1.000000 * 9.000000 * recurse

--------Limit mask has 2 valid spots, 3, 4
Computations: -292.000000 = (85.000000 * 2.000000) - (7.000000 * 66.000000)
Returning result
----new limit applied to position 1
new limit: 

  1


  4
  5
Old limit

  1

  3
  4
  5

Result = itself plus -1.000000 * 84.000000 * recurse

------new limit applied to position 0
new limit: 




  4
  5
Old limit

  1


  4
  5

Result = itself plus 1.000000 * 51.000000 * recurse

--------Limit mask has 2 valid spots, 4, 5
Computations: 912.000000 = (66.000000 * 14.000000) - (2.000000 * 6.000000)
Returning result
------new limit applied to position 1
new limit: 

  1



  5
Old limit

  1


  4
  5

Result = itself plus -1.000000 * -3.500000 * recurse

--------Limit mask has 2 valid spots, 1, 5
Computations: 1356.000000 = (99.000000 * 14.000000) - (5.000000 * 6.000000)
Returning result
------new limit applied to position 2
new limit: 

  1


  4

Old limit

  1


  4
  5

Result = itself plus 1.000000 * 9.000000 * recurse

--------Limit mask has 2 valid spots, 1, 4
Computations: -132.000000 = (99.000000 * 2.000000) - (5.000000 * 66.000000)
Returning result
----new limit applied to position 2
new limit: 

  1

  3

  5
Old limit

  1

  3
  4
  5

Result = itself plus 1.000000 * 1.000000 * recurse

------new limit applied to position 0
new limit: 



  3

  5
Old limit

  1

  3

  5

Result = itself plus 1.000000 * 51.000000 * recurse

--------Limit mask has 2 valid spots, 3, 5
Computations: 1148.000000 = (85.000000 * 14.000000) - (7.000000 * 6.000000)
Returning result
------new limit applied to position 1
new limit: 

  1



  5
Old limit

  1

  3

  5

Result = itself plus -1.000000 * 83.000000 * recurse

--------Limit mask has 2 valid spots, 1, 5
Computations: 1356.000000 = (99.000000 * 14.000000) - (5.000000 * 6.000000)
Returning result
------new limit applied to position 2
new limit: 

  1

  3


Old limit

  1

  3

  5

Result = itself plus 1.000000 * 9.000000 * recurse

--------Limit mask has 2 valid spots, 1, 3
Computations: 268.000000 = (99.000000 * 7.000000) - (5.000000 * 85.000000)
Returning result
----new limit applied to position 3
new limit: 

  1

  3
  4

Old limit

  1

  3
  4
  5

Result = itself plus -1.000000 * 13.000000 * recurse

------new limit applied to position 0
new limit: 



  3
  4

Old limit

  1

  3
  4


Result = itself plus 1.000000 * 51.000000 * recurse

--------Limit mask has 2 valid spots, 3, 4
Computations: -292.000000 = (85.000000 * 2.000000) - (7.000000 * 66.000000)
Returning result
------new limit applied to position 1
new limit: 

  1


  4

Old limit

  1

  3
  4


Result = itself plus -1.000000 * 83.000000 * recurse

--------Limit mask has 2 valid spots, 1, 4
Computations: -132.000000 = (99.000000 * 2.000000) - (5.000000 * 66.000000)
Returning result
------new limit applied to position 2
new limit: 

  1

  3


Old limit

  1

  3
  4


Result = itself plus 1.000000 * -3.500000 * recurse

--------Limit mask has 2 valid spots, 1, 3
Computations: 268.000000 = (99.000000 * 7.000000) - (5.000000 * 85.000000)
Returning result
--new limit applied to position 1
new limit: 
  0


  3
  4
  5
Old limit
  0
  1

  3
  4
  5

Result = itself plus -1.000000 * 58.000000 * recurse

----new limit applied to position 0
new limit: 



  3
  4
  5
Old limit
  0


  3
  4
  5

Result = itself plus 1.000000 * 21.000000 * recurse

------new limit applied to position 0
new limit: 




  4
  5
Old limit



  3
  4
  5

Result = itself plus 1.000000 * 83.000000 * recurse

--------Limit mask has 2 valid spots, 4, 5
Computations: 912.000000 = (66.000000 * 14.000000) - (2.000000 * 6.000000)
Returning result
------new limit applied to position 1
new limit: 



  3

  5
Old limit



  3
  4
  5

Result = itself plus -1.000000 * -3.500000 * recurse

--------Limit mask has 2 valid spots, 3, 5
Computations: 1148.000000 = (85.000000 * 14.000000) - (7.000000 * 6.000000)
Returning result
------new limit applied to position 2
new limit: 



  3
  4

Old limit



  3
  4
  5

Result = itself plus 1.000000 * 9.000000 * recurse

--------Limit mask has 2 valid spots, 3, 4
Computations: -292.000000 = (85.000000 * 2.000000) - (7.000000 * 66.000000)
Returning result
----new limit applied to position 1
new limit: 
  0



  4
  5
Old limit
  0


  3
  4
  5

Result = itself plus -1.000000 * 84.000000 * recurse

------new limit applied to position 0
new limit: 




  4
  5
Old limit
  0



  4
  5

Result = itself plus 1.000000 * 76.000000 * recurse

--------Limit mask has 2 valid spots, 4, 5
Computations: 912.000000 = (66.000000 * 14.000000) - (2.000000 * 6.000000)
Returning result
------new limit applied to position 1
new limit: 
  0




  5
Old limit
  0



  4
  5

Result = itself plus -1.000000 * -3.500000 * recurse

--------Limit mask has 2 valid spots, 0, 5
Computations: 26.000000 = (7.000000 * 14.000000) - (12.000000 * 6.000000)
Returning result
------new limit applied to position 2
new limit: 
  0



  4

Old limit
  0



  4
  5

Result = itself plus 1.000000 * 9.000000 * recurse

--------Limit mask has 2 valid spots, 0, 4
Computations: -778.000000 = (7.000000 * 2.000000) - (12.000000 * 66.000000)
Returning result
----new limit applied to position 2
new limit: 
  0


  3

  5
Old limit
  0


  3
  4
  5

Result = itself plus 1.000000 * 1.000000 * recurse

------new limit applied to position 0
new limit: 



  3

  5
Old limit
  0


  3

  5

Result = itself plus 1.000000 * 76.000000 * recurse

--------Limit mask has 2 valid spots, 3, 5
Computations: 1148.000000 = (85.000000 * 14.000000) - (7.000000 * 6.000000)
Returning result
------new limit applied to position 1
new limit: 
  0




  5
Old limit
  0


  3

  5

Result = itself plus -1.000000 * 83.000000 * recurse

--------Limit mask has 2 valid spots, 0, 5
Computations: 26.000000 = (7.000000 * 14.000000) - (12.000000 * 6.000000)
Returning result
------new limit applied to position 2
new limit: 
  0


  3


Old limit
  0


  3

  5

Result = itself plus 1.000000 * 9.000000 * recurse

--------Limit mask has 2 valid spots, 0, 3
Computations: -971.000000 = (7.000000 * 7.000000) - (12.000000 * 85.000000)
Returning result
----new limit applied to position 3
new limit: 
  0


  3
  4

Old limit
  0


  3
  4
  5

Result = itself plus -1.000000 * 13.000000 * recurse

------new limit applied to position 0
new limit: 



  3
  4

Old limit
  0


  3
  4


Result = itself plus 1.000000 * 76.000000 * recurse

--------Limit mask has 2 valid spots, 3, 4
Computations: -292.000000 = (85.000000 * 2.000000) - (7.000000 * 66.000000)
Returning result
------new limit applied to position 1
new limit: 
  0



  4

Old limit
  0


  3
  4


Result = itself plus -1.000000 * 83.000000 * recurse

--------Limit mask has 2 valid spots, 0, 4
Computations: -778.000000 = (7.000000 * 2.000000) - (12.000000 * 66.000000)
Returning result
------new limit applied to position 2
new limit: 
  0


  3


Old limit
  0


  3
  4


Result = itself plus 1.000000 * -3.500000 * recurse

--------Limit mask has 2 valid spots, 0, 3
Computations: -971.000000 = (7.000000 * 7.000000) - (12.000000 * 85.000000)
Returning result
--new limit applied to position 2
new limit: 
  0
  1


  4
  5
Old limit
  0
  1

  3
  4
  5

Result = itself plus 1.000000 * 19.000000 * recurse

----new limit applied to position 0
new limit: 

  1


  4
  5
Old limit
  0
  1


  4
  5

Result = itself plus 1.000000 * 21.000000 * recurse

------new limit applied to position 0
new limit: 




  4
  5
Old limit

  1


  4
  5

Result = itself plus 1.000000 * 51.000000 * recurse

--------Limit mask has 2 valid spots, 4, 5
Computations: 912.000000 = (66.000000 * 14.000000) - (2.000000 * 6.000000)
Returning result
------new limit applied to position 1
new limit: 

  1



  5
Old limit

  1


  4
  5

Result = itself plus -1.000000 * -3.500000 * recurse

--------Limit mask has 2 valid spots, 1, 5
Computations: 1356.000000 = (99.000000 * 14.000000) - (5.000000 * 6.000000)
Returning result
------new limit applied to position 2
new limit: 

  1


  4

Old limit

  1


  4
  5

Result = itself plus 1.000000 * 9.000000 * recurse

--------Limit mask has 2 valid spots, 1, 4
Computations: -132.000000 = (99.000000 * 2.000000) - (5.000000 * 66.000000)
Returning result
----new limit applied to position 1
new limit: 
  0



  4
  5
Old limit
  0
  1


  4
  5

Result = itself plus -1.000000 * 14.000000 * recurse

------new limit applied to position 0
new limit: 




  4
  5
Old limit
  0



  4
  5

Result = itself plus 1.000000 * 76.000000 * recurse

--------Limit mask has 2 valid spots, 4, 5
Computations: 912.000000 = (66.000000 * 14.000000) - (2.000000 * 6.000000)
Returning result
------new limit applied to position 1
new limit: 
  0




  5
Old limit
  0



  4
  5

Result = itself plus -1.000000 * -3.500000 * recurse

--------Limit mask has 2 valid spots, 0, 5
Computations: 26.000000 = (7.000000 * 14.000000) - (12.000000 * 6.000000)
Returning result
------new limit applied to position 2
new limit: 
  0



  4

Old limit
  0



  4
  5

Result = itself plus 1.000000 * 9.000000 * recurse

--------Limit mask has 2 valid spots, 0, 4
Computations: -778.000000 = (7.000000 * 2.000000) - (12.000000 * 66.000000)
Returning result
----new limit applied to position 2
new limit: 
  0
  1



  5
Old limit
  0
  1


  4
  5

Result = itself plus 1.000000 * 1.000000 * recurse

------new limit applied to position 0
new limit: 

  1



  5
Old limit
  0
  1



  5

Result = itself plus 1.000000 * 76.000000 * recurse

--------Limit mask has 2 valid spots, 1, 5
Computations: 1356.000000 = (99.000000 * 14.000000) - (5.000000 * 6.000000)
Returning result
------new limit applied to position 1
new limit: 
  0




  5
Old limit
  0
  1



  5

Result = itself plus -1.000000 * 51.000000 * recurse

--------Limit mask has 2 valid spots, 0, 5
Computations: 26.000000 = (7.000000 * 14.000000) - (12.000000 * 6.000000)
Returning result
------new limit applied to position 2
new limit: 
  0
  1




Old limit
  0
  1



  5

Result = itself plus 1.000000 * 9.000000 * recurse

--------Limit mask has 2 valid spots, 0, 1
Computations: -1153.000000 = (7.000000 * 5.000000) - (12.000000 * 99.000000)
Returning result
----new limit applied to position 3
new limit: 
  0
  1


  4

Old limit
  0
  1


  4
  5

Result = itself plus -1.000000 * 13.000000 * recurse

------new limit applied to position 0
new limit: 

  1


  4

Old limit
  0
  1


  4


Result = itself plus 1.000000 * 76.000000 * recurse

--------Limit mask has 2 valid spots, 1, 4
Computations: -132.000000 = (99.000000 * 2.000000) - (5.000000 * 66.000000)
Returning result
------new limit applied to position 1
new limit: 
  0



  4

Old limit
  0
  1


  4


Result = itself plus -1.000000 * 51.000000 * recurse

--------Limit mask has 2 valid spots, 0, 4
Computations: -778.000000 = (7.000000 * 2.000000) - (12.000000 * 66.000000)
Returning result
------new limit applied to position 2
new limit: 
  0
  1




Old limit
  0
  1


  4


Result = itself plus 1.000000 * -3.500000 * recurse

--------Limit mask has 2 valid spots, 0, 1
Computations: -1153.000000 = (7.000000 * 5.000000) - (12.000000 * 99.000000)
Returning result
--new limit applied to position 3
new limit: 
  0
  1

  3

  5
Old limit
  0
  1

  3
  4
  5

Result = itself plus -1.000000 * 12.000000 * recurse

----new limit applied to position 0
new limit: 

  1

  3

  5
Old limit
  0
  1

  3

  5

Result = itself plus 1.000000 * 21.000000 * recurse

------new limit applied to position 0
new limit: 



  3

  5
Old limit

  1

  3

  5

Result = itself plus 1.000000 * 51.000000 * recurse

--------Limit mask has 2 valid spots, 3, 5
Computations: 1148.000000 = (85.000000 * 14.000000) - (7.000000 * 6.000000)
Returning result
------new limit applied to position 1
new limit: 

  1



  5
Old limit

  1

  3

  5

Result = itself plus -1.000000 * 83.000000 * recurse

--------Limit mask has 2 valid spots, 1, 5
Computations: 1356.000000 = (99.000000 * 14.000000) - (5.000000 * 6.000000)
Returning result
------new limit applied to position 2
new limit: 

  1

  3


Old limit

  1

  3

  5

Result = itself plus 1.000000 * 9.000000 * recurse

--------Limit mask has 2 valid spots, 1, 3
Computations: 268.000000 = (99.000000 * 7.000000) - (5.000000 * 85.000000)
Returning result
----new limit applied to position 1
new limit: 
  0


  3

  5
Old limit
  0
  1

  3

  5

Result = itself plus -1.000000 * 14.000000 * recurse

------new limit applied to position 0
new limit: 



  3

  5
Old limit
  0


  3

  5

Result = itself plus 1.000000 * 76.000000 * recurse

--------Limit mask has 2 valid spots, 3, 5
Computations: 1148.000000 = (85.000000 * 14.000000) - (7.000000 * 6.000000)
Returning result
------new limit applied to position 1
new limit: 
  0




  5
Old limit
  0


  3

  5

Result = itself plus -1.000000 * 83.000000 * recurse

--------Limit mask has 2 valid spots, 0, 5
Computations: 26.000000 = (7.000000 * 14.000000) - (12.000000 * 6.000000)
Returning result
------new limit applied to position 2
new limit: 
  0


  3


Old limit
  0


  3

  5

Result = itself plus 1.000000 * 9.000000 * recurse

--------Limit mask has 2 valid spots, 0, 3
Computations: -971.000000 = (7.000000 * 7.000000) - (12.000000 * 85.000000)
Returning result
----new limit applied to position 2
new limit: 
  0
  1



  5
Old limit
  0
  1

  3

  5

Result = itself plus 1.000000 * 84.000000 * recurse

------new limit applied to position 0
new limit: 

  1



  5
Old limit
  0
  1



  5

Result = itself plus 1.000000 * 76.000000 * recurse

--------Limit mask has 2 valid spots, 1, 5
Computations: 1356.000000 = (99.000000 * 14.000000) - (5.000000 * 6.000000)
Returning result
------new limit applied to position 1
new limit: 
  0




  5
Old limit
  0
  1



  5

Result = itself plus -1.000000 * 51.000000 * recurse

--------Limit mask has 2 valid spots, 0, 5
Computations: 26.000000 = (7.000000 * 14.000000) - (12.000000 * 6.000000)
Returning result
------new limit applied to position 2
new limit: 
  0
  1




Old limit
  0
  1



  5

Result = itself plus 1.000000 * 9.000000 * recurse

--------Limit mask has 2 valid spots, 0, 1
Computations: -1153.000000 = (7.000000 * 5.000000) - (12.000000 * 99.000000)
Returning result
----new limit applied to position 3
new limit: 
  0
  1

  3


Old limit
  0
  1

  3

  5

Result = itself plus -1.000000 * 13.000000 * recurse

------new limit applied to position 0
new limit: 

  1

  3


Old limit
  0
  1

  3



Result = itself plus 1.000000 * 76.000000 * recurse

--------Limit mask has 2 valid spots, 1, 3
Computations: 268.000000 = (99.000000 * 7.000000) - (5.000000 * 85.000000)
Returning result
------new limit applied to position 1
new limit: 
  0


  3


Old limit
  0
  1

  3



Result = itself plus -1.000000 * 51.000000 * recurse

--------Limit mask has 2 valid spots, 0, 3
Computations: -971.000000 = (7.000000 * 7.000000) - (12.000000 * 85.000000)
Returning result
------new limit applied to position 2
new limit: 
  0
  1




Old limit
  0
  1

  3



Result = itself plus 1.000000 * 83.000000 * recurse

--------Limit mask has 2 valid spots, 0, 1
Computations: -1153.000000 = (7.000000 * 5.000000) - (12.000000 * 99.000000)
Returning result
--new limit applied to position 4
new limit: 
  0
  1

  3
  4

Old limit
  0
  1

  3
  4
  5

Result = itself plus 1.000000 * 22.000000 * recurse

----new limit applied to position 0
new limit: 

  1

  3
  4

Old limit
  0
  1

  3
  4


Result = itself plus 1.000000 * 21.000000 * recurse

------new limit applied to position 0
new limit: 



  3
  4

Old limit

  1

  3
  4


Result = itself plus 1.000000 * 51.000000 * recurse

--------Limit mask has 2 valid spots, 3, 4
Computations: -292.000000 = (85.000000 * 2.000000) - (7.000000 * 66.000000)
Returning result
------new limit applied to position 1
new limit: 

  1


  4

Old limit

  1

  3
  4


Result = itself plus -1.000000 * 83.000000 * recurse

--------Limit mask has 2 valid spots, 1, 4
Computations: -132.000000 = (99.000000 * 2.000000) - (5.000000 * 66.000000)
Returning result
------new limit applied to position 2
new limit: 

  1

  3


Old limit

  1

  3
  4


Result = itself plus 1.000000 * -3.500000 * recurse

--------Limit mask has 2 valid spots, 1, 3
Computations: 268.000000 = (99.000000 * 7.000000) - (5.000000 * 85.000000)
Returning result
----new limit applied to position 1
new limit: 
  0


  3
  4

Old limit
  0
  1

  3
  4


Result = itself plus -1.000000 * 14.000000 * recurse

------new limit applied to position 0
new limit: 



  3
  4

Old limit
  0


  3
  4


Result = itself plus 1.000000 * 76.000000 * recurse

--------Limit mask has 2 valid spots, 3, 4
Computations: -292.000000 = (85.000000 * 2.000000) - (7.000000 * 66.000000)
Returning result
------new limit applied to position 1
new limit: 
  0



  4

Old limit
  0


  3
  4


Result = itself plus -1.000000 * 83.000000 * recurse

--------Limit mask has 2 valid spots, 0, 4
Computations: -778.000000 = (7.000000 * 2.000000) - (12.000000 * 66.000000)
Returning result
------new limit applied to position 2
new limit: 
  0


  3


Old limit
  0


  3
  4


Result = itself plus 1.000000 * -3.500000 * recurse

--------Limit mask has 2 valid spots, 0, 3
Computations: -971.000000 = (7.000000 * 7.000000) - (12.000000 * 85.000000)
Returning result
----new limit applied to position 2
new limit: 
  0
  1


  4

Old limit
  0
  1

  3
  4


Result = itself plus 1.000000 * 84.000000 * recurse

------new limit applied to position 0
new limit: 

  1


  4

Old limit
  0
  1


  4


Result = itself plus 1.000000 * 76.000000 * recurse

--------Limit mask has 2 valid spots, 1, 4
Computations: -132.000000 = (99.000000 * 2.000000) - (5.000000 * 66.000000)
Returning result
------new limit applied to position 1
new limit: 
  0



  4

Old limit
  0
  1


  4


Result = itself plus -1.000000 * 51.000000 * recurse

--------Limit mask has 2 valid spots, 0, 4
Computations: -778.000000 = (7.000000 * 2.000000) - (12.000000 * 66.000000)
Returning result
------new limit applied to position 2
new limit: 
  0
  1




Old limit
  0
  1


  4


Result = itself plus 1.000000 * -3.500000 * recurse

--------Limit mask has 2 valid spots, 0, 1
Computations: -1153.000000 = (7.000000 * 5.000000) - (12.000000 * 99.000000)
Returning result
----new limit applied to position 3
new limit: 
  0
  1

  3


Old limit
  0
  1

  3
  4


Result = itself plus -1.000000 * 1.000000 * recurse

------new limit applied to position 0
new limit: 

  1

  3


Old limit
  0
  1

  3



Result = itself plus 1.000000 * 76.000000 * recurse

--------Limit mask has 2 valid spots, 1, 3
Computations: 268.000000 = (99.000000 * 7.000000) - (5.000000 * 85.000000)
Returning result
------new limit applied to position 1
new limit: 
  0


  3


Old limit
  0
  1

  3



Result = itself plus -1.000000 * 51.000000 * recurse

--------Limit mask has 2 valid spots, 0, 3
Computations: -971.000000 = (7.000000 * 7.000000) - (12.000000 * 85.000000)
Returning result
------new limit applied to position 2
new limit: 
  0
  1




Old limit
  0
  1

  3



Result = itself plus 1.000000 * 83.000000 * recurse

--------Limit mask has 2 valid spots, 0, 1
Computations: -1153.000000 = (7.000000 * 5.000000) - (12.000000 * 99.000000)
Returning result

New limit is at position 3
Result will equal -1.000000 * 4.000000 * recurse

--new limit applied to position 0
new limit: 

  1
  2

  4
  5
Old limit
  0
  1
  2

  4
  5

Result = itself plus 1.000000 * 72.000000 * recurse

----new limit applied to position 0
new limit: 


  2

  4
  5
Old limit

  1
  2

  4
  5

Result = itself plus 1.000000 * 14.000000 * recurse

------new limit applied to position 0
new limit: 




  4
  5
Old limit


  2

  4
  5

Result = itself plus 1.000000 * 74.000000 * recurse

--------Limit mask has 2 valid spots, 4, 5
Computations: 912.000000 = (66.000000 * 14.000000) - (2.000000 * 6.000000)
Returning result
------new limit applied to position 1
new limit: 


  2


  5
Old limit


  2

  4
  5

Result = itself plus -1.000000 * -3.500000 * recurse

--------Limit mask has 2 valid spots, 2, 5
Computations: 1212.000000 = (90.000000 * 14.000000) - (8.000000 * 6.000000)
Returning result
------new limit applied to position 2
new limit: 


  2

  4

Old limit


  2

  4
  5

Result = itself plus 1.000000 * 9.000000 * recurse

--------Limit mask has 2 valid spots, 2, 4
Computations: -348.000000 = (90.000000 * 2.000000) - (8.000000 * 66.000000)
Returning result
----new limit applied to position 1
new limit: 

  1


  4
  5
Old limit

  1
  2

  4
  5

Result = itself plus -1.000000 * 81.000000 * recurse

------new limit applied to position 0
new limit: 




  4
  5
Old limit

  1


  4
  5

Result = itself plus 1.000000 * 51.000000 * recurse

--------Limit mask has 2 valid spots, 4, 5
Computations: 912.000000 = (66.000000 * 14.000000) - (2.000000 * 6.000000)
Returning result
------new limit applied to position 1
new limit: 

  1



  5
Old limit

  1


  4
  5

Result = itself plus -1.000000 * -3.500000 * recurse

--------Limit mask has 2 valid spots, 1, 5
Computations: 1356.000000 = (99.000000 * 14.000000) - (5.000000 * 6.000000)
Returning result
------new limit applied to position 2
new limit: 

  1


  4

Old limit

  1


  4
  5

Result = itself plus 1.000000 * 9.000000 * recurse

--------Limit mask has 2 valid spots, 1, 4
Computations: -132.000000 = (99.000000 * 2.000000) - (5.000000 * 66.000000)
Returning result
----new limit applied to position 2
new limit: 

  1
  2


  5
Old limit

  1
  2

  4
  5

Result = itself plus 1.000000 * 1.000000 * recurse

------new limit applied to position 0
new limit: 


  2


  5
Old limit

  1
  2


  5

Result = itself plus 1.000000 * 51.000000 * recurse

--------Limit mask has 2 valid spots, 2, 5
Computations: 1212.000000 = (90.000000 * 14.000000) - (8.000000 * 6.000000)
Returning result
------new limit applied to position 1
new limit: 

  1



  5
Old limit

  1
  2


  5

Result = itself plus -1.000000 * 74.000000 * recurse

--------Limit mask has 2 valid spots, 1, 5
Computations: 1356.000000 = (99.000000 * 14.000000) - (5.000000 * 6.000000)
Returning result
------new limit applied to position 2
new limit: 

  1
  2



Old limit

  1
  2


  5

Result = itself plus 1.000000 * 9.000000 * recurse

--------Limit mask has 2 valid spots, 1, 2
Computations: 342.000000 = (99.000000 * 8.000000) - (5.000000 * 90.000000)
Returning result
----new limit applied to position 3
new limit: 

  1
  2

  4

Old limit

  1
  2

  4
  5

Result = itself plus -1.000000 * 13.000000 * recurse

------new limit applied to position 0
new limit: 


  2

  4

Old limit

  1
  2

  4


Result = itself plus 1.000000 * 51.000000 * recurse

--------Limit mask has 2 valid spots, 2, 4
Computations: -348.000000 = (90.000000 * 2.000000) - (8.000000 * 66.000000)
Returning result
------new limit applied to position 1
new limit: 

  1


  4

Old limit

  1
  2

  4


Result = itself plus -1.000000 * 74.000000 * recurse

--------Limit mask has 2 valid spots, 1, 4
Computations: -132.000000 = (99.000000 * 2.000000) - (5.000000 * 66.000000)
Returning result
------new limit applied to position 2
new limit: 

  1
  2



Old limit

  1
  2

  4


Result = itself plus 1.000000 * -3.500000 * recurse

--------Limit mask has 2 valid spots, 1, 2
Computations: 342.000000 = (99.000000 * 8.000000) - (5.000000 * 90.000000)
Returning result
--new limit applied to position 1
new limit: 
  0

  2

  4
  5
Old limit
  0
  1
  2

  4
  5

Result = itself plus -1.000000 * 58.000000 * recurse

----new limit applied to position 0
new limit: 


  2

  4
  5
Old limit
  0

  2

  4
  5

Result = itself plus 1.000000 * 21.000000 * recurse

------new limit applied to position 0
new limit: 




  4
  5
Old limit


  2

  4
  5

Result = itself plus 1.000000 * 74.000000 * recurse

--------Limit mask has 2 valid spots, 4, 5
Computations: 912.000000 = (66.000000 * 14.000000) - (2.000000 * 6.000000)
Returning result
------new limit applied to position 1
new limit: 


  2


  5
Old limit


  2

  4
  5

Result = itself plus -1.000000 * -3.500000 * recurse

--------Limit mask has 2 valid spots, 2, 5
Computations: 1212.000000 = (90.000000 * 14.000000) - (8.000000 * 6.000000)
Returning result
------new limit applied to position 2
new limit: 


  2

  4

Old limit


  2

  4
  5

Result = itself plus 1.000000 * 9.000000 * recurse

--------Limit mask has 2 valid spots, 2, 4
Computations: -348.000000 = (90.000000 * 2.000000) - (8.000000 * 66.000000)
Returning result
----new limit applied to position 1
new limit: 
  0



  4
  5
Old limit
  0

  2

  4
  5

Result = itself plus -1.000000 * 81.000000 * recurse

------new limit applied to position 0
new limit: 




  4
  5
Old limit
  0



  4
  5

Result = itself plus 1.000000 * 76.000000 * recurse

--------Limit mask has 2 valid spots, 4, 5
Computations: 912.000000 = (66.000000 * 14.000000) - (2.000000 * 6.000000)
Returning result
------new limit applied to position 1
new limit: 
  0




  5
Old limit
  0



  4
  5

Result = itself plus -1.000000 * -3.500000 * recurse

--------Limit mask has 2 valid spots, 0, 5
Computations: 26.000000 = (7.000000 * 14.000000) - (12.000000 * 6.000000)
Returning result
------new limit applied to position 2
new limit: 
  0



  4

Old limit
  0



  4
  5

Result = itself plus 1.000000 * 9.000000 * recurse

--------Limit mask has 2 valid spots, 0, 4
Computations: -778.000000 = (7.000000 * 2.000000) - (12.000000 * 66.000000)
Returning result
----new limit applied to position 2
new limit: 
  0

  2


  5
Old limit
  0

  2

  4
  5

Result = itself plus 1.000000 * 1.000000 * recurse

------new limit applied to position 0
new limit: 


  2


  5
Old limit
  0

  2


  5

Result = itself plus 1.000000 * 76.000000 * recurse

--------Limit mask has 2 valid spots, 2, 5
Computations: 1212.000000 = (90.000000 * 14.000000) - (8.000000 * 6.000000)
Returning result
------new limit applied to position 1
new limit: 
  0




  5
Old limit
  0

  2


  5

Result = itself plus -1.000000 * 74.000000 * recurse

--------Limit mask has 2 valid spots, 0, 5
Computations: 26.000000 = (7.000000 * 14.000000) - (12.000000 * 6.000000)
Returning result
------new limit applied to position 2
new limit: 
  0

  2



Old limit
  0

  2


  5

Result = itself plus 1.000000 * 9.000000 * recurse

--------Limit mask has 2 valid spots, 0, 2
Computations: -1024.000000 = (7.000000 * 8.000000) - (12.000000 * 90.000000)
Returning result
----new limit applied to position 3
new limit: 
  0

  2

  4

Old limit
  0

  2

  4
  5

Result = itself plus -1.000000 * 13.000000 * recurse

------new limit applied to position 0
new limit: 


  2

  4

Old limit
  0

  2

  4


Result = itself plus 1.000000 * 76.000000 * recurse

--------Limit mask has 2 valid spots, 2, 4
Computations: -348.000000 = (90.000000 * 2.000000) - (8.000000 * 66.000000)
Returning result
------new limit applied to position 1
new limit: 
  0



  4

Old limit
  0

  2

  4


Result = itself plus -1.000000 * 74.000000 * recurse

--------Limit mask has 2 valid spots, 0, 4
Computations: -778.000000 = (7.000000 * 2.000000) - (12.000000 * 66.000000)
Returning result
------new limit applied to position 2
new limit: 
  0

  2



Old limit
  0

  2

  4


Result = itself plus 1.000000 * -3.500000 * recurse

--------Limit mask has 2 valid spots, 0, 2
Computations: -1024.000000 = (7.000000 * 8.000000) - (12.000000 * 90.000000)
Returning result
--new limit applied to position 2
new limit: 
  0
  1


  4
  5
Old limit
  0
  1
  2

  4
  5

Result = itself plus 1.000000 * 22.000000 * recurse

----new limit applied to position 0
new limit: 

  1


  4
  5
Old limit
  0
  1


  4
  5

Result = itself plus 1.000000 * 21.000000 * recurse

------new limit applied to position 0
new limit: 




  4
  5
Old limit

  1


  4
  5

Result = itself plus 1.000000 * 51.000000 * recurse

--------Limit mask has 2 valid spots, 4, 5
Computations: 912.000000 = (66.000000 * 14.000000) - (2.000000 * 6.000000)
Returning result
------new limit applied to position 1
new limit: 

  1



  5
Old limit

  1


  4
  5

Result = itself plus -1.000000 * -3.500000 * recurse

--------Limit mask has 2 valid spots, 1, 5
Computations: 1356.000000 = (99.000000 * 14.000000) - (5.000000 * 6.000000)
Returning result
------new limit applied to position 2
new limit: 

  1


  4

Old limit

  1


  4
  5

Result = itself plus 1.000000 * 9.000000 * recurse

--------Limit mask has 2 valid spots, 1, 4
Computations: -132.000000 = (99.000000 * 2.000000) - (5.000000 * 66.000000)
Returning result
----new limit applied to position 1
new limit: 
  0



  4
  5
Old limit
  0
  1


  4
  5

Result = itself plus -1.000000 * 14.000000 * recurse

------new limit applied to position 0
new limit: 




  4
  5
Old limit
  0



  4
  5

Result = itself plus 1.000000 * 76.000000 * recurse

--------Limit mask has 2 valid spots, 4, 5
Computations: 912.000000 = (66.000000 * 14.000000) - (2.000000 * 6.000000)
Returning result
------new limit applied to position 1
new limit: 
  0




  5
Old limit
  0



  4
  5

Result = itself plus -1.000000 * -3.500000 * recurse

--------Limit mask has 2 valid spots, 0, 5
Computations: 26.000000 = (7.000000 * 14.000000) - (12.000000 * 6.000000)
Returning result
------new limit applied to position 2
new limit: 
  0



  4

Old limit
  0



  4
  5

Result = itself plus 1.000000 * 9.000000 * recurse

--------Limit mask has 2 valid spots, 0, 4
Computations: -778.000000 = (7.000000 * 2.000000) - (12.000000 * 66.000000)
Returning result
----new limit applied to position 2
new limit: 
  0
  1



  5
Old limit
  0
  1


  4
  5

Result = itself plus 1.000000 * 1.000000 * recurse

------new limit applied to position 0
new limit: 

  1



  5
Old limit
  0
  1



  5

Result = itself plus 1.000000 * 76.000000 * recurse

--------Limit mask has 2 valid spots, 1, 5
Computations: 1356.000000 = (99.000000 * 14.000000) - (5.000000 * 6.000000)
Returning result
------new limit applied to position 1
new limit: 
  0




  5
Old limit
  0
  1



  5

Result = itself plus -1.000000 * 51.000000 * recurse

--------Limit mask has 2 valid spots, 0, 5
Computations: 26.000000 = (7.000000 * 14.000000) - (12.000000 * 6.000000)
Returning result
------new limit applied to position 2
new limit: 
  0
  1




Old limit
  0
  1



  5

Result = itself plus 1.000000 * 9.000000 * recurse

--------Limit mask has 2 valid spots, 0, 1
Computations: -1153.000000 = (7.000000 * 5.000000) - (12.000000 * 99.000000)
Returning result
----new limit applied to position 3
new limit: 
  0
  1


  4

Old limit
  0
  1


  4
  5

Result = itself plus -1.000000 * 13.000000 * recurse

------new limit applied to position 0
new limit: 

  1


  4

Old limit
  0
  1


  4


Result = itself plus 1.000000 * 76.000000 * recurse

--------Limit mask has 2 valid spots, 1, 4
Computations: -132.000000 = (99.000000 * 2.000000) - (5.000000 * 66.000000)
Returning result
------new limit applied to position 1
new limit: 
  0



  4

Old limit
  0
  1


  4


Result = itself plus -1.000000 * 51.000000 * recurse

--------Limit mask has 2 valid spots, 0, 4
Computations: -778.000000 = (7.000000 * 2.000000) - (12.000000 * 66.000000)
Returning result
------new limit applied to position 2
new limit: 
  0
  1




Old limit
  0
  1


  4


Result = itself plus 1.000000 * -3.500000 * recurse

--------Limit mask has 2 valid spots, 0, 1
Computations: -1153.000000 = (7.000000 * 5.000000) - (12.000000 * 99.000000)
Returning result
--new limit applied to position 3
new limit: 
  0
  1
  2


  5
Old limit
  0
  1
  2

  4
  5

Result = itself plus -1.000000 * 12.000000 * recurse

----new limit applied to position 0
new limit: 

  1
  2


  5
Old limit
  0
  1
  2


  5

Result = itself plus 1.000000 * 21.000000 * recurse

------new limit applied to position 0
new limit: 


  2


  5
Old limit

  1
  2


  5

Result = itself plus 1.000000 * 51.000000 * recurse

--------Limit mask has 2 valid spots, 2, 5
Computations: 1212.000000 = (90.000000 * 14.000000) - (8.000000 * 6.000000)
Returning result
------new limit applied to position 1
new limit: 

  1



  5
Old limit

  1
  2


  5

Result = itself plus -1.000000 * 74.000000 * recurse

--------Limit mask has 2 valid spots, 1, 5
Computations: 1356.000000 = (99.000000 * 14.000000) - (5.000000 * 6.000000)
Returning result
------new limit applied to position 2
new limit: 

  1
  2



Old limit

  1
  2


  5

Result = itself plus 1.000000 * 9.000000 * recurse

--------Limit mask has 2 valid spots, 1, 2
Computations: 342.000000 = (99.000000 * 8.000000) - (5.000000 * 90.000000)
Returning result
----new limit applied to position 1
new limit: 
  0

  2


  5
Old limit
  0
  1
  2


  5

Result = itself plus -1.000000 * 14.000000 * recurse

------new limit applied to position 0
new limit: 


  2


  5
Old limit
  0

  2


  5

Result = itself plus 1.000000 * 76.000000 * recurse

--------Limit mask has 2 valid spots, 2, 5
Computations: 1212.000000 = (90.000000 * 14.000000) - (8.000000 * 6.000000)
Returning result
------new limit applied to position 1
new limit: 
  0




  5
Old limit
  0

  2


  5

Result = itself plus -1.000000 * 74.000000 * recurse

--------Limit mask has 2 valid spots, 0, 5
Computations: 26.000000 = (7.000000 * 14.000000) - (12.000000 * 6.000000)
Returning result
------new limit applied to position 2
new limit: 
  0

  2



Old limit
  0

  2


  5

Result = itself plus 1.000000 * 9.000000 * recurse

--------Limit mask has 2 valid spots, 0, 2
Computations: -1024.000000 = (7.000000 * 8.000000) - (12.000000 * 90.000000)
Returning result
----new limit applied to position 2
new limit: 
  0
  1



  5
Old limit
  0
  1
  2


  5

Result = itself plus 1.000000 * 81.000000 * recurse

------new limit applied to position 0
new limit: 

  1



  5
Old limit
  0
  1



  5

Result = itself plus 1.000000 * 76.000000 * recurse

--------Limit mask has 2 valid spots, 1, 5
Computations: 1356.000000 = (99.000000 * 14.000000) - (5.000000 * 6.000000)
Returning result
------new limit applied to position 1
new limit: 
  0




  5
Old limit
  0
  1



  5

Result = itself plus -1.000000 * 51.000000 * recurse

--------Limit mask has 2 valid spots, 0, 5
Computations: 26.000000 = (7.000000 * 14.000000) - (12.000000 * 6.000000)
Returning result
------new limit applied to position 2
new limit: 
  0
  1




Old limit
  0
  1



  5

Result = itself plus 1.000000 * 9.000000 * recurse

--------Limit mask has 2 valid spots, 0, 1
Computations: -1153.000000 = (7.000000 * 5.000000) - (12.000000 * 99.000000)
Returning result
----new limit applied to position 3
new limit: 
  0
  1
  2



Old limit
  0
  1
  2


  5

Result = itself plus -1.000000 * 13.000000 * recurse

------new limit applied to position 0
new limit: 

  1
  2



Old limit
  0
  1
  2




Result = itself plus 1.000000 * 76.000000 * recurse

--------Limit mask has 2 valid spots, 1, 2
Computations: 342.000000 = (99.000000 * 8.000000) - (5.000000 * 90.000000)
Returning result
------new limit applied to position 1
new limit: 
  0

  2



Old limit
  0
  1
  2




Result = itself plus -1.000000 * 51.000000 * recurse

--------Limit mask has 2 valid spots, 0, 2
Computations: -1024.000000 = (7.000000 * 8.000000) - (12.000000 * 90.000000)
Returning result
------new limit applied to position 2
new limit: 
  0
  1




Old limit
  0
  1
  2




Result = itself plus 1.000000 * 74.000000 * recurse

--------Limit mask has 2 valid spots, 0, 1
Computations: -1153.000000 = (7.000000 * 5.000000) - (12.000000 * 99.000000)
Returning result
--new limit applied to position 4
new limit: 
  0
  1
  2

  4

Old limit
  0
  1
  2

  4
  5

Result = itself plus 1.000000 * 22.000000 * recurse

----new limit applied to position 0
new limit: 

  1
  2

  4

Old limit
  0
  1
  2

  4


Result = itself plus 1.000000 * 21.000000 * recurse

------new limit applied to position 0
new limit: 


  2

  4

Old limit

  1
  2

  4


Result = itself plus 1.000000 * 51.000000 * recurse

--------Limit mask has 2 valid spots, 2, 4
Computations: -348.000000 = (90.000000 * 2.000000) - (8.000000 * 66.000000)
Returning result
------new limit applied to position 1
new limit: 

  1


  4

Old limit

  1
  2

  4


Result = itself plus -1.000000 * 74.000000 * recurse

--------Limit mask has 2 valid spots, 1, 4
Computations: -132.000000 = (99.000000 * 2.000000) - (5.000000 * 66.000000)
Returning result
------new limit applied to position 2
new limit: 

  1
  2



Old limit

  1
  2

  4


Result = itself plus 1.000000 * -3.500000 * recurse

--------Limit mask has 2 valid spots, 1, 2
Computations: 342.000000 = (99.000000 * 8.000000) - (5.000000 * 90.000000)
Returning result
----new limit applied to position 1
new limit: 
  0

  2

  4

Old limit
  0
  1
  2

  4


Result = itself plus -1.000000 * 14.000000 * recurse

------new limit applied to position 0
new limit: 


  2

  4

Old limit
  0

  2

  4


Result = itself plus 1.000000 * 76.000000 * recurse

--------Limit mask has 2 valid spots, 2, 4
Computations: -348.000000 = (90.000000 * 2.000000) - (8.000000 * 66.000000)
Returning result
------new limit applied to position 1
new limit: 
  0



  4

Old limit
  0

  2

  4


Result = itself plus -1.000000 * 74.000000 * recurse

--------Limit mask has 2 valid spots, 0, 4
Computations: -778.000000 = (7.000000 * 2.000000) - (12.000000 * 66.000000)
Returning result
------new limit applied to position 2
new limit: 
  0

  2



Old limit
  0

  2

  4


Result = itself plus 1.000000 * -3.500000 * recurse

--------Limit mask has 2 valid spots, 0, 2
Computations: -1024.000000 = (7.000000 * 8.000000) - (12.000000 * 90.000000)
Returning result
----new limit applied to position 2
new limit: 
  0
  1


  4

Old limit
  0
  1
  2

  4


Result = itself plus 1.000000 * 81.000000 * recurse

------new limit applied to position 0
new limit: 

  1


  4

Old limit
  0
  1


  4


Result = itself plus 1.000000 * 76.000000 * recurse

--------Limit mask has 2 valid spots, 1, 4
Computations: -132.000000 = (99.000000 * 2.000000) - (5.000000 * 66.000000)
Returning result
------new limit applied to position 1
new limit: 
  0



  4

Old limit
  0
  1


  4


Result = itself plus -1.000000 * 51.000000 * recurse

--------Limit mask has 2 valid spots, 0, 4
Computations: -778.000000 = (7.000000 * 2.000000) - (12.000000 * 66.000000)
Returning result
------new limit applied to position 2
new limit: 
  0
  1




Old limit
  0
  1


  4


Result = itself plus 1.000000 * -3.500000 * recurse

--------Limit mask has 2 valid spots, 0, 1
Computations: -1153.000000 = (7.000000 * 5.000000) - (12.000000 * 99.000000)
Returning result
----new limit applied to position 3
new limit: 
  0
  1
  2



Old limit
  0
  1
  2

  4


Result = itself plus -1.000000 * 1.000000 * recurse

------new limit applied to position 0
new limit: 

  1
  2



Old limit
  0
  1
  2




Result = itself plus 1.000000 * 76.000000 * recurse

--------Limit mask has 2 valid spots, 1, 2
Computations: 342.000000 = (99.000000 * 8.000000) - (5.000000 * 90.000000)
Returning result
------new limit applied to position 1
new limit: 
  0

  2



Old limit
  0
  1
  2




Result = itself plus -1.000000 * 51.000000 * recurse

--------Limit mask has 2 valid spots, 0, 2
Computations: -1024.000000 = (7.000000 * 8.000000) - (12.000000 * 90.000000)
Returning result
------new limit applied to position 2
new limit: 
  0
  1




Old limit
  0
  1
  2




Result = itself plus 1.000000 * 74.000000 * recurse

--------Limit mask has 2 valid spots, 0, 1
Computations: -1153.000000 = (7.000000 * 5.000000) - (12.000000 * 99.000000)
Returning result

New limit is at position 4
Result will equal 1.000000 * 13.000000 * recurse

--new limit applied to position 0
new limit: 

  1
  2
  3

  5
Old limit
  0
  1
  2
  3

  5

Result = itself plus 1.000000 * 72.000000 * recurse

----new limit applied to position 0
new limit: 


  2
  3

  5
Old limit

  1
  2
  3

  5

Result = itself plus 1.000000 * 14.000000 * recurse

------new limit applied to position 0
new limit: 



  3

  5
Old limit


  2
  3

  5

Result = itself plus 1.000000 * 74.000000 * recurse

--------Limit mask has 2 valid spots, 3, 5
Computations: 1148.000000 = (85.000000 * 14.000000) - (7.000000 * 6.000000)
Returning result
------new limit applied to position 1
new limit: 


  2


  5
Old limit


  2
  3

  5

Result = itself plus -1.000000 * 83.000000 * recurse

--------Limit mask has 2 valid spots, 2, 5
Computations: 1212.000000 = (90.000000 * 14.000000) - (8.000000 * 6.000000)
Returning result
------new limit applied to position 2
new limit: 


  2
  3


Old limit


  2
  3

  5

Result = itself plus 1.000000 * 9.000000 * recurse

--------Limit mask has 2 valid spots, 2, 3
Computations: -50.000000 = (90.000000 * 7.000000) - (8.000000 * 85.000000)
Returning result
----new limit applied to position 1
new limit: 

  1

  3

  5
Old limit

  1
  2
  3

  5

Result = itself plus -1.000000 * 81.000000 * recurse

------new limit applied to position 0
new limit: 



  3

  5
Old limit

  1

  3

  5

Result = itself plus 1.000000 * 51.000000 * recurse

--------Limit mask has 2 valid spots, 3, 5
Computations: 1148.000000 = (85.000000 * 14.000000) - (7.000000 * 6.000000)
Returning result
------new limit applied to position 1
new limit: 

  1



  5
Old limit

  1

  3

  5

Result = itself plus -1.000000 * 83.000000 * recurse

--------Limit mask has 2 valid spots, 1, 5
Computations: 1356.000000 = (99.000000 * 14.000000) - (5.000000 * 6.000000)
Returning result
------new limit applied to position 2
new limit: 

  1

  3


Old limit

  1

  3

  5

Result = itself plus 1.000000 * 9.000000 * recurse

--------Limit mask has 2 valid spots, 1, 3
Computations: 268.000000 = (99.000000 * 7.000000) - (5.000000 * 85.000000)
Returning result
----new limit applied to position 2
new limit: 

  1
  2


  5
Old limit

  1
  2
  3

  5

Result = itself plus 1.000000 * 84.000000 * recurse

------new limit applied to position 0
new limit: 


  2


  5
Old limit

  1
  2


  5

Result = itself plus 1.000000 * 51.000000 * recurse

--------Limit mask has 2 valid spots, 2, 5
Computations: 1212.000000 = (90.000000 * 14.000000) - (8.000000 * 6.000000)
Returning result
------new limit applied to position 1
new limit: 

  1



  5
Old limit

  1
  2


  5

Result = itself plus -1.000000 * 74.000000 * recurse

--------Limit mask has 2 valid spots, 1, 5
Computations: 1356.000000 = (99.000000 * 14.000000) - (5.000000 * 6.000000)
Returning result
------new limit applied to position 2
new limit: 

  1
  2



Old limit

  1
  2


  5

Result = itself plus 1.000000 * 9.000000 * recurse

--------Limit mask has 2 valid spots, 1, 2
Computations: 342.000000 = (99.000000 * 8.000000) - (5.000000 * 90.000000)
Returning result
----new limit applied to position 3
new limit: 

  1
  2
  3


Old limit

  1
  2
  3

  5

Result = itself plus -1.000000 * 13.000000 * recurse

------new limit applied to position 0
new limit: 


  2
  3


Old limit

  1
  2
  3



Result = itself plus 1.000000 * 51.000000 * recurse

--------Limit mask has 2 valid spots, 2, 3
Computations: -50.000000 = (90.000000 * 7.000000) - (8.000000 * 85.000000)
Returning result
------new limit applied to position 1
new limit: 

  1

  3


Old limit

  1
  2
  3



Result = itself plus -1.000000 * 74.000000 * recurse

--------Limit mask has 2 valid spots, 1, 3
Computations: 268.000000 = (99.000000 * 7.000000) - (5.000000 * 85.000000)
Returning result
------new limit applied to position 2
new limit: 

  1
  2



Old limit

  1
  2
  3



Result = itself plus 1.000000 * 83.000000 * recurse

--------Limit mask has 2 valid spots, 1, 2
Computations: 342.000000 = (99.000000 * 8.000000) - (5.000000 * 90.000000)
Returning result
--new limit applied to position 1
new limit: 
  0

  2
  3

  5
Old limit
  0
  1
  2
  3

  5

Result = itself plus -1.000000 * 58.000000 * recurse

----new limit applied to position 0
new limit: 


  2
  3

  5
Old limit
  0

  2
  3

  5

Result = itself plus 1.000000 * 21.000000 * recurse

------new limit applied to position 0
new limit: 



  3

  5
Old limit


  2
  3

  5

Result = itself plus 1.000000 * 74.000000 * recurse

--------Limit mask has 2 valid spots, 3, 5
Computations: 1148.000000 = (85.000000 * 14.000000) - (7.000000 * 6.000000)
Returning result
------new limit applied to position 1
new limit: 


  2


  5
Old limit


  2
  3

  5

Result = itself plus -1.000000 * 83.000000 * recurse

--------Limit mask has 2 valid spots, 2, 5
Computations: 1212.000000 = (90.000000 * 14.000000) - (8.000000 * 6.000000)
Returning result
------new limit applied to position 2
new limit: 


  2
  3


Old limit


  2
  3

  5

Result = itself plus 1.000000 * 9.000000 * recurse

--------Limit mask has 2 valid spots, 2, 3
Computations: -50.000000 = (90.000000 * 7.000000) - (8.000000 * 85.000000)
Returning result
----new limit applied to position 1
new limit: 
  0


  3

  5
Old limit
  0

  2
  3

  5

Result = itself plus -1.000000 * 81.000000 * recurse

------new limit applied to position 0
new limit: 



  3

  5
Old limit
  0


  3

  5

Result = itself plus 1.000000 * 76.000000 * recurse

--------Limit mask has 2 valid spots, 3, 5
Computations: 1148.000000 = (85.000000 * 14.000000) - (7.000000 * 6.000000)
Returning result
------new limit applied to position 1
new limit: 
  0




  5
Old limit
  0


  3

  5

Result = itself plus -1.000000 * 83.000000 * recurse

--------Limit mask has 2 valid spots, 0, 5
Computations: 26.000000 = (7.000000 * 14.000000) - (12.000000 * 6.000000)
Returning result
------new limit applied to position 2
new limit: 
  0


  3


Old limit
  0


  3

  5

Result = itself plus 1.000000 * 9.000000 * recurse

--------Limit mask has 2 valid spots, 0, 3
Computations: -971.000000 = (7.000000 * 7.000000) - (12.000000 * 85.000000)
Returning result
----new limit applied to position 2
new limit: 
  0

  2


  5
Old limit
  0

  2
  3

  5

Result = itself plus 1.000000 * 84.000000 * recurse

------new limit applied to position 0
new limit: 


  2


  5
Old limit
  0

  2


  5

Result = itself plus 1.000000 * 76.000000 * recurse

--------Limit mask has 2 valid spots, 2, 5
Computations: 1212.000000 = (90.000000 * 14.000000) - (8.000000 * 6.000000)
Returning result
------new limit applied to position 1
new limit: 
  0




  5
Old limit
  0

  2


  5

Result = itself plus -1.000000 * 74.000000 * recurse

--------Limit mask has 2 valid spots, 0, 5
Computations: 26.000000 = (7.000000 * 14.000000) - (12.000000 * 6.000000)
Returning result
------new limit applied to position 2
new limit: 
  0

  2



Old limit
  0

  2


  5

Result = itself plus 1.000000 * 9.000000 * recurse

--------Limit mask has 2 valid spots, 0, 2
Computations: -1024.000000 = (7.000000 * 8.000000) - (12.000000 * 90.000000)
Returning result
----new limit applied to position 3
new limit: 
  0

  2
  3


Old limit
  0

  2
  3

  5

Result = itself plus -1.000000 * 13.000000 * recurse

------new limit applied to position 0
new limit: 


  2
  3


Old limit
  0

  2
  3



Result = itself plus 1.000000 * 76.000000 * recurse

--------Limit mask has 2 valid spots, 2, 3
Computations: -50.000000 = (90.000000 * 7.000000) - (8.000000 * 85.000000)
Returning result
------new limit applied to position 1
new limit: 
  0


  3


Old limit
  0

  2
  3



Result = itself plus -1.000000 * 74.000000 * recurse

--------Limit mask has 2 valid spots, 0, 3
Computations: -971.000000 = (7.000000 * 7.000000) - (12.000000 * 85.000000)
Returning result
------new limit applied to position 2
new limit: 
  0

  2



Old limit
  0

  2
  3



Result = itself plus 1.000000 * 83.000000 * recurse

--------Limit mask has 2 valid spots, 0, 2
Computations: -1024.000000 = (7.000000 * 8.000000) - (12.000000 * 90.000000)
Returning result
--new limit applied to position 2
new limit: 
  0
  1

  3

  5
Old limit
  0
  1
  2
  3

  5

Result = itself plus 1.000000 * 22.000000 * recurse

----new limit applied to position 0
new limit: 

  1

  3

  5
Old limit
  0
  1

  3

  5

Result = itself plus 1.000000 * 21.000000 * recurse

------new limit applied to position 0
new limit: 



  3

  5
Old limit

  1

  3

  5

Result = itself plus 1.000000 * 51.000000 * recurse

--------Limit mask has 2 valid spots, 3, 5
Computations: 1148.000000 = (85.000000 * 14.000000) - (7.000000 * 6.000000)
Returning result
------new limit applied to position 1
new limit: 

  1



  5
Old limit

  1

  3

  5

Result = itself plus -1.000000 * 83.000000 * recurse

--------Limit mask has 2 valid spots, 1, 5
Computations: 1356.000000 = (99.000000 * 14.000000) - (5.000000 * 6.000000)
Returning result
------new limit applied to position 2
new limit: 

  1

  3


Old limit

  1

  3

  5

Result = itself plus 1.000000 * 9.000000 * recurse

--------Limit mask has 2 valid spots, 1, 3
Computations: 268.000000 = (99.000000 * 7.000000) - (5.000000 * 85.000000)
Returning result
----new limit applied to position 1
new limit: 
  0


  3

  5
Old limit
  0
  1

  3

  5

Result = itself plus -1.000000 * 14.000000 * recurse

------new limit applied to position 0
new limit: 



  3

  5
Old limit
  0


  3

  5

Result = itself plus 1.000000 * 76.000000 * recurse

--------Limit mask has 2 valid spots, 3, 5
Computations: 1148.000000 = (85.000000 * 14.000000) - (7.000000 * 6.000000)
Returning result
------new limit applied to position 1
new limit: 
  0




  5
Old limit
  0


  3

  5

Result = itself plus -1.000000 * 83.000000 * recurse

--------Limit mask has 2 valid spots, 0, 5
Computations: 26.000000 = (7.000000 * 14.000000) - (12.000000 * 6.000000)
Returning result
------new limit applied to position 2
new limit: 
  0


  3


Old limit
  0


  3

  5

Result = itself plus 1.000000 * 9.000000 * recurse

--------Limit mask has 2 valid spots, 0, 3
Computations: -971.000000 = (7.000000 * 7.000000) - (12.000000 * 85.000000)
Returning result
----new limit applied to position 2
new limit: 
  0
  1



  5
Old limit
  0
  1

  3

  5

Result = itself plus 1.000000 * 84.000000 * recurse

------new limit applied to position 0
new limit: 

  1



  5
Old limit
  0
  1



  5

Result = itself plus 1.000000 * 76.000000 * recurse

--------Limit mask has 2 valid spots, 1, 5
Computations: 1356.000000 = (99.000000 * 14.000000) - (5.000000 * 6.000000)
Returning result
------new limit applied to position 1
new limit: 
  0




  5
Old limit
  0
  1



  5

Result = itself plus -1.000000 * 51.000000 * recurse

--------Limit mask has 2 valid spots, 0, 5
Computations: 26.000000 = (7.000000 * 14.000000) - (12.000000 * 6.000000)
Returning result
------new limit applied to position 2
new limit: 
  0
  1




Old limit
  0
  1



  5

Result = itself plus 1.000000 * 9.000000 * recurse

--------Limit mask has 2 valid spots, 0, 1
Computations: -1153.000000 = (7.000000 * 5.000000) - (12.000000 * 99.000000)
Returning result
----new limit applied to position 3
new limit: 
  0
  1

  3


Old limit
  0
  1

  3

  5

Result = itself plus -1.000000 * 13.000000 * recurse

------new limit applied to position 0
new limit: 

  1

  3


Old limit
  0
  1

  3



Result = itself plus 1.000000 * 76.000000 * recurse

--------Limit mask has 2 valid spots, 1, 3
Computations: 268.000000 = (99.000000 * 7.000000) - (5.000000 * 85.000000)
Returning result
------new limit applied to position 1
new limit: 
  0


  3


Old limit
  0
  1

  3



Result = itself plus -1.000000 * 51.000000 * recurse

--------Limit mask has 2 valid spots, 0, 3
Computations: -971.000000 = (7.000000 * 7.000000) - (12.000000 * 85.000000)
Returning result
------new limit applied to position 2
new limit: 
  0
  1




Old limit
  0
  1

  3



Result = itself plus 1.000000 * 83.000000 * recurse

--------Limit mask has 2 valid spots, 0, 1
Computations: -1153.000000 = (7.000000 * 5.000000) - (12.000000 * 99.000000)
Returning result
--new limit applied to position 3
new limit: 
  0
  1
  2


  5
Old limit
  0
  1
  2
  3

  5

Result = itself plus -1.000000 * 19.000000 * recurse

----new limit applied to position 0
new limit: 

  1
  2


  5
Old limit
  0
  1
  2


  5

Result = itself plus 1.000000 * 21.000000 * recurse

------new limit applied to position 0
new limit: 


  2


  5
Old limit

  1
  2


  5

Result = itself plus 1.000000 * 51.000000 * recurse

--------Limit mask has 2 valid spots, 2, 5
Computations: 1212.000000 = (90.000000 * 14.000000) - (8.000000 * 6.000000)
Returning result
------new limit applied to position 1
new limit: 

  1



  5
Old limit

  1
  2


  5

Result = itself plus -1.000000 * 74.000000 * recurse

--------Limit mask has 2 valid spots, 1, 5
Computations: 1356.000000 = (99.000000 * 14.000000) - (5.000000 * 6.000000)
Returning result
------new limit applied to position 2
new limit: 

  1
  2



Old limit

  1
  2


  5

Result = itself plus 1.000000 * 9.000000 * recurse

--------Limit mask has 2 valid spots, 1, 2
Computations: 342.000000 = (99.000000 * 8.000000) - (5.000000 * 90.000000)
Returning result
----new limit applied to position 1
new limit: 
  0

  2


  5
Old limit
  0
  1
  2


  5

Result = itself plus -1.000000 * 14.000000 * recurse

------new limit applied to position 0
new limit: 


  2


  5
Old limit
  0

  2


  5

Result = itself plus 1.000000 * 76.000000 * recurse

--------Limit mask has 2 valid spots, 2, 5
Computations: 1212.000000 = (90.000000 * 14.000000) - (8.000000 * 6.000000)
Returning result
------new limit applied to position 1
new limit: 
  0




  5
Old limit
  0

  2


  5

Result = itself plus -1.000000 * 74.000000 * recurse

--------Limit mask has 2 valid spots, 0, 5
Computations: 26.000000 = (7.000000 * 14.000000) - (12.000000 * 6.000000)
Returning result
------new limit applied to position 2
new limit: 
  0

  2



Old limit
  0

  2


  5

Result = itself plus 1.000000 * 9.000000 * recurse

--------Limit mask has 2 valid spots, 0, 2
Computations: -1024.000000 = (7.000000 * 8.000000) - (12.000000 * 90.000000)
Returning result
----new limit applied to position 2
new limit: 
  0
  1



  5
Old limit
  0
  1
  2


  5

Result = itself plus 1.000000 * 81.000000 * recurse

------new limit applied to position 0
new limit: 

  1



  5
Old limit
  0
  1



  5

Result = itself plus 1.000000 * 76.000000 * recurse

--------Limit mask has 2 valid spots, 1, 5
Computations: 1356.000000 = (99.000000 * 14.000000) - (5.000000 * 6.000000)
Returning result
------new limit applied to position 1
new limit: 
  0




  5
Old limit
  0
  1



  5

Result = itself plus -1.000000 * 51.000000 * recurse

--------Limit mask has 2 valid spots, 0, 5
Computations: 26.000000 = (7.000000 * 14.000000) - (12.000000 * 6.000000)
Returning result
------new limit applied to position 2
new limit: 
  0
  1




Old limit
  0
  1



  5

Result = itself plus 1.000000 * 9.000000 * recurse

--------Limit mask has 2 valid spots, 0, 1
Computations: -1153.000000 = (7.000000 * 5.000000) - (12.000000 * 99.000000)
Returning result
----new limit applied to position 3
new limit: 
  0
  1
  2



Old limit
  0
  1
  2


  5

Result = itself plus -1.000000 * 13.000000 * recurse

------new limit applied to position 0
new limit: 

  1
  2



Old limit
  0
  1
  2




Result = itself plus 1.000000 * 76.000000 * recurse

--------Limit mask has 2 valid spots, 1, 2
Computations: 342.000000 = (99.000000 * 8.000000) - (5.000000 * 90.000000)
Returning result
------new limit applied to position 1
new limit: 
  0

  2



Old limit
  0
  1
  2




Result = itself plus -1.000000 * 51.000000 * recurse

--------Limit mask has 2 valid spots, 0, 2
Computations: -1024.000000 = (7.000000 * 8.000000) - (12.000000 * 90.000000)
Returning result
------new limit applied to position 2
new limit: 
  0
  1




Old limit
  0
  1
  2




Result = itself plus 1.000000 * 74.000000 * recurse

--------Limit mask has 2 valid spots, 0, 1
Computations: -1153.000000 = (7.000000 * 5.000000) - (12.000000 * 99.000000)
Returning result
--new limit applied to position 4
new limit: 
  0
  1
  2
  3


Old limit
  0
  1
  2
  3

  5

Result = itself plus 1.000000 * 22.000000 * recurse

----new limit applied to position 0
new limit: 

  1
  2
  3


Old limit
  0
  1
  2
  3



Result = itself plus 1.000000 * 21.000000 * recurse

------new limit applied to position 0
new limit: 


  2
  3


Old limit

  1
  2
  3



Result = itself plus 1.000000 * 51.000000 * recurse

--------Limit mask has 2 valid spots, 2, 3
Computations: -50.000000 = (90.000000 * 7.000000) - (8.000000 * 85.000000)
Returning result
------new limit applied to position 1
new limit: 

  1

  3


Old limit

  1
  2
  3



Result = itself plus -1.000000 * 74.000000 * recurse

--------Limit mask has 2 valid spots, 1, 3
Computations: 268.000000 = (99.000000 * 7.000000) - (5.000000 * 85.000000)
Returning result
------new limit applied to position 2
new limit: 

  1
  2



Old limit

  1
  2
  3



Result = itself plus 1.000000 * 83.000000 * recurse

--------Limit mask has 2 valid spots, 1, 2
Computations: 342.000000 = (99.000000 * 8.000000) - (5.000000 * 90.000000)
Returning result
----new limit applied to position 1
new limit: 
  0

  2
  3


Old limit
  0
  1
  2
  3



Result = itself plus -1.000000 * 14.000000 * recurse

------new limit applied to position 0
new limit: 


  2
  3


Old limit
  0

  2
  3



Result = itself plus 1.000000 * 76.000000 * recurse

--------Limit mask has 2 valid spots, 2, 3
Computations: -50.000000 = (90.000000 * 7.000000) - (8.000000 * 85.000000)
Returning result
------new limit applied to position 1
new limit: 
  0


  3


Old limit
  0

  2
  3



Result = itself plus -1.000000 * 74.000000 * recurse

--------Limit mask has 2 valid spots, 0, 3
Computations: -971.000000 = (7.000000 * 7.000000) - (12.000000 * 85.000000)
Returning result
------new limit applied to position 2
new limit: 
  0

  2



Old limit
  0

  2
  3



Result = itself plus 1.000000 * 83.000000 * recurse

--------Limit mask has 2 valid spots, 0, 2
Computations: -1024.000000 = (7.000000 * 8.000000) - (12.000000 * 90.000000)
Returning result
----new limit applied to position 2
new limit: 
  0
  1

  3


Old limit
  0
  1
  2
  3



Result = itself plus 1.000000 * 81.000000 * recurse

------new limit applied to position 0
new limit: 

  1

  3


Old limit
  0
  1

  3



Result = itself plus 1.000000 * 76.000000 * recurse

--------Limit mask has 2 valid spots, 1, 3
Computations: 268.000000 = (99.000000 * 7.000000) - (5.000000 * 85.000000)
Returning result
------new limit applied to position 1
new limit: 
  0


  3


Old limit
  0
  1

  3



Result = itself plus -1.000000 * 51.000000 * recurse

--------Limit mask has 2 valid spots, 0, 3
Computations: -971.000000 = (7.000000 * 7.000000) - (12.000000 * 85.000000)
Returning result
------new limit applied to position 2
new limit: 
  0
  1




Old limit
  0
  1

  3



Result = itself plus 1.000000 * 83.000000 * recurse

--------Limit mask has 2 valid spots, 0, 1
Computations: -1153.000000 = (7.000000 * 5.000000) - (12.000000 * 99.000000)
Returning result
----new limit applied to position 3
new limit: 
  0
  1
  2



Old limit
  0
  1
  2
  3



Result = itself plus -1.000000 * 84.000000 * recurse

------new limit applied to position 0
new limit: 

  1
  2



Old limit
  0
  1
  2




Result = itself plus 1.000000 * 76.000000 * recurse

--------Limit mask has 2 valid spots, 1, 2
Computations: 342.000000 = (99.000000 * 8.000000) - (5.000000 * 90.000000)
Returning result
------new limit applied to position 1
new limit: 
  0

  2



Old limit
  0
  1
  2




Result = itself plus -1.000000 * 51.000000 * recurse

--------Limit mask has 2 valid spots, 0, 2
Computations: -1024.000000 = (7.000000 * 8.000000) - (12.000000 * 90.000000)
Returning result
------new limit applied to position 2
new limit: 
  0
  1




Old limit
  0
  1
  2




Result = itself plus 1.000000 * 74.000000 * recurse

--------Limit mask has 2 valid spots, 0, 1
Computations: -1153.000000 = (7.000000 * 5.000000) - (12.000000 * 99.000000)
Returning result

New limit is at position 5
Result will equal -1.000000 * 19.000000 * recurse

--new limit applied to position 0
new limit: 

  1
  2
  3
  4

Old limit
  0
  1
  2
  3
  4


Result = itself plus 1.000000 * 72.000000 * recurse

----new limit applied to position 0
new limit: 


  2
  3
  4

Old limit

  1
  2
  3
  4


Result = itself plus 1.000000 * 14.000000 * recurse

------new limit applied to position 0
new limit: 



  3
  4

Old limit


  2
  3
  4


Result = itself plus 1.000000 * 74.000000 * recurse

--------Limit mask has 2 valid spots, 3, 4
Computations: -292.000000 = (85.000000 * 2.000000) - (7.000000 * 66.000000)
Returning result
------new limit applied to position 1
new limit: 


  2

  4

Old limit


  2
  3
  4


Result = itself plus -1.000000 * 83.000000 * recurse

--------Limit mask has 2 valid spots, 2, 4
Computations: -348.000000 = (90.000000 * 2.000000) - (8.000000 * 66.000000)
Returning result
------new limit applied to position 2
new limit: 


  2
  3


Old limit


  2
  3
  4


Result = itself plus 1.000000 * -3.500000 * recurse

--------Limit mask has 2 valid spots, 2, 3
Computations: -50.000000 = (90.000000 * 7.000000) - (8.000000 * 85.000000)
Returning result
----new limit applied to position 1
new limit: 

  1

  3
  4

Old limit

  1
  2
  3
  4


Result = itself plus -1.000000 * 81.000000 * recurse

------new limit applied to position 0
new limit: 



  3
  4

Old limit

  1

  3
  4


Result = itself plus 1.000000 * 51.000000 * recurse

--------Limit mask has 2 valid spots, 3, 4
Computations: -292.000000 = (85.000000 * 2.000000) - (7.000000 * 66.000000)
Returning result
------new limit applied to position 1
new limit: 

  1


  4

Old limit

  1

  3
  4


Result = itself plus -1.000000 * 83.000000 * recurse

--------Limit mask has 2 valid spots, 1, 4
Computations: -132.000000 = (99.000000 * 2.000000) - (5.000000 * 66.000000)
Returning result
------new limit applied to position 2
new limit: 

  1

  3


Old limit

  1

  3
  4


Result = itself plus 1.000000 * -3.500000 * recurse

--------Limit mask has 2 valid spots, 1, 3
Computations: 268.000000 = (99.000000 * 7.000000) - (5.000000 * 85.000000)
Returning result
----new limit applied to position 2
new limit: 

  1
  2

  4

Old limit

  1
  2
  3
  4


Result = itself plus 1.000000 * 84.000000 * recurse

------new limit applied to position 0
new limit: 


  2

  4

Old limit

  1
  2

  4


Result = itself plus 1.000000 * 51.000000 * recurse

--------Limit mask has 2 valid spots, 2, 4
Computations: -348.000000 = (90.000000 * 2.000000) - (8.000000 * 66.000000)
Returning result
------new limit applied to position 1
new limit: 

  1


  4

Old limit

  1
  2

  4


Result = itself plus -1.000000 * 74.000000 * recurse

--------Limit mask has 2 valid spots, 1, 4
Computations: -132.000000 = (99.000000 * 2.000000) - (5.000000 * 66.000000)
Returning result
------new limit applied to position 2
new limit: 

  1
  2



Old limit

  1
  2

  4


Result = itself plus 1.000000 * -3.500000 * recurse

--------Limit mask has 2 valid spots, 1, 2
Computations: 342.000000 = (99.000000 * 8.000000) - (5.000000 * 90.000000)
Returning result
----new limit applied to position 3
new limit: 

  1
  2
  3


Old limit

  1
  2
  3
  4


Result = itself plus -1.000000 * 1.000000 * recurse

------new limit applied to position 0
new limit: 


  2
  3


Old limit

  1
  2
  3



Result = itself plus 1.000000 * 51.000000 * recurse

--------Limit mask has 2 valid spots, 2, 3
Computations: -50.000000 = (90.000000 * 7.000000) - (8.000000 * 85.000000)
Returning result
------new limit applied to position 1
new limit: 

  1

  3


Old limit

  1
  2
  3



Result = itself plus -1.000000 * 74.000000 * recurse

--------Limit mask has 2 valid spots, 1, 3
Computations: 268.000000 = (99.000000 * 7.000000) - (5.000000 * 85.000000)
Returning result
------new limit applied to position 2
new limit: 

  1
  2



Old limit

  1
  2
  3



Result = itself plus 1.000000 * 83.000000 * recurse

--------Limit mask has 2 valid spots, 1, 2
Computations: 342.000000 = (99.000000 * 8.000000) - (5.000000 * 90.000000)
Returning result
--new limit applied to position 1
new limit: 
  0

  2
  3
  4

Old limit
  0
  1
  2
  3
  4


Result = itself plus -1.000000 * 58.000000 * recurse

----new limit applied to position 0
new limit: 


  2
  3
  4

Old limit
  0

  2
  3
  4


Result = itself plus 1.000000 * 21.000000 * recurse

------new limit applied to position 0
new limit: 



  3
  4

Old limit


  2
  3
  4


Result = itself plus 1.000000 * 74.000000 * recurse

--------Limit mask has 2 valid spots, 3, 4
Computations: -292.000000 = (85.000000 * 2.000000) - (7.000000 * 66.000000)
Returning result
------new limit applied to position 1
new limit: 


  2

  4

Old limit


  2
  3
  4


Result = itself plus -1.000000 * 83.000000 * recurse

--------Limit mask has 2 valid spots, 2, 4
Computations: -348.000000 = (90.000000 * 2.000000) - (8.000000 * 66.000000)
Returning result
------new limit applied to position 2
new limit: 


  2
  3


Old limit


  2
  3
  4


Result = itself plus 1.000000 * -3.500000 * recurse

--------Limit mask has 2 valid spots, 2, 3
Computations: -50.000000 = (90.000000 * 7.000000) - (8.000000 * 85.000000)
Returning result
----new limit applied to position 1
new limit: 
  0


  3
  4

Old limit
  0

  2
  3
  4


Result = itself plus -1.000000 * 81.000000 * recurse

------new limit applied to position 0
new limit: 



  3
  4

Old limit
  0


  3
  4


Result = itself plus 1.000000 * 76.000000 * recurse

--------Limit mask has 2 valid spots, 3, 4
Computations: -292.000000 = (85.000000 * 2.000000) - (7.000000 * 66.000000)
Returning result
------new limit applied to position 1
new limit: 
  0



  4

Old limit
  0


  3
  4


Result = itself plus -1.000000 * 83.000000 * recurse

--------Limit mask has 2 valid spots, 0, 4
Computations: -778.000000 = (7.000000 * 2.000000) - (12.000000 * 66.000000)
Returning result
------new limit applied to position 2
new limit: 
  0


  3


Old limit
  0


  3
  4


Result = itself plus 1.000000 * -3.500000 * recurse

--------Limit mask has 2 valid spots, 0, 3
Computations: -971.000000 = (7.000000 * 7.000000) - (12.000000 * 85.000000)
Returning result
----new limit applied to position 2
new limit: 
  0

  2

  4

Old limit
  0

  2
  3
  4


Result = itself plus 1.000000 * 84.000000 * recurse

------new limit applied to position 0
new limit: 


  2

  4

Old limit
  0

  2

  4


Result = itself plus 1.000000 * 76.000000 * recurse

--------Limit mask has 2 valid spots, 2, 4
Computations: -348.000000 = (90.000000 * 2.000000) - (8.000000 * 66.000000)
Returning result
------new limit applied to position 1
new limit: 
  0



  4

Old limit
  0

  2

  4


Result = itself plus -1.000000 * 74.000000 * recurse

--------Limit mask has 2 valid spots, 0, 4
Computations: -778.000000 = (7.000000 * 2.000000) - (12.000000 * 66.000000)
Returning result
------new limit applied to position 2
new limit: 
  0

  2



Old limit
  0

  2

  4


Result = itself plus 1.000000 * -3.500000 * recurse

--------Limit mask has 2 valid spots, 0, 2
Computations: -1024.000000 = (7.000000 * 8.000000) - (12.000000 * 90.000000)
Returning result
----new limit applied to position 3
new limit: 
  0

  2
  3


Old limit
  0

  2
  3
  4


Result = itself plus -1.000000 * 1.000000 * recurse

------new limit applied to position 0
new limit: 


  2
  3


Old limit
  0

  2
  3



Result = itself plus 1.000000 * 76.000000 * recurse

--------Limit mask has 2 valid spots, 2, 3
Computations: -50.000000 = (90.000000 * 7.000000) - (8.000000 * 85.000000)
Returning result
------new limit applied to position 1
new limit: 
  0


  3


Old limit
  0

  2
  3



Result = itself plus -1.000000 * 74.000000 * recurse

--------Limit mask has 2 valid spots, 0, 3
Computations: -971.000000 = (7.000000 * 7.000000) - (12.000000 * 85.000000)
Returning result
------new limit applied to position 2
new limit: 
  0

  2



Old limit
  0

  2
  3



Result = itself plus 1.000000 * 83.000000 * recurse

--------Limit mask has 2 valid spots, 0, 2
Computations: -1024.000000 = (7.000000 * 8.000000) - (12.000000 * 90.000000)
Returning result
--new limit applied to position 2
new limit: 
  0
  1

  3
  4

Old limit
  0
  1
  2
  3
  4


Result = itself plus 1.000000 * 22.000000 * recurse

----new limit applied to position 0
new limit: 

  1

  3
  4

Old limit
  0
  1

  3
  4


Result = itself plus 1.000000 * 21.000000 * recurse

------new limit applied to position 0
new limit: 



  3
  4

Old limit

  1

  3
  4


Result = itself plus 1.000000 * 51.000000 * recurse

--------Limit mask has 2 valid spots, 3, 4
Computations: -292.000000 = (85.000000 * 2.000000) - (7.000000 * 66.000000)
Returning result
------new limit applied to position 1
new limit: 

  1


  4

Old limit

  1

  3
  4


Result = itself plus -1.000000 * 83.000000 * recurse

--------Limit mask has 2 valid spots, 1, 4
Computations: -132.000000 = (99.000000 * 2.000000) - (5.000000 * 66.000000)
Returning result
------new limit applied to position 2
new limit: 

  1

  3


Old limit

  1

  3
  4


Result = itself plus 1.000000 * -3.500000 * recurse

--------Limit mask has 2 valid spots, 1, 3
Computations: 268.000000 = (99.000000 * 7.000000) - (5.000000 * 85.000000)
Returning result
----new limit applied to position 1
new limit: 
  0


  3
  4

Old limit
  0
  1

  3
  4


Result = itself plus -1.000000 * 14.000000 * recurse

------new limit applied to position 0
new limit: 



  3
  4

Old limit
  0


  3
  4


Result = itself plus 1.000000 * 76.000000 * recurse

--------Limit mask has 2 valid spots, 3, 4
Computations: -292.000000 = (85.000000 * 2.000000) - (7.000000 * 66.000000)
Returning result
------new limit applied to position 1
new limit: 
  0



  4

Old limit
  0


  3
  4


Result = itself plus -1.000000 * 83.000000 * recurse

--------Limit mask has 2 valid spots, 0, 4
Computations: -778.000000 = (7.000000 * 2.000000) - (12.000000 * 66.000000)
Returning result
------new limit applied to position 2
new limit: 
  0


  3


Old limit
  0


  3
  4


Result = itself plus 1.000000 * -3.500000 * recurse

--------Limit mask has 2 valid spots, 0, 3
Computations: -971.000000 = (7.000000 * 7.000000) - (12.000000 * 85.000000)
Returning result
----new limit applied to position 2
new limit: 
  0
  1


  4

Old limit
  0
  1

  3
  4


Result = itself plus 1.000000 * 84.000000 * recurse

------new limit applied to position 0
new limit: 

  1


  4

Old limit
  0
  1


  4


Result = itself plus 1.000000 * 76.000000 * recurse

--------Limit mask has 2 valid spots, 1, 4
Computations: -132.000000 = (99.000000 * 2.000000) - (5.000000 * 66.000000)
Returning result
------new limit applied to position 1
new limit: 
  0



  4

Old limit
  0
  1


  4


Result = itself plus -1.000000 * 51.000000 * recurse

--------Limit mask has 2 valid spots, 0, 4
Computations: -778.000000 = (7.000000 * 2.000000) - (12.000000 * 66.000000)
Returning result
------new limit applied to position 2
new limit: 
  0
  1




Old limit
  0
  1


  4


Result = itself plus 1.000000 * -3.500000 * recurse

--------Limit mask has 2 valid spots, 0, 1
Computations: -1153.000000 = (7.000000 * 5.000000) - (12.000000 * 99.000000)
Returning result
----new limit applied to position 3
new limit: 
  0
  1

  3


Old limit
  0
  1

  3
  4


Result = itself plus -1.000000 * 1.000000 * recurse

------new limit applied to position 0
new limit: 

  1

  3


Old limit
  0
  1

  3



Result = itself plus 1.000000 * 76.000000 * recurse

--------Limit mask has 2 valid spots, 1, 3
Computations: 268.000000 = (99.000000 * 7.000000) - (5.000000 * 85.000000)
Returning result
------new limit applied to position 1
new limit: 
  0


  3


Old limit
  0
  1

  3



Result = itself plus -1.000000 * 51.000000 * recurse

--------Limit mask has 2 valid spots, 0, 3
Computations: -971.000000 = (7.000000 * 7.000000) - (12.000000 * 85.000000)
Returning result
------new limit applied to position 2
new limit: 
  0
  1




Old limit
  0
  1

  3



Result = itself plus 1.000000 * 83.000000 * recurse

--------Limit mask has 2 valid spots, 0, 1
Computations: -1153.000000 = (7.000000 * 5.000000) - (12.000000 * 99.000000)
Returning result
--new limit applied to position 3
new limit: 
  0
  1
  2

  4

Old limit
  0
  1
  2
  3
  4


Result = itself plus -1.000000 * 19.000000 * recurse

----new limit applied to position 0
new limit: 

  1
  2

  4

Old limit
  0
  1
  2

  4


Result = itself plus 1.000000 * 21.000000 * recurse

------new limit applied to position 0
new limit: 


  2

  4

Old limit

  1
  2

  4


Result = itself plus 1.000000 * 51.000000 * recurse

--------Limit mask has 2 valid spots, 2, 4
Computations: -348.000000 = (90.000000 * 2.000000) - (8.000000 * 66.000000)
Returning result
------new limit applied to position 1
new limit: 

  1


  4

Old limit

  1
  2

  4


Result = itself plus -1.000000 * 74.000000 * recurse

--------Limit mask has 2 valid spots, 1, 4
Computations: -132.000000 = (99.000000 * 2.000000) - (5.000000 * 66.000000)
Returning result
------new limit applied to position 2
new limit: 

  1
  2



Old limit

  1
  2

  4


Result = itself plus 1.000000 * -3.500000 * recurse

--------Limit mask has 2 valid spots, 1, 2
Computations: 342.000000 = (99.000000 * 8.000000) - (5.000000 * 90.000000)
Returning result
----new limit applied to position 1
new limit: 
  0

  2

  4

Old limit
  0
  1
  2

  4


Result = itself plus -1.000000 * 14.000000 * recurse

------new limit applied to position 0
new limit: 


  2

  4

Old limit
  0

  2

  4


Result = itself plus 1.000000 * 76.000000 * recurse

--------Limit mask has 2 valid spots, 2, 4
Computations: -348.000000 = (90.000000 * 2.000000) - (8.000000 * 66.000000)
Returning result
------new limit applied to position 1
new limit: 
  0



  4

Old limit
  0

  2

  4


Result = itself plus -1.000000 * 74.000000 * recurse

--------Limit mask has 2 valid spots, 0, 4
Computations: -778.000000 = (7.000000 * 2.000000) - (12.000000 * 66.000000)
Returning result
------new limit applied to position 2
new limit: 
  0

  2



Old limit
  0

  2

  4


Result = itself plus 1.000000 * -3.500000 * recurse

--------Limit mask has 2 valid spots, 0, 2
Computations: -1024.000000 = (7.000000 * 8.000000) - (12.000000 * 90.000000)
Returning result
----new limit applied to position 2
new limit: 
  0
  1


  4

Old limit
  0
  1
  2

  4


Result = itself plus 1.000000 * 81.000000 * recurse

------new limit applied to position 0
new limit: 

  1


  4

Old limit
  0
  1


  4


Result = itself plus 1.000000 * 76.000000 * recurse

--------Limit mask has 2 valid spots, 1, 4
Computations: -132.000000 = (99.000000 * 2.000000) - (5.000000 * 66.000000)
Returning result
------new limit applied to position 1
new limit: 
  0



  4

Old limit
  0
  1


  4


Result = itself plus -1.000000 * 51.000000 * recurse

--------Limit mask has 2 valid spots, 0, 4
Computations: -778.000000 = (7.000000 * 2.000000) - (12.000000 * 66.000000)
Returning result
------new limit applied to position 2
new limit: 
  0
  1




Old limit
  0
  1


  4


Result = itself plus 1.000000 * -3.500000 * recurse

--------Limit mask has 2 valid spots, 0, 1
Computations: -1153.000000 = (7.000000 * 5.000000) - (12.000000 * 99.000000)
Returning result
----new limit applied to position 3
new limit: 
  0
  1
  2



Old limit
  0
  1
  2

  4


Result = itself plus -1.000000 * 1.000000 * recurse

------new limit applied to position 0
new limit: 

  1
  2



Old limit
  0
  1
  2




Result = itself plus 1.000000 * 76.000000 * recurse

--------Limit mask has 2 valid spots, 1, 2
Computations: 342.000000 = (99.000000 * 8.000000) - (5.000000 * 90.000000)
Returning result
------new limit applied to position 1
new limit: 
  0

  2



Old limit
  0
  1
  2




Result = itself plus -1.000000 * 51.000000 * recurse

--------Limit mask has 2 valid spots, 0, 2
Computations: -1024.000000 = (7.000000 * 8.000000) - (12.000000 * 90.000000)
Returning result
------new limit applied to position 2
new limit: 
  0
  1




Old limit
  0
  1
  2




Result = itself plus 1.000000 * 74.000000 * recurse

--------Limit mask has 2 valid spots, 0, 1
Computations: -1153.000000 = (7.000000 * 5.000000) - (12.000000 * 99.000000)
Returning result
--new limit applied to position 4
new limit: 
  0
  1
  2
  3


Old limit
  0
  1
  2
  3
  4


Result = itself plus 1.000000 * 12.000000 * recurse

----new limit applied to position 0
new limit: 

  1
  2
  3


Old limit
  0
  1
  2
  3



Result = itself plus 1.000000 * 21.000000 * recurse

------new limit applied to position 0
new limit: 


  2
  3


Old limit

  1
  2
  3



Result = itself plus 1.000000 * 51.000000 * recurse

--------Limit mask has 2 valid spots, 2, 3
Computations: -50.000000 = (90.000000 * 7.000000) - (8.000000 * 85.000000)
Returning result
------new limit applied to position 1
new limit: 

  1

  3


Old limit

  1
  2
  3



Result = itself plus -1.000000 * 74.000000 * recurse

--------Limit mask has 2 valid spots, 1, 3
Computations: 268.000000 = (99.000000 * 7.000000) - (5.000000 * 85.000000)
Returning result
------new limit applied to position 2
new limit: 

  1
  2



Old limit

  1
  2
  3



Result = itself plus 1.000000 * 83.000000 * recurse

--------Limit mask has 2 valid spots, 1, 2
Computations: 342.000000 = (99.000000 * 8.000000) - (5.000000 * 90.000000)
Returning result
----new limit applied to position 1
new limit: 
  0

  2
  3


Old limit
  0
  1
  2
  3



Result = itself plus -1.000000 * 14.000000 * recurse

------new limit applied to position 0
new limit: 


  2
  3


Old limit
  0

  2
  3



Result = itself plus 1.000000 * 76.000000 * recurse

--------Limit mask has 2 valid spots, 2, 3
Computations: -50.000000 = (90.000000 * 7.000000) - (8.000000 * 85.000000)
Returning result
------new limit applied to position 1
new limit: 
  0


  3


Old limit
  0

  2
  3



Result = itself plus -1.000000 * 74.000000 * recurse

--------Limit mask has 2 valid spots, 0, 3
Computations: -971.000000 = (7.000000 * 7.000000) - (12.000000 * 85.000000)
Returning result
------new limit applied to position 2
new limit: 
  0

  2



Old limit
  0

  2
  3



Result = itself plus 1.000000 * 83.000000 * recurse

--------Limit mask has 2 valid spots, 0, 2
Computations: -1024.000000 = (7.000000 * 8.000000) - (12.000000 * 90.000000)
Returning result
----new limit applied to position 2
new limit: 
  0
  1

  3


Old limit
  0
  1
  2
  3



Result = itself plus 1.000000 * 81.000000 * recurse

------new limit applied to position 0
new limit: 

  1

  3


Old limit
  0
  1

  3



Result = itself plus 1.000000 * 76.000000 * recurse

--------Limit mask has 2 valid spots, 1, 3
Computations: 268.000000 = (99.000000 * 7.000000) - (5.000000 * 85.000000)
Returning result
------new limit applied to position 1
new limit: 
  0


  3


Old limit
  0
  1

  3



Result = itself plus -1.000000 * 51.000000 * recurse

--------Limit mask has 2 valid spots, 0, 3
Computations: -971.000000 = (7.000000 * 7.000000) - (12.000000 * 85.000000)
Returning result
------new limit applied to position 2
new limit: 
  0
  1




Old limit
  0
  1

  3



Result = itself plus 1.000000 * 83.000000 * recurse

--------Limit mask has 2 valid spots, 0, 1
Computations: -1153.000000 = (7.000000 * 5.000000) - (12.000000 * 99.000000)
Returning result
----new limit applied to position 3
new limit: 
  0
  1
  2



Old limit
  0
  1
  2
  3



Result = itself plus -1.000000 * 84.000000 * recurse

------new limit applied to position 0
new limit: 

  1
  2



Old limit
  0
  1
  2




Result = itself plus 1.000000 * 76.000000 * recurse

--------Limit mask has 2 valid spots, 1, 2
Computations: 342.000000 = (99.000000 * 8.000000) - (5.000000 * 90.000000)
Returning result
------new limit applied to position 1
new limit: 
  0

  2



Old limit
  0
  1
  2




Result = itself plus -1.000000 * 51.000000 * recurse

--------Limit mask has 2 valid spots, 0, 2
Computations: -1024.000000 = (7.000000 * 8.000000) - (12.000000 * 90.000000)
Returning result
------new limit applied to position 2
new limit: 
  0
  1




Old limit
  0
  1
  2




Result = itself plus 1.000000 * 74.000000 * recurse

--------Limit mask has 2 valid spots, 0, 1
Computations: -1153.000000 = (7.000000 * 5.000000) - (12.000000 * 99.000000)
Returning result
--------------------------------------------------------------------------------
Taking determinant of the following matrix

  10.0000    15.0000    3.0000  
  6.0000    1.0000    5.0000  
  2.0000    9.0000    17.0000  




New limit is at position 0
Result will equal 1.000000 * 10.000000 * recurse

--Limit mask has 2 valid spots, 1, 2
Computations: -28.000000 = (1.000000 * 17.000000) - (9.000000 * 5.000000)
Returning result

New limit is at position 1
Result will equal -1.000000 * 15.000000 * recurse

--Limit mask has 2 valid spots, 0, 2
Computations: 92.000000 = (6.000000 * 17.000000) - (2.000000 * 5.000000)
Returning result

New limit is at position 2
Result will equal 1.000000 * 3.000000 * recurse

--Limit mask has 2 valid spots, 0, 1
Computations: 52.000000 = (6.000000 * 9.000000) - (2.000000 * 1.000000)
Returning result
